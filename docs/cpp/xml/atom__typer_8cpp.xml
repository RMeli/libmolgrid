<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="atom__typer_8cpp" kind="file" language="C++">
    <compoundname>atom_typer.cpp</compoundname>
    <includes refid="atom__typer_8h" local="yes">libmolgrid/atom_typer.h</includes>
    <includes local="no">openbabel/obiter.h</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">openbabel/elements.h</includes>
    <incdepgraph>
      <node id="11">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="12">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="2">
        <label>libmolgrid/atom_typer.h</label>
        <link refid="atom__typer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>openbabel/atom.h</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="10">
        <label>openbabel/obiter.h</label>
      </node>
      <node id="4">
        <label>openbabel/elements.h</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="1">
        <label>atom_typer.cpp</label>
        <link refid="atom__typer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelibmolgrid">libmolgrid</innernamespace>
    <innernamespace refid="namespaceOpenBabel">OpenBabel</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="atom__typer_8cpp_1a78330d529d08063ad8c2f846591bf62b" prot="public" static="no">
        <name>GET_SYMBOL</name>
        <initializer>OpenBabel::OBElements::GetSymbol</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" line="17" column="12" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="atom__typer_8cpp_1ad07fa1680b4c52f075ce19270399b935" prot="public" static="no">
        <name>GET_COVALENT_RAD</name>
        <initializer>OBElements::GetCovalentRad</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" line="18" column="10" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="atom__typer_8cpp_1af8bca12527bac4b474e2ccb5acd8691e" prot="public" static="no">
        <name>GET_NAME</name>
        <initializer>OBElements::GetName</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" line="19" column="10" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>atom_typer.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Routines<sp/>for<sp/>typing<sp/>and<sp/>mapping<sp/>atoms.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Feb<sp/>27,<sp/>2019</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>dkoes</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atom__typer_8h" kindref="compound">libmolgrid/atom_typer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openbabel/obiter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(OB_VERSION<sp/>&gt;=<sp/>OB_VERSION_CHECK(2,4,90))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;openbabel/elements.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="atom__typer_8cpp_1a78330d529d08063ad8c2f846591bf62b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GET_SYMBOL<sp/>OpenBabel::OBElements::GetSymbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="atom__typer_8cpp_1ad07fa1680b4c52f075ce19270399b935" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GET_COVALENT_RAD<sp/>OBElements::GetCovalentRad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="atom__typer_8cpp_1af8bca12527bac4b474e2ccb5acd8691e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GET_NAME<sp/>OBElements::GetName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GET_SYMBOL<sp/>etab.GetSymbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GET_COVALENT_RAD<sp/>etab.GetCovalentRad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GET_NAME<sp/>etab.GetName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">OpenBabel;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibmolgrid" kindref="compound">libmolgrid</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/**************<sp/><sp/>GninaIndexTyper<sp/><sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GninaIndexTyper::info<sp/>GninaIndexTyper::default_data[GninaIndexTyper::NumTypes]<sp/>=<sp/>{<sp/></highlight><highlight class="comment">//el,<sp/>ad,<sp/>xs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Hydrogen,</highlight><highlight class="stringliteral">&quot;Hydrogen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;H&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1.000000,<sp/>0.020000,<sp/>0.000510,<sp/>0.000000,<sp/>0.370000,<sp/>0.37,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>PolarHydrogen,<sp/></highlight><highlight class="stringliteral">&quot;PolarHydrogen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HD&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>1.000000,<sp/>0.020000,<sp/>0.000510,<sp/>0.000000,<sp/>0.370000,<sp/>0.370000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//note<sp/>we<sp/>typically<sp/>use<sp/>the<sp/>xs_radius,<sp/>which<sp/>assumes<sp/>a<sp/>heavy<sp/>atom-only<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>AliphaticCarbonXSHydrophobe,<sp/></highlight><highlight class="stringliteral">&quot;AliphaticCarbonXSHydrophobe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>2.000000,<sp/>0.150000,<sp/>-0.001430,<sp/>33.510300,<sp/>0.770000,<sp/>1.900000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>AliphaticCarbonXSNonHydrophobe,<sp/></highlight><highlight class="stringliteral">&quot;AliphaticCarbonXSNonHydrophobe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>2.000000,<sp/>0.150000,<sp/>-0.001430,<sp/>33.510300,<sp/>0.770000,<sp/>1.900000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>AromaticCarbonXSHydrophobe,<sp/></highlight><highlight class="stringliteral">&quot;AromaticCarbonXSHydrophobe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>2.000000,<sp/>0.150000,<sp/>-0.000520,<sp/>33.510300,<sp/>0.770000,<sp/>1.900000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>AromaticCarbonXSNonHydrophobe,<sp/></highlight><highlight class="stringliteral">&quot;AromaticCarbonXSNonHydrophobe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>6,<sp/>2.000000,<sp/>0.150000,<sp/>-0.000520,<sp/>33.510300,<sp/>0.770000,<sp/>1.900000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Nitrogen,<sp/></highlight><highlight class="stringliteral">&quot;Nitrogen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>1.750000,<sp/>0.160000,<sp/>-0.001620,<sp/>22.449300,<sp/>0.750000,<sp/>1.800000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>NitrogenXSDonor,<sp/></highlight><highlight class="stringliteral">&quot;NitrogenXSDonor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>1.750000,<sp/>0.160000,<sp/>-0.001620,<sp/>22.449300,<sp/>0.750000,<sp/>1.800000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>NitrogenXSDonorAcceptor,<sp/></highlight><highlight class="stringliteral">&quot;NitrogenXSDonorAcceptor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NA&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>1.750000,<sp/>0.160000,<sp/>-0.001620,<sp/>22.449300,<sp/>0.750000,<sp/>1.800000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>NitrogenXSAcceptor,<sp/></highlight><highlight class="stringliteral">&quot;NitrogenXSAcceptor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NA&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>1.750000,<sp/>0.160000,<sp/>-0.001620,<sp/>22.449300,<sp/>0.750000,<sp/>1.800000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Oxygen,<sp/></highlight><highlight class="stringliteral">&quot;Oxygen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;O&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>1.600000,<sp/>0.200000,<sp/>-0.002510,<sp/>17.157300,<sp/>0.730000,<sp/>1.700000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>OxygenXSDonor,<sp/></highlight><highlight class="stringliteral">&quot;OxygenXSDonor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;O&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>1.600000,<sp/>0.200000,<sp/>-0.002510,<sp/>17.157300,<sp/>0.730000,<sp/>1.700000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>OxygenXSDonorAcceptor,<sp/></highlight><highlight class="stringliteral">&quot;OxygenXSDonorAcceptor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;OA&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>1.600000,<sp/>0.200000,<sp/>-0.002510,<sp/>17.157300,<sp/>0.730000,<sp/>1.700000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>OxygenXSAcceptor,<sp/></highlight><highlight class="stringliteral">&quot;OxygenXSAcceptor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;OA&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>1.600000,<sp/>0.200000,<sp/>-0.002510,<sp/>17.157300,<sp/>0.730000,<sp/>1.700000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Sulfur,<sp/></highlight><highlight class="stringliteral">&quot;Sulfur&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;S&quot;</highlight><highlight class="normal">,<sp/>16,<sp/>2.000000,<sp/>0.200000,<sp/>-0.002140,<sp/>33.510300,<sp/>1.020000,<sp/>2.000000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>SulfurAcceptor,<sp/></highlight><highlight class="stringliteral">&quot;SulfurAcceptor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SA&quot;</highlight><highlight class="normal">,<sp/>16,<sp/>2.000000,<sp/>0.200000,<sp/>-0.002140,<sp/>33.510300,<sp/>1.020000,<sp/>2.000000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Phosphorus,<sp/></highlight><highlight class="stringliteral">&quot;Phosphorus&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;P&quot;</highlight><highlight class="normal">,<sp/>15,<sp/>2.100000,<sp/>0.200000,<sp/>-0.001100,<sp/>38.792400,<sp/>1.060000,<sp/>2.100000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Fluorine,<sp/></highlight><highlight class="stringliteral">&quot;Fluorine&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/>9,<sp/>1.545000,<sp/>0.080000,<sp/>-0.001100,<sp/>15.448000,<sp/>0.710000,<sp/>1.500000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Chlorine,<sp/></highlight><highlight class="stringliteral">&quot;Chlorine&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Cl&quot;</highlight><highlight class="normal">,<sp/>17,<sp/>2.045000,<sp/>0.276000,<sp/>-0.001100,<sp/>35.823500,<sp/>0.990000,<sp/>1.800000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Bromine,<sp/></highlight><highlight class="stringliteral">&quot;Bromine&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Br&quot;</highlight><highlight class="normal">,<sp/>35,<sp/>2.165000,<sp/>0.389000,<sp/>-0.001100,<sp/>42.566100,<sp/>1.140000,<sp/>2.000000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Iodine,<sp/></highlight><highlight class="stringliteral">&quot;Iodine&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">,<sp/>53,<sp/>2.360000,<sp/>0.550000,<sp/>-0.001100,<sp/>55.058500,<sp/>1.330000,<sp/>2.200000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Magnesium,<sp/></highlight><highlight class="stringliteral">&quot;Magnesium&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Mg&quot;</highlight><highlight class="normal">,<sp/>12,<sp/>0.650000,<sp/>0.875000,<sp/>-0.001100,<sp/>1.560000,<sp/>1.300000,<sp/>1.200000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Manganese,<sp/></highlight><highlight class="stringliteral">&quot;Manganese&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Mn&quot;</highlight><highlight class="normal">,<sp/>25,<sp/>0.650000,<sp/>0.875000,<sp/>-0.001100,<sp/>2.140000,<sp/>1.390000,<sp/>1.200000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Zinc,<sp/></highlight><highlight class="stringliteral">&quot;Zinc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Zn&quot;</highlight><highlight class="normal">,<sp/>30,<sp/>0.740000,<sp/>0.550000,<sp/>-0.001100,<sp/>1.700000,<sp/>1.310000,<sp/>1.200000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Calcium,<sp/></highlight><highlight class="stringliteral">&quot;Calcium&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Ca&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>0.990000,<sp/>0.550000,<sp/>-0.001100,<sp/>2.770000,<sp/>1.740000,<sp/>1.200000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Iron,<sp/></highlight><highlight class="stringliteral">&quot;Iron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Fe&quot;</highlight><highlight class="normal">,<sp/>26,<sp/>0.650000,<sp/>0.010000,<sp/>-0.001100,<sp/>1.840000,<sp/>1.250000,<sp/>1.200000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>GenericMetal,<sp/></highlight><highlight class="stringliteral">&quot;GenericMetal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>1.200000,<sp/>0.000000,<sp/>-0.001100,<sp/>22.449300,<sp/>1.750000,<sp/>1.200000,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//note<sp/>AD4<sp/>doesn&apos;t<sp/>have<sp/>boron,<sp/>so<sp/>copying<sp/>from<sp/>carbon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>Boron,<sp/></highlight><highlight class="stringliteral">&quot;Boron&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/>5,<sp/>2.04,<sp/>0.180000,<sp/>-0.0011,<sp/>12.052,<sp/>0.90,<sp/>1.920000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classlibmolgrid_1_1GninaIndexTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>GninaIndexTyper::num_types()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumTypes;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classlibmolgrid_1_1GninaIndexTyper_1a34534793e0879fb3222beee2f60d7e79" refkind="member"><highlight class="normal">std::string<sp/>GninaIndexTyper::gnina_type_name(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>t<sp/>&lt;<sp/>GninaIndexTyper::NumTypes)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_data[t].smina_name;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unsupported&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classlibmolgrid_1_1GninaIndexTyper_1afa822a9ced021828013716b9b2e99670" refkind="member"><highlight class="normal">std::pair&lt;int,float&gt;<sp/>GninaIndexTyper::get_atom_type_index(OpenBabel::OBAtom*<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//this<sp/>function<sp/>is<sp/>more<sp/>convoluted<sp/>than<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>for<sp/>historical<sp/>reasons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//and<sp/>a<sp/>general<sp/>fear<sp/>of<sp/>breaking<sp/>backwards<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Hbonded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>heteroBonded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>FOR_NBORS_OF_ATOM(neigh,<sp/>a){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neigh-&gt;GetAtomicNum()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Hbonded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neigh-&gt;GetAtomicNum()<sp/>!=<sp/>6)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>heteroBonded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//hetero<sp/>anything<sp/>that<sp/>is<sp/>not<sp/>hydrogen<sp/>and<sp/>not<sp/>carbon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*element_name<sp/>=<sp/><ref refid="atom__typer_8cpp_1a78330d529d08063ad8c2f846591bf62b" kindref="member">GET_SYMBOL</ref>(a-&gt;GetAtomicNum());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::string<sp/>ename(element_name);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//massage<sp/>the<sp/>element<sp/>name<sp/>in<sp/>some<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(a-&gt;GetAtomicNum())<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ename<sp/>=<sp/><sp/>a-&gt;IsPolarHydrogen()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;HD&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;H&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a-&gt;IsAromatic())<sp/>ename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a-&gt;IsHbondAcceptor())<sp/>ename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NA&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OA&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a-&gt;IsHbondAcceptor())<sp/>ename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SA&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>34:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;S&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//historically<sp/>selenium<sp/>is<sp/>treated<sp/>as<sp/>sulfur<sp/><sp/>¯\_(ツ)_/¯</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//lookup<sp/>type<sp/>in<sp/>data<sp/>based<sp/>on<sp/>ename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>GenericMetal;<sp/></highlight><highlight class="comment">//default<sp/>catchall<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumTypes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data[i].adname<sp/>==<sp/>ename)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//adjust<sp/>based<sp/>on<sp/>bonding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AliphaticCarbonXSHydrophobe:<sp/></highlight><highlight class="comment">//<sp/>C_C_C_H,<sp/>//hydrophobic<sp/>according<sp/>to<sp/>xscale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AliphaticCarbonXSNonHydrophobe:<sp/></highlight><highlight class="comment">//C_C_C_P,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>heteroBonded<sp/>?</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AliphaticCarbonXSNonHydrophobe<sp/>:<sp/>AliphaticCarbonXSHydrophobe;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AromaticCarbonXSHydrophobe:<sp/></highlight><highlight class="comment">//C_A_C_H,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AromaticCarbonXSNonHydrophobe:<sp/></highlight><highlight class="comment">//C_A_C_P,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>heteroBonded<sp/>?</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AromaticCarbonXSNonHydrophobe<sp/>:<sp/>AromaticCarbonXSHydrophobe;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NitrogenXSDonor:<sp/></highlight><highlight class="comment">//N_N_N_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Nitrogen:<sp/></highlight><highlight class="comment">//N_N_N_P,<sp/>no<sp/>hydrogen<sp/>bonding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>Hbonded<sp/>?<sp/>NitrogenXSDonor<sp/>:<sp/>Nitrogen;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NitrogenXSDonorAcceptor:<sp/></highlight><highlight class="comment">//N_NA_N_DA,<sp/>also<sp/>an<sp/>autodock<sp/>acceptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NitrogenXSAcceptor:<sp/></highlight><highlight class="comment">//N_NA_N_A,<sp/>also<sp/>considered<sp/>an<sp/>acceptor<sp/>by<sp/>autodock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>Hbonded<sp/>?<sp/>NitrogenXSDonorAcceptor<sp/>:<sp/>NitrogenXSAcceptor;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OxygenXSDonor:<sp/></highlight><highlight class="comment">//O_O_O_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Oxygen:<sp/></highlight><highlight class="comment">//O_O_O_P,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>Hbonded<sp/>?<sp/>OxygenXSDonor<sp/>:<sp/>Oxygen;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OxygenXSDonorAcceptor:<sp/></highlight><highlight class="comment">//O_OA_O_DA,<sp/>also<sp/>an<sp/>autodock<sp/>acceptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OxygenXSAcceptor:<sp/></highlight><highlight class="comment">//O_OA_O_A,<sp/>also<sp/>an<sp/>autodock<sp/>acceptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>Hbonded<sp/>?<sp/>OxygenXSDonorAcceptor<sp/>:<sp/>OxygenXSAcceptor;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(use_covalent)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_pair(ret,<sp/>data[ret].covalent_radius);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_pair(ret,<sp/>data[ret].xs_radius);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//look<sp/>up<sp/>radius<sp/>for<sp/>passed<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classlibmolgrid_1_1GninaIndexTyper_1a2f2292603513836fcc299e920d102969" refkind="member"><highlight class="normal">pair&lt;int,float&gt;<sp/>GninaIndexTyper::get_int_type(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>GenericMetal;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t<sp/>&lt;<sp/>NumTypes)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(use_covalent)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_pair(ret,<sp/>data[ret].covalent_radius);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_pair(ret,<sp/>data[ret].xs_radius);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classlibmolgrid_1_1GninaIndexTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>GninaIndexTyper::get_type_names()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>ret;<sp/>ret.reserve(NumTypes);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumTypes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.push_back(data[i].smina_name);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>atomic<sp/>radii</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classlibmolgrid_1_1GninaIndexTyper_1adc0b9aacfdd83b3b868ab09424d3c04b" refkind="member"><highlight class="normal">std::vector&lt;float&gt;<sp/>GninaIndexTyper::get_type_radii()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>vector&lt;float&gt;<sp/>ret;<sp/>ret.reserve(NumTypes);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumTypes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(use_covalent)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret.push_back(data[i].covalent_radius);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret.push_back(data[i].xs_radius);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/**************<sp/>Element<sp/>IndexTyper<sp/><sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classlibmolgrid_1_1ElementIndexTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ElementIndexTyper::num_types()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>last_elem;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classlibmolgrid_1_1ElementIndexTyper_1afa822a9ced021828013716b9b2e99670" refkind="member"><highlight class="normal">std::pair&lt;int,float&gt;<sp/>ElementIndexTyper::get_atom_type_index(OpenBabel::OBAtom*<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>elem<sp/>=<sp/>a-&gt;GetAtomicNum();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/><ref refid="atom__typer_8cpp_1ad07fa1680b4c52f075ce19270399b935" kindref="member">GET_COVALENT_RAD</ref>(elem);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elem<sp/>&gt;=<sp/>last_elem)<sp/>elem<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//truncate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_pair((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)elem,radius);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//return<sp/>element<sp/>with<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classlibmolgrid_1_1ElementIndexTyper_1ad7cd781efd0d97403d12057df9cacbdb" refkind="member"><highlight class="normal">std::pair&lt;int,float&gt;<sp/>ElementIndexTyper::get_int_type(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elem)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/><ref refid="atom__typer_8cpp_1ad07fa1680b4c52f075ce19270399b935" kindref="member">GET_COVALENT_RAD</ref>(elem);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elem<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)last_elem)<sp/>elem<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//truncate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_pair((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)elem,radius);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classlibmolgrid_1_1ElementIndexTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>ElementIndexTyper::get_type_names()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>ret;<sp/>ret.reserve(last_elem);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>ret.push_back(</highlight><highlight class="stringliteral">&quot;GenericAtom&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>last_elem;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.push_back(<ref refid="atom__typer_8cpp_1af8bca12527bac4b474e2ccb5acd8691e" kindref="member">GET_NAME</ref>(i));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>atomic<sp/>radii</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classlibmolgrid_1_1ElementIndexTyper_1adc0b9aacfdd83b3b868ab09424d3c04b" refkind="member"><highlight class="normal">std::vector&lt;float&gt;<sp/>ElementIndexTyper::get_type_radii()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>vector&lt;float&gt;<sp/>ret;<sp/>ret.reserve(last_elem+1);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>ret.push_back(0);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>last_elem;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/><ref refid="atom__typer_8cpp_1ad07fa1680b4c52f075ce19270399b935" kindref="member">GET_COVALENT_RAD</ref>(i);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.push_back(radius);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//safely<sp/>set<sp/>type_names<sp/>from<sp/>names,<sp/>even<sp/>if<sp/>some<sp/>are<sp/>missing<sp/>(use<sp/>indices<sp/>in<sp/>that<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classlibmolgrid_1_1AtomIndexTyper_1a50bdca9ea03cabe38347121b8ef98cad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AtomIndexTyper::set_names(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ntypes,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>type_names,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>names)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>type_names.clear();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>type_names.reserve(ntypes);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ntypes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>names.size())<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_names.push_back(names[i]);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type_names.push_back(boost::lexical_cast&lt;string&gt;(i));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257" refid="classlibmolgrid_1_1CallbackIndexTyper_1afeb018e0ea5231c3b5ac23526abf5361" refkind="member"><highlight class="normal">CallbackIndexTyper::CallbackIndexTyper(<ref refid="classlibmolgrid_1_1CallbackIndexTyper_1aae8b96fe407c4b9b3d4d6488f382b579" kindref="member">AtomIndexTyperFunc</ref><sp/>f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ntypes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>names):<sp/>callback(f)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1a50bdca9ea03cabe38347121b8ef98cad" kindref="member">set_names</ref>(ntypes,<sp/>type_names,<sp/>names);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>GninaVectorTyper<sp/>******************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">vector&lt;string&gt;<sp/>GninaVectorTyper::vtype_names<sp/>{<sp/></highlight><highlight class="comment">//this<sp/>needs<sp/>to<sp/>match<sp/>up<sp/>with<sp/>vtype<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Hydrogen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Carbon&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Nitrogen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Oxygen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Sulfur&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Phosphorus&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Fluorine&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Chlorine&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Bromine&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Iodine&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Magnesium&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Manganese&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Zinc&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Calcium&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Iron&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Boron&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;GenericAtom&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;AD_depth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//floating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;AD_solvation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;AD_volume&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;XS_hydrophobe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;XS_donor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;XS_acceptor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;AD_heteroatom&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Aromatic&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;OB_partialcharge&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classlibmolgrid_1_1GninaVectorTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" kindref="member">GninaVectorTyper::num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//there&apos;s<sp/>the<sp/>supported<sp/>gnina<sp/>elements<sp/>plus<sp/>the<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ad_depth,<sp/>ad_solvation,<sp/>ad_volume,<sp/>xs_hydrophobe,<sp/>xs_donor,<sp/>xs_acceptor,<sp/>ad_heteroatom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58aac64c8922ff64ae0d88ad358421d026f" kindref="member">NumTypes</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classlibmolgrid_1_1GninaVectorTyper_1ae665f55a8d914fa0d36e469284e2443d" refkind="member"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1ae665f55a8d914fa0d36e469284e2443d" kindref="member">GninaVectorTyper::get_atom_type_vector</ref>(OpenBabel::OBAtom*<sp/>a,<sp/>std::vector&lt;float&gt;&amp;<sp/>typ)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>typ.assign(<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58aac64c8922ff64ae0d88ad358421d026f" kindref="member">NumTypes</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_r<sp/>=<sp/>ityper.<ref refid="classlibmolgrid_1_1GninaIndexTyper_1afa822a9ced021828013716b9b2e99670" kindref="member">get_atom_type_index</ref>(a);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>t_r.first;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/>t_r.second;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elemtyp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t)<sp/>{<sp/></highlight><highlight class="comment">//convert<sp/>to<sp/>element<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da20fa2720571344499f799d2839b23c7e" kindref="member">GninaIndexTyper::Hydrogen</ref>:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daa3d3ec6d4feccb909e375261fc5e747a" kindref="member">GninaIndexTyper::PolarHydrogen</ref>:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a20fa2720571344499f799d2839b23c7e" kindref="member">Hydrogen</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da1ea7ee189d41ec98ed6592d7e07cbe01" kindref="member">GninaIndexTyper::AliphaticCarbonXSHydrophobe</ref>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da9b66ff931740ae4be675a9fa83f9c130" kindref="member">GninaIndexTyper::AliphaticCarbonXSNonHydrophobe</ref>:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf3113296791638a80d64ba33c5fd4427" kindref="member">GninaIndexTyper::AromaticCarbonXSHydrophobe</ref>:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0bd3db5b7e161ee0ebb624494e30af85" kindref="member">GninaIndexTyper::AromaticCarbonXSNonHydrophobe</ref>:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a29aed61cddc081ff18d77c441b9fedb2" kindref="member">Carbon</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf766de68d927b08d86af09a7aadbe81b" kindref="member">GninaIndexTyper::Nitrogen</ref>:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da6abe6c6a3e353efda94a61eec0bc6e1c" kindref="member">GninaIndexTyper::NitrogenXSDonor</ref>:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da5739855eaaa648af57dc0188e3698743" kindref="member">GninaIndexTyper::NitrogenXSDonorAcceptor</ref>:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da99a9bbcbf26abb65fafcebd4ee38b1cc" kindref="member">GninaIndexTyper::NitrogenXSAcceptor</ref>:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58af766de68d927b08d86af09a7aadbe81b" kindref="member">Nitrogen</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dae54b22e3be885eb43db3925118a89f02" kindref="member">GninaIndexTyper::Oxygen</ref>:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dae139a25d0b4fda3f0a87918043c19640" kindref="member">GninaIndexTyper::OxygenXSDonor</ref>:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da5a0891509ad2a1599770d76eac6f11b6" kindref="member">GninaIndexTyper::OxygenXSDonorAcceptor</ref>:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0de17bde588e82e1aed388dd71381026" kindref="member">GninaIndexTyper::OxygenXSAcceptor</ref>:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58ae54b22e3be885eb43db3925118a89f02" kindref="member">Oxygen</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dadfc4f003c99e8ae202fa0bbe5433e37d" kindref="member">GninaIndexTyper::Sulfur</ref>:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dab0aaebb4b47401db206171bcbf5f83ff" kindref="member">GninaIndexTyper::SulfurAcceptor</ref>:</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58adfc4f003c99e8ae202fa0bbe5433e37d" kindref="member">Sulfur</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dafb6902001cce5e4c30fbf6ff798d14ff" kindref="member">GninaIndexTyper::Phosphorus</ref>:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58afb6902001cce5e4c30fbf6ff798d14ff" kindref="member">Phosphorus</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da720bc1d5b753af7cf738a52d4b390004" kindref="member">GninaIndexTyper::Fluorine</ref>:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a720bc1d5b753af7cf738a52d4b390004" kindref="member">Fluorine</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da8b6a342c70d3df3c2927e8a07b798170" kindref="member">GninaIndexTyper::Chlorine</ref>:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a8b6a342c70d3df3c2927e8a07b798170" kindref="member">Chlorine</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0aa79218b633c599741632eb7393d2fe" kindref="member">GninaIndexTyper::Bromine</ref>:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a0aa79218b633c599741632eb7393d2fe" kindref="member">Bromine</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf293af144ce688a9a2e0a43a9af4e279" kindref="member">GninaIndexTyper::Iodine</ref>:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58af293af144ce688a9a2e0a43a9af4e279" kindref="member">Iodine</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daff5ab7e500a1c16d48b11aa93bb60439" kindref="member">GninaIndexTyper::Magnesium</ref>:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58aff5ab7e500a1c16d48b11aa93bb60439" kindref="member">Magnesium</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da2481971aeae9ed91247d0e6c69447bcf" kindref="member">GninaIndexTyper::Manganese</ref>:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a2481971aeae9ed91247d0e6c69447bcf" kindref="member">Manganese</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da64391040c4d0c382ba484cfc7dc24cce" kindref="member">GninaIndexTyper::Zinc</ref>:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a64391040c4d0c382ba484cfc7dc24cce" kindref="member">Zinc</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da40f67c18f45fbcb3396df8fb55e41145" kindref="member">GninaIndexTyper::Calcium</ref>:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a40f67c18f45fbcb3396df8fb55e41145" kindref="member">Calcium</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da8750950e70ba4037061ecd568a56b944" kindref="member">GninaIndexTyper::Iron</ref>:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a8750950e70ba4037061ecd568a56b944" kindref="member">Iron</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dad89b17a8892a5bd6aac5579a777515e0" kindref="member">GninaIndexTyper::GenericMetal</ref>:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a102c874da8d58e697153b870836f97d7" kindref="member">GenericAtom</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da3a2170e4ebad18bd68d1cd7ebd73bd3d" kindref="member">GninaIndexTyper::Boron</ref>:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a3a2170e4ebad18bd68d1cd7ebd73bd3d" kindref="member">Boron</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>elemtyp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a102c874da8d58e697153b870836f97d7" kindref="member">GenericAtom</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>one-hot<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>typ[elemtyp]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" kindref="compound">GninaIndexTyper::info</ref>&amp;<sp/>info<sp/>=<sp/>ityper.<ref refid="classlibmolgrid_1_1GninaIndexTyper_1aef23b5c76e723f1fa66e56819225126b" kindref="member">get_info</ref>(t);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a66071ce81eacf279caeb6181d2b4af77" kindref="member">AD_depth</ref>]<sp/>=<sp/>info.<ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1af504cf271d0020317ec1cf9a219a36aa" kindref="member">ad_depth</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a94dadc9171990acbc734ebc7b964c24e" kindref="member">AD_solvation</ref>]<sp/>=<sp/>info.<ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1af030eefb3668c4bf6c51e0184bc9652f" kindref="member">ad_solvation</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58ae946596d3b2f7916326449e286a24d86" kindref="member">AD_volume</ref>]<sp/>=<sp/>info.<ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1ad47f54e927cd62d42d78ffba9047cf92" kindref="member">ad_volume</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a6fa0bccf04cddf72b9a36f9189e6f826" kindref="member">XS_hydrophobe</ref>]<sp/>=<sp/>info.<ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a3c8ad373784fcd045ca46a59b0672a62" kindref="member">xs_hydrophobe</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58adf29561d776262734af9b550a4084d99" kindref="member">XS_donor</ref>]<sp/>=<sp/>info.<ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a4d6140923dcfe9e59fe1355ecd106bd1" kindref="member">xs_donor</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a495ab511fe9d4de716f17c16b88c8381" kindref="member">XS_acceptor</ref>]<sp/>=<sp/>info.<ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a63abb2440710ff892d3e7d1e73607f66" kindref="member">xs_acceptor</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a17742e560aabc21a282511133d1d6051" kindref="member">AD_heteroatom</ref>]<sp/>=<sp/>info.<ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a1545b973b3b84e111b5983a51e0eec7e" kindref="member">ad_heteroatom</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a47dac740f8d42f2a95b945a0ca69578d" kindref="member">OB_partialcharge</ref>]<sp/>=<sp/>a-&gt;GetPartialCharge();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>typ[<ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a64c607937ff8cf2e2d5c22b8b4052b4c" kindref="member">Aromatic</ref>]<sp/>=<sp/>a-&gt;IsAromatic();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>radius;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="classlibmolgrid_1_1GninaVectorTyper_1ad2de174aee1d2d6da3500c728ee71e23" refkind="member"><highlight class="normal">std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1ad2de174aee1d2d6da3500c728ee71e23" kindref="member">GninaVectorTyper::get_vector_type_radii</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58aac64c8922ff64ae0d88ad358421d026f" kindref="member">NumTypes</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" kindref="compound">GninaIndexTyper::info</ref>&amp;<sp/>info<sp/>=<sp/>ityper.<ref refid="classlibmolgrid_1_1GninaIndexTyper_1aef23b5c76e723f1fa66e56819225126b" kindref="member">get_info</ref>(i);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.push_back(info.<ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a71b62833de40e93190610ebdd26df937" kindref="member">xs_radius</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classlibmolgrid_1_1GninaVectorTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" kindref="member">GninaVectorTyper::get_type_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vtype_names;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classlibmolgrid_1_1CallbackVectorTyper_1a50cbe32479180cea5aa8c25adda9ee4a" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1CallbackVectorTyper_1a50cbe32479180cea5aa8c25adda9ee4a" kindref="member">CallbackVectorTyper::CallbackVectorTyper</ref>(<ref refid="classlibmolgrid_1_1CallbackVectorTyper_1a44ce451816e206ba621e7bb85b8c3570" kindref="member">AtomVectorTyperFunc</ref><sp/>f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ntypes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>names):<sp/>callback(f)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1a50bdca9ea03cabe38347121b8ef98cad" kindref="member">AtomIndexTyper::set_names</ref>(ntypes,<sp/>type_names,<sp/>names);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">/***********<sp/>FileAtomMapper<sp/>*****************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FileAtomMapper::setup(std::istream&amp;<sp/>in)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::algorithm;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//first<sp/>create<sp/>reverse<sp/>map<sp/>from<sp/>old<sp/>names<sp/>to<sp/>old<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>unordered_map&lt;string,<sp/>int&gt;<sp/>old_name_to_old_type;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>old_type_names.size();<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>old_name_to_old_type[old_type_names[i]]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>old_type_to_new_type.assign(old_type_names.size(),<sp/>-1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>new_type_names.clear();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>vector&lt;vector&lt;float&gt;<sp/>&gt;<sp/>radii;<sp/></highlight><highlight class="comment">//indexed<sp/>by<sp/>new<sp/>type<sp/>(line),<sp/>stores<sp/>all<sp/>radii<sp/>of<sp/>represnted<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//each<sp/>non<sp/>blank<sp/>line<sp/>is<sp/>a<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(in,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>trim(line);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>types;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>split(types,<sp/>line,<sp/>is_any_of(</highlight><highlight class="stringliteral">&quot;\t<sp/>\n&quot;</highlight><highlight class="normal">),<sp/>boost::token_compress_on);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(types.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_type_name<sp/>=<sp/>join(types,</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntype<sp/>=<sp/>new_type_names.size();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_type_names.push_back(new_type_name);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setup<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>types.size();<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>name<sp/>=<sp/>types[i];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(old_name_to_old_type.count(name))<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldt<sp/>=<sp/>old_name_to_old_type[name];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_type_to_new_type[oldt]<sp/>=<sp/>ntype;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.size()<sp/>&gt;<sp/>0){<sp/></highlight><highlight class="comment">//ignore<sp/>consecutive<sp/>delimiters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>err(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>atom<sp/>type<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>+=<sp/>name;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(err);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="classlibmolgrid_1_1FileAtomMapper_1a2026312e4be308b70d3e93514c33bb65" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1FileAtomMapper_1a2026312e4be308b70d3e93514c33bb65" kindref="member">FileAtomMapper::FileAtomMapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>type_names):<sp/>old_type_names(type_names)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>ifstream<sp/>in(fname.c_str());</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!in)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fname);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>setup(in);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="classlibmolgrid_1_1FileAtomMapper_1a65bf8d6eed03de1b4e3d6fdde34adabd" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper_1a65bf8d6eed03de1b4e3d6fdde34adabd" kindref="member">FileAtomMapper::get_new_type</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>origt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(origt<sp/>&lt;<sp/>old_type_to_new_type.size())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old_type_to_new_type[origt];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">/***************<sp/>SubsetAtomMapper<sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classlibmolgrid_1_1SubsetAtomMapper_1a4a83e99735e832950df79857b47d8d84" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1SubsetAtomMapper_1a4a83e99735e832950df79857b47d8d84" kindref="member">SubsetAtomMapper::SubsetAtomMapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>map,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>old_names)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>map.size();<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>oldt<sp/>=<sp/>map[i];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>old2new[oldt]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oldt<sp/>&lt;<sp/>old_names.size())<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_type_names.push_back(old_names[oldt]);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_type_names.push_back(boost::lexical_cast&lt;string&gt;(oldt));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>num_new_types<sp/>=<sp/>map.size();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(include_catchall)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>default_type<sp/>=<sp/>map.size();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>num_new_types++;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>new_type_names.push_back(</highlight><highlight class="stringliteral">&quot;GenericAtom&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="classlibmolgrid_1_1SubsetAtomMapper_1ad0d2057e289454c58a7c519a3ec977f2" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1SubsetAtomMapper_1a4a83e99735e832950df79857b47d8d84" kindref="member">SubsetAtomMapper::SubsetAtomMapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>map,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>old_names)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>map.size();<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>names;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>m<sp/>=<sp/>map[i].size();<sp/>j<sp/>&lt;<sp/>m;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>oldt<sp/>=<sp/>map[i][j];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>old2new[oldt]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oldt<sp/>&lt;<sp/>old_names.size())<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names.push_back(old_names[oldt]);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names.push_back(boost::lexical_cast&lt;string&gt;(oldt));</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>new_type_name<sp/>=<sp/>boost::algorithm::join(names,</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>new_type_names.push_back(new_type_name);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>num_new_types<sp/>=<sp/>map.size();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(include_catchall)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>default_type<sp/>=<sp/>map.size();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>num_new_types++;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>new_type_names.push_back(</highlight><highlight class="stringliteral">&quot;GenericAtom&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="classlibmolgrid_1_1SubsetAtomMapper_1a65bf8d6eed03de1b4e3d6fdde34adabd" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper_1a65bf8d6eed03de1b4e3d6fdde34adabd" kindref="member">SubsetAtomMapper::get_new_type</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>origt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(old2new.count(origt))<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old2new.at(origt);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_type;</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stringstream<sp/><ref refid="namespacelibmolgrid_1abc1c852c354f940bb6726454a18083e2" kindref="member">recmap</ref>(R</highlight><highlight class="stringliteral">&quot;(AliphaticCarbonXSHydrophobe<sp/></highlight></codeline>
<codeline lineno="532"><highlight class="stringliteral">AliphaticCarbonXSNonHydrophobe<sp/></highlight></codeline>
<codeline lineno="533"><highlight class="stringliteral">AromaticCarbonXSHydrophobe<sp/></highlight></codeline>
<codeline lineno="534"><highlight class="stringliteral">AromaticCarbonXSNonHydrophobe</highlight></codeline>
<codeline lineno="535"><highlight class="stringliteral">Bromine<sp/>Iodine<sp/>Chlorine<sp/>Fluorine</highlight></codeline>
<codeline lineno="536"><highlight class="stringliteral">Nitrogen<sp/>NitrogenXSAcceptor<sp/></highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral">NitrogenXSDonor<sp/>NitrogenXSDonorAcceptor</highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral">Oxygen<sp/>OxygenXSAcceptor<sp/></highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral">OxygenXSDonorAcceptor<sp/>OxygenXSDonor</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral">Sulfur<sp/>SulfurAcceptor</highlight></codeline>
<codeline lineno="541"><highlight class="stringliteral">Phosphorus<sp/></highlight></codeline>
<codeline lineno="542"><highlight class="stringliteral">Calcium</highlight></codeline>
<codeline lineno="543"><highlight class="stringliteral">Zinc</highlight></codeline>
<codeline lineno="544"><highlight class="stringliteral">GenericMetal<sp/>Boron<sp/>Manganese<sp/>Magnesium<sp/>Iron</highlight></codeline>
<codeline lineno="545"><highlight class="stringliteral">)&quot;);</highlight></codeline>
<codeline lineno="546"><highlight class="stringliteral"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stringstream<sp/><ref refid="namespacelibmolgrid_1ab32fe62f692f6c16ba65f9586408e444" kindref="member">ligmap</ref>(R</highlight><highlight class="stringliteral">&quot;(AliphaticCarbonXSHydrophobe<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="stringliteral">AliphaticCarbonXSNonHydrophobe<sp/></highlight></codeline>
<codeline lineno="548"><highlight class="stringliteral">AromaticCarbonXSHydrophobe<sp/></highlight></codeline>
<codeline lineno="549"><highlight class="stringliteral">AromaticCarbonXSNonHydrophobe</highlight></codeline>
<codeline lineno="550"><highlight class="stringliteral">Bromine<sp/>Iodine</highlight></codeline>
<codeline lineno="551"><highlight class="stringliteral">Chlorine</highlight></codeline>
<codeline lineno="552"><highlight class="stringliteral">Fluorine</highlight></codeline>
<codeline lineno="553"><highlight class="stringliteral">Nitrogen<sp/>NitrogenXSAcceptor<sp/></highlight></codeline>
<codeline lineno="554"><highlight class="stringliteral">NitrogenXSDonor<sp/>NitrogenXSDonorAcceptor</highlight></codeline>
<codeline lineno="555"><highlight class="stringliteral">Oxygen<sp/>OxygenXSAcceptor<sp/></highlight></codeline>
<codeline lineno="556"><highlight class="stringliteral">OxygenXSDonorAcceptor<sp/>OxygenXSDonor</highlight></codeline>
<codeline lineno="557"><highlight class="stringliteral">Sulfur<sp/>SulfurAcceptor</highlight></codeline>
<codeline lineno="558"><highlight class="stringliteral">Phosphorus</highlight></codeline>
<codeline lineno="559"><highlight class="stringliteral">GenericMetal<sp/>Boron<sp/>Manganese<sp/>Magnesium<sp/>Zinc<sp/>Calcium<sp/>Iron</highlight></codeline>
<codeline lineno="560"><highlight class="stringliteral">)&quot;);</highlight></codeline>
<codeline lineno="561"><highlight class="stringliteral"><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref><sp/><ref refid="namespacelibmolgrid_1aed6bc2269142acee6e4fdd214209c175" kindref="member">defaultGninaReceptorTyper</ref>(<ref refid="namespacelibmolgrid_1abc1c852c354f940bb6726454a18083e2" kindref="member">recmap</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="stringliteral"><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref><sp/><ref refid="namespacelibmolgrid_1a371ec05022b3d175a5b02d540f947ac2" kindref="member">defaultGninaLigandTyper</ref>(<ref refid="namespacelibmolgrid_1ab32fe62f692f6c16ba65f9586408e444" kindref="member">ligmap</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="564"><highlight class="stringliteral">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>libmolgrid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dkoes/git/libmolgrid/src/atom_typer.cpp"/>
  </compounddef>
</doxygen>
