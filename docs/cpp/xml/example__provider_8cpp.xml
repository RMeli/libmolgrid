<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="example__provider_8cpp" kind="file" language="C++">
    <compoundname>example_provider.cpp</compoundname>
    <includes refid="example__provider_8h" local="yes">libmolgrid/example_provider.h</includes>
    <includes refid="atom__typer_8h" local="yes">libmolgrid/atom_typer.h</includes>
    <incdepgraph>
      <node id="33">
        <label>functional</label>
      </node>
      <node id="28">
        <label>libmolgrid/example_extractor.h</label>
        <link refid="example__extractor_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libmolgrid/example.h</label>
        <link refid="example_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="23">
        <label>cuda_runtime.h</label>
      </node>
      <node id="15">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>libmolgrid/grid.h</label>
        <link refid="grid_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>openbabel/mol.h</label>
      </node>
      <node id="5">
        <label>unordered_set</label>
      </node>
      <node id="24">
        <label>libmolgrid/exampleref_providers.h</label>
        <link refid="exampleref__providers_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libmolgrid/coord_cache.h</label>
        <link refid="coord__cache_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>random</label>
      </node>
      <node id="30">
        <label>libmolgrid/atom_typer.h</label>
        <link refid="atom__typer_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>openbabel/atom.h</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="2">
        <label>libmolgrid/example_provider.h</label>
        <link refid="example__provider_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="34">
        <label>boost/iostreams/device/mapped_file.hpp</label>
      </node>
      <node id="17">
        <label>libmolgrid/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>openbabel/elements.h</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="27">
        <label>unordered_map</label>
      </node>
      <node id="20">
        <label>cuda.h</label>
      </node>
      <node id="19">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="14">
        <label>boost/preprocessor/repetition.hpp</label>
      </node>
      <node id="1">
        <label>example_provider.cpp</label>
        <link refid="example__provider_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libmolgrid/managed_grid.h</label>
        <link refid="managed__grid_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>type_traits</label>
      </node>
      <node id="13">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="25">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>libmolgrid/libmolgrid.h</label>
        <link refid="libmolgrid_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cstring</label>
      </node>
      <node id="6">
        <label>libmolgrid/coordinateset.h</label>
        <link refid="coordinateset_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelibmolgrid">libmolgrid</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>example_provider.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Mar<sp/>26,<sp/>2019</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>dkoes</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="example__provider_8h" kindref="compound">libmolgrid/example_provider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atom__typer_8h" kindref="compound">libmolgrid/atom_typer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibmolgrid" kindref="compound">libmolgrid</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classlibmolgrid_1_1ExampleProvider_1aa094561f95e431c276b49586faee2cc5" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleProvider_1aa094561f95e431c276b49586faee2cc5" kindref="member">ExampleProvider::ExampleProvider</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings)<sp/>:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(createProvider(settings)),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extractor(settings,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_shared<sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref><sp/>&gt;<sp/>(<ref refid="namespacelibmolgrid_1aed6bc2269142acee6e4fdd214209c175" kindref="member">defaultGninaReceptorTyper</ref>),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_shared<sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref><sp/>&gt;<sp/>(<ref refid="namespacelibmolgrid_1a371ec05022b3d175a5b02d540f947ac2" kindref="member">defaultGninaLigandTyper</ref>)),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_settings(settings)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classlibmolgrid_1_1ExampleProvider_1a8a2bae611b9df84ef7d3a65cb0406250" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleProvider_1aa094561f95e431c276b49586faee2cc5" kindref="member">ExampleProvider::ExampleProvider</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AtomTyper&gt;<sp/>t)<sp/>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(createProvider(settings)),<sp/>extractor(settings,<sp/>t),<sp/>init_settings(settings)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classlibmolgrid_1_1ExampleProvider_1acaf924a94e0b8d14689fb68bbd01e0f7" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleProvider_1aa094561f95e431c276b49586faee2cc5" kindref="member">ExampleProvider::ExampleProvider</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AtomTyper&gt;<sp/>t1,<sp/>std::shared_ptr&lt;AtomTyper&gt;<sp/>t2)<sp/>:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(createProvider(settings)),<sp/>extractor(settings,<sp/>t1,<sp/>t2),<sp/>init_settings(settings)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlibmolgrid_1_1ExampleProvider_1ac557999e073c14e5001137006e1affeb" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleProvider_1aa094561f95e431c276b49586faee2cc5" kindref="member">ExampleProvider::ExampleProvider</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;AtomTyper&gt;<sp/>&gt;&amp;<sp/>typrs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>molcaches)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(createProvider(settings)),<sp/>extractor(settings,<sp/>typrs,<sp/>molcaches),<sp/>init_settings(settings)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classlibmolgrid_1_1ExampleProvider_1a3066f4feae60e7344e861b8560c13c2e" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleProvider_1aa094561f95e431c276b49586faee2cc5" kindref="member">ExampleProvider::ExampleProvider</ref>(std::shared_ptr&lt;ExampleRefProvider&gt;<sp/>p,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ExampleExtractor" kindref="compound">ExampleExtractor</ref>&amp;<sp/>e)<sp/>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(p),<sp/>extractor(e)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classlibmolgrid_1_1ExampleProvider_1af034c26f3c6c9d88821e1db792e4e874" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1af034c26f3c6c9d88821e1db792e4e874" kindref="member">ExampleProvider::populate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>ifstream<sp/>f(fname.c_str());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fname);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>provider-&gt;populate(f,<sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1ad61784c785dd62f4d4e1d1fec3cf2f6e" kindref="member">num_labels</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>provider-&gt;setup();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classlibmolgrid_1_1ExampleProvider_1af9aa38f73a7aa43fa0ba78d05d9c20fe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1af034c26f3c6c9d88821e1db792e4e874" kindref="member">ExampleProvider::populate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>fnames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>fnames.size();<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>f(fnames[i].c_str());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fnames[i]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>provider-&gt;populate(f,<sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1ad61784c785dd62f4d4e1d1fec3cf2f6e" kindref="member">num_labels</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>provider-&gt;setup();</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classlibmolgrid_1_1ExampleProvider_1ad04cc9d97399f697fbc874ecfd8109b9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1a6e452f30328eb48d0549e8e107a1327e" kindref="member">ExampleProvider::next</ref>(<ref refid="structlibmolgrid_1_1Example" kindref="compound">Example</ref>&amp;<sp/>ex)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>thread_local<sp/><ref refid="structlibmolgrid_1_1ExampleRef" kindref="compound">ExampleRef</ref><sp/>ref;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>provider-&gt;nextref(ref);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>extractor.<ref refid="classlibmolgrid_1_1ExampleExtractor_1a16688c316082e3c32e65e8c0bb03fe9f" kindref="member">extract</ref>(ref,<sp/>ex);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classlibmolgrid_1_1ExampleProvider_1adb4bb0435e9db0c63c1c7938385939a0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1adb4bb0435e9db0c63c1c7938385939a0" kindref="member">ExampleProvider::next_batch</ref>(std::vector&lt;Example&gt;&amp;<sp/>ex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>batch_size)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vector&lt;ExampleRef&gt;<sp/>refs;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(batch_size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>batch_size<sp/>=<sp/>init_settings.default_batch_size;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>ex.resize(batch_size);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>refs.resize(batch_size);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>provider-&gt;check_batch_size(batch_size);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>batch_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>provider-&gt;nextref(refs[i]);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>extractor.<ref refid="classlibmolgrid_1_1ExampleExtractor_1a16688c316082e3c32e65e8c0bb03fe9f" kindref="member">extract</ref>(refs[i],<sp/>ex[i]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classlibmolgrid_1_1ExampleProvider_1a77aacd8e83562f61b7b39ba3444c1d25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1a77aacd8e83562f61b7b39ba3444c1d25" kindref="member">ExampleProvider::skip</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="structlibmolgrid_1_1ExampleRef" kindref="compound">ExampleRef</ref><sp/>ref;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>provider-&gt;nextref(ref);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classlibmolgrid_1_1ExampleProvider_1af53336000ea2b0e977ac8b9378ad544f" refkind="member"><highlight class="normal">std::shared_ptr&lt;ExampleRefProvider&gt;<sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1af53336000ea2b0e977ac8b9378ad544f" kindref="member">ExampleProvider::createProvider</ref>(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>balanced<sp/>=<sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>.balanced;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>strat_receptor<sp/>=<sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>.stratify_receptor;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>strat_aff<sp/>=<sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>.stratify_max<sp/>!=<sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>.stratify_min;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>grouped<sp/>=<sp/><ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>.max_group_size<sp/>&gt;<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//strat_aff<sp/>&gt;<sp/>strat_receptor<sp/>&gt;<sp/>balanced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strat_aff)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strat_receptor)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(balanced)<sp/></highlight><highlight class="comment">//<sp/>sample<sp/>2<sp/>from<sp/>each<sp/>receptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grouped)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1GroupedExampleRefProvider" kindref="compound">GroupedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ValueStratifiedExampleRefProfider" kindref="compound">ValueStratifiedExampleRefProfider</ref>&lt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ReceptorStratifiedExampleRefProvider" kindref="compound">ReceptorStratifiedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1BalancedExampleRefProvider" kindref="compound">BalancedExampleRefProvider</ref>,<sp/>2&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1ValueStratifiedExampleRefProfider" kindref="compound">ValueStratifiedExampleRefProfider</ref>&lt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ReceptorStratifiedExampleRefProvider" kindref="compound">ReceptorStratifiedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1BalancedExampleRefProvider" kindref="compound">BalancedExampleRefProvider</ref>,<sp/>2&gt;<sp/>&gt;<sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//sample<sp/>1<sp/>from<sp/>each<sp/>receptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grouped)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1GroupedExampleRefProvider" kindref="compound">GroupedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ValueStratifiedExampleRefProfider" kindref="compound">ValueStratifiedExampleRefProfider</ref>&lt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ReceptorStratifiedExampleRefProvider" kindref="compound">ReceptorStratifiedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1UniformExampleRefProvider" kindref="compound">UniformExampleRefProvider</ref>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1ValueStratifiedExampleRefProfider" kindref="compound">ValueStratifiedExampleRefProfider</ref>&lt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ReceptorStratifiedExampleRefProvider" kindref="compound">ReceptorStratifiedExampleRefProvider&lt;UniformExampleRefProvider&gt;</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(balanced)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grouped)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1GroupedExampleRefProvider" kindref="compound">GroupedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ValueStratifiedExampleRefProfider" kindref="compound">ValueStratifiedExampleRefProfider&lt;BalancedExampleRefProvider&gt;</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1ValueStratifiedExampleRefProfider" kindref="compound">ValueStratifiedExampleRefProfider&lt;BalancedExampleRefProvider&gt;</ref></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//sample<sp/>1<sp/>from<sp/>each<sp/>receptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grouped)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1GroupedExampleRefProvider" kindref="compound">GroupedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ValueStratifiedExampleRefProfider" kindref="compound">ValueStratifiedExampleRefProfider&lt;UniformExampleRefProvider&gt;</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1ValueStratifiedExampleRefProfider" kindref="compound">ValueStratifiedExampleRefProfider&lt;UniformExampleRefProvider&gt;</ref></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strat_receptor)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(balanced)<sp/></highlight><highlight class="comment">//<sp/>sample<sp/>2<sp/>from<sp/>each<sp/>receptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grouped)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1GroupedExampleRefProvider" kindref="compound">GroupedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ReceptorStratifiedExampleRefProvider" kindref="compound">ReceptorStratifiedExampleRefProvider</ref>&lt;<ref refid="classlibmolgrid_1_1BalancedExampleRefProvider" kindref="compound">BalancedExampleRefProvider</ref>,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2&gt;<sp/>&gt;<sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1ReceptorStratifiedExampleRefProvider" kindref="compound">ReceptorStratifiedExampleRefProvider&lt;BalancedExampleRefProvider, 2&gt;</ref></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//sample<sp/>1<sp/>from<sp/>each<sp/>receptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(balanced)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1GroupedExampleRefProvider" kindref="compound">GroupedExampleRefProvider</ref>&lt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ReceptorStratifiedExampleRefProvider" kindref="compound">ReceptorStratifiedExampleRefProvider</ref>&lt;<ref refid="classlibmolgrid_1_1UniformExampleRefProvider" kindref="compound">UniformExampleRefProvider</ref>,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1&gt;<sp/>&gt;<sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1ReceptorStratifiedExampleRefProvider" kindref="compound">ReceptorStratifiedExampleRefProvider&lt;UniformExampleRefProvider, 1&gt;</ref></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(balanced)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grouped)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared<sp/>&lt;<sp/>GroupedExampleRefProvider&lt;BalancedExampleRefProvider&gt;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared<sp/>&lt;<sp/>BalancedExampleRefProvider<sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grouped)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared<sp/>&lt;<sp/>GroupedExampleRefProvider&lt;UniformExampleRefProvider&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared<sp/>&lt;<sp/>UniformExampleRefProvider<sp/>&gt;<sp/>(<ref refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" kindref="member">settings</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>libmolgrid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dkoes/git/libmolgrid/src/example_provider.cpp"/>
  </compounddef>
</doxygen>
