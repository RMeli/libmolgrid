<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="managed__grid_8h" kind="file" language="C++">
    <compoundname>managed_grid.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes refid="grid_8h" local="yes">libmolgrid/grid.h</includes>
    <includedby refid="cartesian__grid_8h" local="yes">cartesian_grid.h</includedby>
    <includedby refid="coordinateset_8h" local="yes">coordinateset.h</includedby>
    <includedby refid="libmolgrid_8cpp" local="yes">libmolgrid.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="16">
        <label>cuda_runtime.h</label>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="5">
        <label>libmolgrid/grid.h</label>
        <link refid="grid_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>random</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="10">
        <label>libmolgrid/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>cuda.h</label>
      </node>
      <node id="12">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="7">
        <label>boost/preprocessor/repetition.hpp</label>
      </node>
      <node id="1">
        <label>managed_grid.h</label>
        <link refid="managed__grid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="14">
        <label>libmolgrid/libmolgrid.h</label>
        <link refid="libmolgrid_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cstring</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>example_extractor.h</label>
        <link refid="example__extractor_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>example.h</label>
        <link refid="example_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>grid_interpolater.h</label>
        <link refid="grid__interpolater_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>grid_io.cpp</label>
        <link refid="grid__io_8cpp"/>
      </node>
      <node id="7">
        <label>cartesian_grid.cpp</label>
        <link refid="cartesian__grid_8cpp"/>
      </node>
      <node id="15">
        <label>example_extractor.cpp</label>
        <link refid="example__extractor_8cpp"/>
      </node>
      <node id="5">
        <label>grid_io.h</label>
        <link refid="grid__io_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>grid_maker.cpp</label>
        <link refid="grid__maker_8cpp"/>
      </node>
      <node id="18">
        <label>exampleref_providers.h</label>
        <link refid="exampleref__providers_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cartesian_grid.h</label>
        <link refid="cartesian__grid_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>coord_cache.h</label>
        <link refid="coord__cache_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>example_dataset.h</label>
        <link refid="example__dataset_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>grid_maker.h</label>
        <link refid="grid__maker_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>libmolgrid.cpp</label>
        <link refid="libmolgrid_8cpp"/>
      </node>
      <node id="13">
        <label>example_provider.h</label>
        <link refid="example__provider_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>transform.cpp</label>
        <link refid="transform_8cpp"/>
      </node>
      <node id="19">
        <label>exampleref_providers.cpp</label>
        <link refid="exampleref__providers_8cpp"/>
      </node>
      <node id="4">
        <label>grid_interpolater.cpp</label>
        <link refid="grid__interpolater_8cpp"/>
      </node>
      <node id="22">
        <label>transform.h</label>
        <link refid="transform_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>example_provider.cpp</label>
        <link refid="example__provider_8cpp"/>
      </node>
      <node id="1">
        <label>managed_grid.h</label>
        <link refid="managed__grid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>coord_cache.cpp</label>
        <link refid="coord__cache_8cpp"/>
      </node>
      <node id="26">
        <label>coordinateset.cpp</label>
        <link refid="coordinateset_8cpp"/>
      </node>
      <node id="12">
        <label>example_dataset.cpp</label>
        <link refid="example__dataset_8cpp"/>
      </node>
      <node id="25">
        <label>example.cpp</label>
        <link refid="example_8cpp"/>
      </node>
      <node id="8">
        <label>coordinateset.h</label>
        <link refid="coordinateset_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlibmolgrid_1_1mgrid__buffer__data" prot="public">libmolgrid::mgrid_buffer_data</innerclass>
    <innerclass refid="classlibmolgrid_1_1ManagedGridBase" prot="public">libmolgrid::ManagedGridBase</innerclass>
    <innerclass refid="classlibmolgrid_1_1ManagedGrid" prot="public">libmolgrid::ManagedGrid</innerclass>
    <innerclass refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" prot="public">libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</innerclass>
    <innernamespace refid="namespacelibmolgrid">libmolgrid</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="managed__grid_8h_1a3e4ee5d42d62ccb8164b3144cf138afe" prot="public" static="no">
        <name>EXPAND_MGRID_DEFINITIONS</name>
        <param><defname>Z</defname></param>
        <param><defname>SIZE</defname></param>
        <param><defname>_</defname></param>
        <initializer>typedef ManagedGrid&lt;float, SIZE&gt; MGrid##SIZE##f; \
typedef ManagedGrid&lt;double, SIZE&gt; MGrid##SIZE##d;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="447" column="9" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A grid that manages its own memory using a shared pointer. Any libmolgrid routines that create a grid option (e.g. readers) return a ManagedGrid. Memory is first allocated as CPU memory but can be explicitly converted to GPU memory and back. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>MANAGED_GRID_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MANAGED_GRID_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="grid_8h" kindref="compound">libmolgrid/grid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibmolgrid" kindref="compound">libmolgrid</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dtype&gt;</highlight></codeline>
<codeline lineno="24" refid="structlibmolgrid_1_1mgrid__buffer__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">mgrid_buffer_data</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Dtype<sp/>*<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>;</highlight></codeline>
<codeline lineno="26" refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dtype,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NumDims&gt;</highlight></codeline>
<codeline lineno="31" refid="classlibmolgrid_1_1ManagedGridBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33" refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype, NumDims, true&gt;</ref>;<sp/></highlight></codeline>
<codeline lineno="34" refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype, NumDims, false&gt;</ref>;</highlight></codeline>
<codeline lineno="35" refid="classlibmolgrid_1_1ManagedGridBase_1a2d7497e2eb6dbb6b75ca3a4df279392b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a2d7497e2eb6dbb6b75ca3a4df279392b" kindref="member">type</ref><sp/>=<sp/>Dtype;</highlight></codeline>
<codeline lineno="36" refid="classlibmolgrid_1_1ManagedGridBase_1ad8331653910a5a034f8238e6a8fbb9b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ad8331653910a5a034f8238e6a8fbb9b1" kindref="member">N</ref><sp/>=<sp/>NumDims;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//two<sp/>different<sp/>views<sp/>of<sp/>the<sp/>same<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>;<sp/></highlight><highlight class="comment">//treated<sp/>as<sp/>a<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>;</highlight></codeline>
<codeline lineno="43" refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Dtype&gt;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>;<sp/></highlight><highlight class="comment">//shared<sp/>pointer<sp/>lets<sp/>us<sp/>not<sp/>worry<sp/>about<sp/>copying<sp/>the<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//amount<sp/>of<sp/>memory<sp/>allocated<sp/>(for<sp/>resizing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classlibmolgrid_1_1ManagedGridBase_1a256a3dbdc150a4d491a57c920fc05c52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">buffer_data</ref><sp/>=<sp/><ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">mgrid_buffer_data&lt;Dtype&gt;</ref>;</highlight></codeline>
<codeline lineno="47" refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">buffer_data</ref><sp/>*<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aa352f347af293a5b9f46d7ae7cf3551f" kindref="member">ManagedGridBase</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deallocate<sp/>our<sp/>special<sp/>buffer<sp/>memory,<sp/>include<sp/>gpu<sp/>memory<sp/>if<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classlibmolgrid_1_1ManagedGridBase_1af5dc0787a765f8e6ba44aee026795537" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1af5dc0787a765f8e6ba44aee026795537" kindref="member">delete_buffer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">buffer_data</ref><sp/>*<ref refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" kindref="member">data</ref><sp/>=<sp/>(<ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">buffer_data</ref>*)(ptr)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" kindref="member">data</ref>-&gt;gpu_ptr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//deallocate<sp/>gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaFree(<ref refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" kindref="member">data</ref>-&gt;gpu_ptr);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>and<sp/>set<sp/>the<sp/>cpu<sp/>pointer<sp/>(and<sp/>grid)<sp/>with<sp/>space<sp/>for<sp/>sent_to_gpu<sp/>bool,<sp/>set<sp/>the<sp/>bool<sp/>ptr<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//does<sp/>not<sp/>initialize<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classlibmolgrid_1_1ManagedGridBase_1a354afea429c9572094ac2c5c5ed19786" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a354afea429c9572094ac2c5c5ed19786" kindref="member">alloc_and_set_cpu</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//put<sp/>buffer<sp/>data<sp/>at<sp/>start<sp/>so<sp/>know<sp/>where<sp/>it<sp/>is<sp/>on<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">buffer_data</ref>)+sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dtype<sp/>*cpu_data<sp/>=<sp/>(Dtype*)((<ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">buffer_data</ref>*)buffer+1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!buffer)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>&quot;</highlight><highlight class="normal">+<ref refid="namespacelibmolgrid_1abc436df6cd0df6fa9524cd420e13a637" kindref="member">itoa</ref>(sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype))+</highlight><highlight class="stringliteral">&quot;<sp/>bytes<sp/>of<sp/>CPU<sp/>memory<sp/>in<sp/>ManagedGrid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref><sp/>=<sp/>std::shared_ptr&lt;Dtype&gt;(cpu_data,<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1af5dc0787a765f8e6ba44aee026795537" kindref="member">delete_buffer</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1a440d5fdb2fea4e01b2d7ca58720e6f9a" kindref="member">set_buffer</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>.get());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref><sp/>=<sp/>(<ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">buffer_data</ref>*)buffer;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>and<sp/>set<sp/>gpu_ptr<sp/>and<sp/>grid,<sp/>does<sp/>not<sp/>initialize<sp/>memory,<sp/>should<sp/>not<sp/>be<sp/>called<sp/>if<sp/>memory<sp/>is<sp/>already<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classlibmolgrid_1_1ManagedGridBase_1aad5407e977e2f417b18ed54a0cf7730c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aad5407e977e2f417b18ed54a0cf7730c" kindref="member">alloc_and_set_gpu</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>allocate<sp/>gpu<sp/>memory<sp/>in<sp/>empty<sp/>ManagedGrid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>reallocate<sp/>gpu<sp/>memory<sp/>in<sp/><sp/>ManagedGrid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>are<sp/>not<sp/>actually<sp/>using<sp/>unified<sp/>memory,<sp/>but<sp/>this<sp/>make<sp/>debugging<sp/>easier?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cudaError_t<sp/>err<sp/>=<sp/>cudaMalloc(&amp;<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>,sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cudaGetLastError();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(err<sp/>!=<sp/>cudaSuccess)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>allocate<sp/>&quot;</highlight><highlight class="normal">+<ref refid="namespacelibmolgrid_1abc436df6cd0df6fa9524cd420e13a637" kindref="member">itoa</ref>(sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype))+</highlight><highlight class="stringliteral">&quot;<sp/>bytes<sp/>of<sp/>GPU<sp/>memory<sp/>in<sp/>ManagedGrid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1a440d5fdb2fea4e01b2d7ca58720e6f9a" kindref="member">set_buffer</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(I)<sp/>==<sp/>NumDims&gt;::<ref refid="classlibmolgrid_1_1ManagedGridBase_1a2d7497e2eb6dbb6b75ca3a4df279392b" kindref="member">type</ref>&gt;</highlight></codeline>
<codeline lineno="94" refid="classlibmolgrid_1_1ManagedGridBase_1af8fd252961332be4d6b9f71a5e418186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1af8fd252961332be4d6b9f71a5e418186" kindref="member">ManagedGridBase</ref>(I...<sp/>sizes):<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>sizes...),<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>sizes...)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref><sp/>=<sp/>this-&gt;<ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a354afea429c9572094ac2c5c5ed19786" kindref="member">alloc_and_set_cpu</ref>(capacity);<sp/></highlight><highlight class="comment">//even<sp/>with<sp/>capacity<sp/>==<sp/>0<sp/>need<sp/>to<sp/>allocate<sp/>sent_to_gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>.get(),<sp/>0,<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//helper<sp/>for<sp/>clone,<sp/>allocate<sp/>new<sp/>memory<sp/>and<sp/>copies<sp/>contents<sp/>of<sp/>current<sp/>ptr<sp/>into<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classlibmolgrid_1_1ManagedGridBase_1a3ab3abfca1447e4fc0874c00c47aadff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ab3abfca1447e4fc0874c00c47aadff" kindref="member">clone_ptrs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//duplicate<sp/>cpu<sp/>memory<sp/>and<sp/>set<sp/>sent_to_gpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Dtype&gt;<sp/>old<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">buffer_data</ref><sp/>oldgpu<sp/>=<sp/>*<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a354afea429c9572094ac2c5c5ed19786" kindref="member">alloc_and_set_cpu</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>.get(),<sp/>old.get(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype)*<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref><sp/>=<sp/>oldgpu.<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>allocated,<sp/>duplicate<sp/>gpu,<sp/>but<sp/>only<sp/>if<sp/>it<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oldgpu.<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref><sp/>&amp;&amp;<sp/>oldgpu.<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aad5407e977e2f417b18ed54a0cf7730c" kindref="member">alloc_and_set_gpu</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>,<sp/>oldgpu.<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype)*<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>,<sp/>cudaMemcpyDeviceToDevice));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classlibmolgrid_1_1ManagedGridBase_1adc57df2d9d355c2c98206d8ca7ab230d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1adc57df2d9d355c2c98206d8ca7ab230d" kindref="member">dimensions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1a483b22b3df988a8a315fe4525097cd91" kindref="member">dimensions</ref>();<sp/>}</highlight></codeline>
<codeline lineno="126" refid="classlibmolgrid_1_1ManagedGridBase_1a4a86470b9f8e551e5a060872f9e5680e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a4a86470b9f8e551e5a060872f9e5680e" kindref="member">dimension</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aa9b61e8668a98c2e264339c38e74065b" kindref="member">dimension</ref>(i);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classlibmolgrid_1_1ManagedGridBase_1ab18a0f2c17222ceecc823cdb1df6f9e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ab18a0f2c17222ceecc823cdb1df6f9e2" kindref="member">offsets</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1a99fba573ee49cb59c992f17f4cbc21bb" kindref="member">offsets</ref>();<sp/>}</highlight></codeline>
<codeline lineno="131" refid="classlibmolgrid_1_1ManagedGridBase_1ab1990983adc822e595a52ba83d689a9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ab1990983adc822e595a52ba83d689a9e" kindref="member">offset</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1a67a4d2469cf97b1e2018d220c5992ca7" kindref="member">offset</ref>(i);<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>();<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classlibmolgrid_1_1ManagedGridBase_1a512219066836349f65f85a0ead19ae8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a512219066836349f65f85a0ead19ae8a" kindref="member">fill_zero</ref>()<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1a512219066836349f65f85a0ead19ae8a" kindref="member">fill_zero</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1a512219066836349f65f85a0ead19ae8a" kindref="member">fill_zero</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I&gt;</highlight></codeline>
<codeline lineno="146" refid="classlibmolgrid_1_1ManagedGridBase_1aa5b105cea5249d8b627dc7a9e897f0a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aa5b105cea5249d8b627dc7a9e897f0a1" kindref="member">operator()</ref>(I...<sp/>indices)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" kindref="member">tocpu</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>(indices...);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I&gt;</highlight></codeline>
<codeline lineno="152" refid="classlibmolgrid_1_1ManagedGridBase_1ac469c7ee3d92be77bc38bddb26b5f695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ac469c7ee3d92be77bc38bddb26b5f695" kindref="member">operator()</ref>(I...<sp/>indices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" kindref="member">tocpu</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>(indices...);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classlibmolgrid_1_1ManagedGridBase_1aff4a416b7db91859de81b24856be632a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aff4a416b7db91859de81b24856be632a" kindref="member">copyTo</ref>(<ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref>&amp;<sp/>dest)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::min(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>(),<sp/>dest.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(dest.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<sp/>sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),<sp/>cudaMemcpyDeviceToHost));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//host<sp/>ot<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dest.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classlibmolgrid_1_1ManagedGridBase_1acbc53c65c1c27667a659ec84dafbe01a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acbc53c65c1c27667a659ec84dafbe01a" kindref="member">copyTo</ref>(<ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref>&amp;<sp/>dest)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::min(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>(),<sp/>dest.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(dest.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),cudaMemcpyDeviceToDevice));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(dest.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),cudaMemcpyHostToDevice));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classlibmolgrid_1_1ManagedGridBase_1afd5ca42172cc845309b01069ed3a14c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1afd5ca42172cc845309b01069ed3a14c2" kindref="member">copyTo</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype, NumDims&gt;</ref>&amp;<sp/>dest)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dest.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aff4a416b7db91859de81b24856be632a" kindref="member">copyTo</ref>(dest.<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aff4a416b7db91859de81b24856be632a" kindref="member">copyTo</ref>(dest.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classlibmolgrid_1_1ManagedGridBase_1a32a5cdeb67c51d9b75925d93277a1ed0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a32a5cdeb67c51d9b75925d93277a1ed0" kindref="member">copyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::min(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>(),<sp/>src.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<sp/>src.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<sp/>sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),<sp/>cudaMemcpyHostToDevice));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),src.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classlibmolgrid_1_1ManagedGridBase_1ac4d8dd20279b234e0d8c057f052c4a95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ac4d8dd20279b234e0d8c057f052c4a95" kindref="member">copyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::min(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>(),<sp/>src.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),src.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),cudaMemcpyDeviceToDevice));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),src.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),cudaMemcpyDeviceToHost));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classlibmolgrid_1_1ManagedGridBase_1a7f97a564c8b4e32c14d7b4ab58255295" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a7f97a564c8b4e32c14d7b4ab58255295" kindref="member">copyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype, NumDims&gt;</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a32a5cdeb67c51d9b75925d93277a1ed0" kindref="member">copyFrom</ref>(src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//on<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a32a5cdeb67c51d9b75925d93277a1ed0" kindref="member">copyFrom</ref>(src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classlibmolgrid_1_1ManagedGridBase_1ab92b52fef49a9d7440a98f567c28f168" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ab92b52fef49a9d7440a98f567c28f168" kindref="member">copyInto</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype, NumDims&gt;</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>off<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ab1990983adc822e595a52ba83d689a9e" kindref="member">offset</ref>(0)*start;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>()-off;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sz<sp/>=<sp/>std::min(sz,<sp/>src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()+off,src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),cudaMemcpyDeviceToDevice));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()+off,src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),cudaMemcpyDeviceToHost));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//on<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()+off,<sp/>src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" kindref="member">data</ref>(),<sp/>sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),<sp/>cudaMemcpyHostToDevice));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()+off,src.<ref refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(I)<sp/>==<sp/>NumDims&gt;::<ref refid="classlibmolgrid_1_1ManagedGridBase_1a2d7497e2eb6dbb6b75ca3a4df279392b" kindref="member">type</ref>&gt;</highlight></codeline>
<codeline lineno="252" refid="classlibmolgrid_1_1ManagedGridBase_1a8576226e00915bc8c923e0b9c77e051e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype, NumDims&gt;</ref><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a8576226e00915bc8c923e0b9c77e051e" kindref="member">resized</ref>(I...<sp/>sizes)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref><sp/>g(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>sizes...);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(g.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>()<sp/>&lt;=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>need<sp/>to<sp/>allocate<sp/>and<sp/>copy;<sp/>capacity<sp/>stays<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype, NumDims&gt;</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.cpu_ptr<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.gpu_info<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.cpu_grid<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" kindref="member">cpu_grid_t</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>.get(),<sp/>sizes...);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>)<sp/>tmp.gpu_grid<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" kindref="member">gpu_grid_t</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>,<sp/>sizes...);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.capacity<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype, NumDims&gt;</ref><sp/>tmp(sizes...);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>tmp.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>())<sp/>tmp.togpu();<sp/></highlight><highlight class="comment">//allocate<sp/>gpu<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aff4a416b7db91859de81b24856be632a" kindref="member">copyTo</ref>(tmp);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classlibmolgrid_1_1ManagedGridBase_1acc87d7aacb8f79831cae339b3039b65d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref>&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc87d7aacb8f79831cae339b3039b65d" kindref="member">gpu</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a18aaaed8a845f4c8ad9c30d0693e03c1" kindref="member">togpu</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>;<sp/>}</highlight></codeline>
<codeline lineno="277" refid="classlibmolgrid_1_1ManagedGridBase_1aa5c4b729fa4facfb55cb19b51f5797cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref>&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aa5c4b729fa4facfb55cb19b51f5797cb" kindref="member">gpu</ref>()<sp/>{<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a18aaaed8a845f4c8ad9c30d0693e03c1" kindref="member">togpu</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>;<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classlibmolgrid_1_1ManagedGridBase_1af9baf061634fae1bd30d7abd24900263" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref>&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1af9baf061634fae1bd30d7abd24900263" kindref="member">cpu</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" kindref="member">tocpu</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>;<sp/>}</highlight></codeline>
<codeline lineno="282" refid="classlibmolgrid_1_1ManagedGridBase_1abc539db90c9ad1195006ab86c772f4a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref>&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1abc539db90c9ad1195006ab86c772f4a3" kindref="member">cpu</ref>()<sp/>{<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" kindref="member">tocpu</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>;<sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classlibmolgrid_1_1ManagedGridBase_1a18aaaed8a845f4c8ad9c30d0693e03c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a18aaaed8a845f4c8ad9c30d0693e03c1" kindref="member">togpu</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dotransfer=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>memory<sp/>is<sp/>allocated<sp/>-<sp/>even<sp/>if<sp/>data<sp/>is<sp/>on<sp/>gpu,<sp/>may<sp/>still<sp/>need<sp/>to<sp/>set<sp/>this<sp/>mgrid&apos;s<sp/>gpu_grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aad5407e977e2f417b18ed54a0cf7730c" kindref="member">alloc_and_set_gpu</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//otherwise<sp/>some<sp/>other<sp/>copy<sp/>has<sp/>already<sp/>allocated<sp/>memory,<sp/>just<sp/>need<sp/>to<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ab1990983adc822e595a52ba83d689a9e" kindref="member">offset</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()<sp/>-<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>.get();<sp/></highlight><highlight class="comment">//might<sp/>be<sp/>subgrid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1a440d5fdb2fea4e01b2d7ca58720e6f9a" kindref="member">set_buffer</ref>(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>+<ref refid="classlibmolgrid_1_1ManagedGridBase_1ab1990983adc822e595a52ba83d689a9e" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a2b2ad679c12e649d9b5a0fd8f03d3237" kindref="member">oncpu</ref>()<sp/>&amp;&amp;<sp/>dotransfer)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>,<ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>.get(),<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),cudaMemcpyHostToDevice));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>)<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" kindref="member">tocpu</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dotransfer=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>()<sp/>&amp;&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>dotransfer)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>.get(),<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1adf32db11f40e4262951eabf20cf264a8" kindref="member">gpu_ptr</ref>,<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),cudaMemcpyDeviceToHost));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>)<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" kindref="member">ongpu</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref><sp/>&amp;&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&amp;&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a18aaaed8a845f4c8ad9c30d0693e03c1" kindref="member">togpu</ref>();<sp/></highlight><highlight class="comment">//needed<sp/>if<sp/>this<sp/>is<sp/>a<sp/>copy<sp/>made<sp/>before<sp/>another<sp/>transfered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classlibmolgrid_1_1ManagedGridBase_1a2b2ad679c12e649d9b5a0fd8f03d3237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a2b2ad679c12e649d9b5a0fd8f03d3237" kindref="member">oncpu</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>!<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>-&gt;<ref refid="structlibmolgrid_1_1mgrid__buffer__data_1a8b2dea69bfa574c3fc5c573f37c9ec1e" kindref="member">sent_to_gpu</ref>;<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="classlibmolgrid_1_1ManagedGridBase_1a8c2b884f05b8f337cada06f5f978b588" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" kindref="member">cpu_grid_t</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1af9baf061634fae1bd30d7abd24900263" kindref="member">cpu</ref>();<sp/>}</highlight></codeline>
<codeline lineno="321" refid="classlibmolgrid_1_1ManagedGridBase_1a535df4d8926149a00163552a34596d69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref>&amp;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1af9baf061634fae1bd30d7abd24900263" kindref="member">cpu</ref>();<sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="classlibmolgrid_1_1ManagedGridBase_1a10b2f00260f2d9a097fbd7eda7bc9a4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" kindref="member">gpu_grid_t</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc87d7aacb8f79831cae339b3039b65d" kindref="member">gpu</ref>();<sp/>}</highlight></codeline>
<codeline lineno="324" refid="classlibmolgrid_1_1ManagedGridBase_1ada677d2971fd6a2aad1277901804cdd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref>&amp;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc87d7aacb8f79831cae339b3039b65d" kindref="member">gpu</ref>();<sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dtype<sp/>*<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" kindref="member">tocpu</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1af9baf061634fae1bd30d7abd24900263" kindref="member">cpu</ref>().<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>();<sp/>}</highlight></codeline>
<codeline lineno="328" refid="classlibmolgrid_1_1ManagedGridBase_1aecdaa9892795d526d6d468e21ef3a2b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/>*<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1aecdaa9892795d526d6d468e21ef3a2b2" kindref="member">data</ref>()<sp/>{<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" kindref="member">tocpu</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1af9baf061634fae1bd30d7abd24900263" kindref="member">cpu</ref>().<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>();<sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pointer<sp/>equality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classlibmolgrid_1_1ManagedGridBase_1a1a93843cbf5cdc9ed0a1bf5b4d760068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a1a93843cbf5cdc9ed0a1bf5b4d760068" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype, NumDims&gt;</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref><sp/>==<sp/>rhs.<ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>used<sp/>by<sp/>operator[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classlibmolgrid_1_1ManagedGridBase_1a405571fa8a8314ff906c31579d2f532a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt;Dtype,NumDims-1&gt;;</highlight></codeline>
<codeline lineno="337" refid="classlibmolgrid_1_1ManagedGridBase_1a91cffc514989351e3b586aa73754b63e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a91cffc514989351e3b586aa73754b63e" kindref="member">ManagedGridBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype,NumDims+1&gt;</ref>&amp;<sp/>G,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i):</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>(G.<ref refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" kindref="member">gpu_grid</ref>,<sp/>i),<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>(G.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" kindref="member">cpu_grid</ref>,<sp/>i),<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>(G.<ref refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" kindref="member">cpu_ptr</ref>),</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>(G.<ref refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" kindref="member">capacity</ref>),<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>(G.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" kindref="member">gpu_info</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="340"><highlight class="normal">};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dtype,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NumDims&gt;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ManagedGrid<sp/>:<sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ManagedGridBase&lt;Dtype,<sp/>NumDims&gt;<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364" refid="classlibmolgrid_1_1ManagedGrid_1a2e6fb40ebdb1c8bd1ba55716d6bff024" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">subgrid_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid</ref>&lt;Dtype,NumDims-1&gt;;</highlight></codeline>
<codeline lineno="365" refid="classlibmolgrid_1_1ManagedGrid_1a5f65ecf59323f2fdf69c9ba72425a1a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">base_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype, NumDims&gt;</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//empty,<sp/>unusable<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(I)<sp/>==<sp/>NumDims&gt;::type&gt;</highlight></codeline>
<codeline lineno="371" refid="classlibmolgrid_1_1ManagedGrid_1a450e51f93738ce2648184d4e7aa6bdde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_1a450e51f93738ce2648184d4e7aa6bdde" kindref="member">ManagedGrid</ref>(I...<sp/>sizes):<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype,NumDims&gt;</ref>(sizes...)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="classlibmolgrid_1_1ManagedGrid_1a14458c450fbf8c804da18d80f652224a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">subgrid_t</ref><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_1a14458c450fbf8c804da18d80f652224a" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&gt;=<sp/>this-&gt;cpu_grid.<ref refid="classlibmolgrid_1_1Grid_1aa9b61e8668a98c2e264339c38e74065b" kindref="member">dimension</ref>(0))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Index<sp/>&quot;</highlight><highlight class="normal">+boost::lexical_cast&lt;std::string&gt;(i)+</highlight><highlight class="stringliteral">&quot;<sp/>out<sp/>of<sp/>bounds<sp/>of<sp/>dimension<sp/>&quot;</highlight><highlight class="normal">+boost::lexical_cast&lt;std::string&gt;(this-&gt;cpu_grid.<ref refid="classlibmolgrid_1_1Grid_1aa9b61e8668a98c2e264339c38e74065b" kindref="member">dimension</ref>(0)));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid</ref>&lt;Dtype,NumDims-1&gt;(*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype, NumDims&gt;</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>i);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="classlibmolgrid_1_1ManagedGrid_1a7ff8e1562862acfd393839e9ef444657" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype, NumDims&gt;</ref><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_1a7ff8e1562862acfd393839e9ef444657" kindref="member">clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype, NumDims&gt;</ref><sp/>ret(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret.clone_ptrs();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>called<sp/>from<sp/>regular<sp/>Grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="classlibmolgrid_1_1ManagedGrid_1a8e96661ffa162bb99c56ae34b11556e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype,NumDims+1&gt;</ref>;</highlight></codeline>
<codeline lineno="395" refid="classlibmolgrid_1_1ManagedGrid_1af59109eec7a2269b0dd17e7497f71e01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype,NumDims&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype,NumDims+1&gt;</ref>&amp;<sp/>G,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i):</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt;Dtype,NumDims&gt;(G,<sp/>i)<sp/>{}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">};</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>specialization<sp/>of<sp/>managed<sp/>grid<sp/>to<sp/>make<sp/>final<sp/>operator[]<sp/>return<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dtype<sp/>&gt;</highlight></codeline>
<codeline lineno="403" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" kindref="compound">ManagedGrid&lt;Dtype, 1&gt;</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype, 1&gt;</ref><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="405" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1aee2fd0a001c66664abf20c3b1bbf9eee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1aee2fd0a001c66664abf20c3b1bbf9eee" kindref="member">subgrid_t</ref><sp/>=<sp/>Dtype;</highlight></codeline>
<codeline lineno="406" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a07fd586f0921db2d99a7515f4de53c70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">base_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype, 1&gt;</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a3b6de4140da5abdd45cc065029a2e386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a3b6de4140da5abdd45cc065029a2e386" kindref="member">ManagedGrid</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz):<sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt;Dtype,<sp/>1&gt;(sz)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1ada569361f39baed5fc44edff9ed2215d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1ada569361f39baed5fc44edff9ed2215d" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;tocpu();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cpu_grid[i];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1aa9c9c223b686c7b2f66daafd40e34b60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1aa9c9c223b686c7b2f66daafd40e34b60" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;tocpu();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cpu_grid[i];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1ae358ca901023dc35845975cad12e35de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype&amp;<sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1ae358ca901023dc35845975cad12e35de" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;tocpu();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cpu_grid(a);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a702d22411f97ff6b4818fdc4e52028ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a702d22411f97ff6b4818fdc4e52028ba" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;tocpu();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cpu_grid(a);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a5435aa93c62edc608d2c5c4ae871fb3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" kindref="compound">ManagedGrid&lt;Dtype, 1&gt;</ref><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a5435aa93c62edc608d2c5c4ae871fb3b" kindref="member">clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" kindref="compound">ManagedGrid&lt;Dtype, 1&gt;</ref><sp/>ret(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret.<ref refid="classlibmolgrid_1_1ManagedGridBase_1a3ab3abfca1447e4fc0874c00c47aadff" kindref="member">clone_ptrs</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>called<sp/>from<sp/>regular<sp/>Grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a509c5cf770fc539a633de7e4a62fed08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype,2&gt;</ref>;</highlight></codeline>
<codeline lineno="441" refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a3f1228b111e708b7bbbc452ef95e851f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" kindref="compound">ManagedGrid&lt;Dtype,1&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase&lt;Dtype,2&gt;</ref>&amp;<sp/>G,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i):</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt;Dtype,1&gt;(G,<sp/>i)<sp/>{}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">};</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="managed__grid_8h_1a3e4ee5d42d62ccb8164b3144cf138afe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPAND_MGRID_DEFINITIONS(Z,SIZE,_)<sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor">typedef<sp/>ManagedGrid&lt;float,<sp/>SIZE&gt;<sp/>MGrid##SIZE##f;<sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor">typedef<sp/>ManagedGrid&lt;double,<sp/>SIZE&gt;<sp/>MGrid##SIZE##d;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><ref refid="namespacelibmolgrid_1abaefa4db48d107196d082640795579b1" kindref="member">BOOST_PP_REPEAT_FROM_TO</ref>(1,<ref refid="libmolgrid_8h_1aecdd40dd95edce99f66998b301481d75" kindref="member">LIBMOLGRID_MAX_GRID_DIM</ref>,<sp/><ref refid="managed__grid_8h_1a3e4ee5d42d62ccb8164b3144cf138afe" kindref="member">EXPAND_MGRID_DEFINITIONS</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MANAGED_GRID_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h"/>
  </compounddef>
</doxygen>
