<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" kind="class" language="C++" prot="public">
    <compoundname>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</compoundname>
    <basecompoundref refid="classlibmolgrid_1_1ManagedGridBase" prot="public" virt="non-virtual">ManagedGridBase&lt; Dtype, 1 &gt;</basecompoundref>
    <includes refid="managed__grid_8h" local="no">managed_grid.h</includes>
    <templateparamlist>
      <param>
        <type>typename Dtype</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1aee2fd0a001c66664abf20c3b1bbf9eee" prot="public" static="no">
        <type>Dtype</type>
        <definition>using subgrid_t =  Dtype</definition>
        <argsstring></argsstring>
        <name>subgrid_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="405" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a07fd586f0921db2d99a7515f4de53c70" prot="public" static="no">
        <type><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt; Dtype, 1 &gt;</type>
        <definition>using base_t =  ManagedGridBase&lt;Dtype, 1&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="406" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" prot="public" static="no">
        <type><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid</ref>&lt; Dtype, NumDims, true &gt;</type>
        <definition>using gpu_grid_t =  Grid&lt;Dtype, NumDims, true&gt;</definition>
        <argsstring></argsstring>
        <name>gpu_grid_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="33" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" prot="public" static="no">
        <type><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid</ref>&lt; Dtype, NumDims, false &gt;</type>
        <definition>using cpu_grid_t =  Grid&lt;Dtype, NumDims, false&gt;</definition>
        <argsstring></argsstring>
        <name>cpu_grid_t</name>
        <briefdescription>
<para>cuda grid type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="34" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classlibmolgrid_1_1ManagedGridBase_1a2d7497e2eb6dbb6b75ca3a4df279392b" prot="public" static="no">
        <type>Dtype</type>
        <definition>using type =  Dtype</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="35" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a509c5cf770fc539a633de7e4a62fed08" prot="protected" static="no" mutable="no">
        <type>friend</type>
        <definition>friend ManagedGrid&lt; Dtype, 2 &gt;</definition>
        <argsstring></argsstring>
        <name>ManagedGrid&lt; Dtype, 2 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="440" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" prot="protected" static="no" mutable="yes">
        <type><ref refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" kindref="member">gpu_grid_t</ref></type>
        <definition>gpu_grid_t gpu_grid</definition>
        <argsstring></argsstring>
        <name>gpu_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="41" column="24" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" prot="protected" static="no" mutable="no">
        <type><ref refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" kindref="member">cpu_grid_t</ref></type>
        <definition>cpu_grid_t cpu_grid</definition>
        <argsstring></argsstring>
        <name>cpu_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="42" column="16" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; Dtype &gt;</type>
        <definition>std::shared_ptr&lt;Dtype&gt; cpu_ptr</definition>
        <argsstring></argsstring>
        <name>cpu_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="43" column="21" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="44" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" prot="protected" static="no" mutable="yes">
        <type><ref refid="classlibmolgrid_1_1ManagedGridBase_1a256a3dbdc150a4d491a57c920fc05c52" kindref="member">buffer_data</ref> *</type>
        <definition>buffer_data* gpu_info</definition>
        <argsstring></argsstring>
        <name>gpu_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="47" column="25" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ManagedGridBase_1a405571fa8a8314ff906c31579d2f532a" prot="protected" static="no" mutable="no">
        <type>friend</type>
        <definition>friend ManagedGridBase&lt; Dtype, NumDims-1 &gt;</definition>
        <argsstring></argsstring>
        <name>ManagedGridBase&lt; Dtype, NumDims-1 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="336" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a8ead5fb1d995fcaaa3a0be1e0b653b50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ManagedGrid</definition>
        <argsstring>()=default</argsstring>
        <name>ManagedGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="408" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a3b6de4140da5abdd45cc065029a2e386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ManagedGrid</definition>
        <argsstring>(size_t sz)</argsstring>
        <name>ManagedGrid</name>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="409" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="409" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1ada569361f39baed5fc44edff9ed2215d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype &amp;</type>
        <definition>Dtype&amp; operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="412" column="18" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="412" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1aa9c9c223b686c7b2f66daafd40e34b60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>Dtype operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="417" column="18" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="417" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1ae358ca901023dc35845975cad12e35de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype &amp;</type>
        <definition>Dtype&amp; operator()</definition>
        <argsstring>(size_t a)</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="422" column="18" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="422" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a702d22411f97ff6b4818fdc4e52028ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>Dtype operator()</definition>
        <argsstring>(size_t a) const</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="427" column="18" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="427" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a5435aa93c62edc608d2c5c4ae871fb3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid</ref>&lt; Dtype, 1 &gt;</type>
        <definition>ManagedGrid&lt;Dtype, 1&gt; clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="432" column="17" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="432" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1adc57df2d9d355c2c98206d8ca7ab230d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const size_t *</type>
        <definition>const size_t* dimensions</definition>
        <argsstring>() const</argsstring>
        <name>dimensions</name>
        <briefdescription>
<para>dimensions along each axis </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="124" column="26" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a4a86470b9f8e551e5a060872f9e5680e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t dimension</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>dimension</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>dimensions along specified axis </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="126" column="19" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1ab18a0f2c17222ceecc823cdb1df6f9e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const size_t *</type>
        <definition>const size_t* offsets</definition>
        <argsstring>() const</argsstring>
        <name>offsets</name>
        <briefdescription>
<para>offset for each dimension, all indexing calculations use this </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="129" column="26" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1ab1990983adc822e595a52ba83d689a9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t offset</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>offset</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>offset for each dimension, all indexing calculations use this </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="131" column="19" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>number of elements in grid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="134" column="19" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a512219066836349f65f85a0ead19ae8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fill_zero</definition>
        <argsstring>()</argsstring>
        <name>fill_zero</name>
        <briefdescription>
<para>set contents to zero </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="137" column="17" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1aa5b105cea5249d8b627dc7a9e897f0a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype &amp;</type>
        <definition>Dtype&amp; operator()</definition>
        <argsstring>(I... indices)</argsstring>
        <name>operator()</name>
        <param>
          <type>I...</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
<para>Initializer list indexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="146" column="18" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1ac469c7ee3d92be77bc38bddb26b5f695" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype</type>
        <definition>Dtype operator()</definition>
        <argsstring>(I... indices) const</argsstring>
        <name>operator()</name>
        <param>
          <type>I...</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="152" column="18" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1aff4a416b7db91859de81b24856be632a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t copyTo</definition>
        <argsstring>(cpu_grid_t &amp;dest) const</argsstring>
        <name>copyTo</name>
        <param>
          <type><ref refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" kindref="member">cpu_grid_t</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Copy data into dest. Should be same size, but will narrow if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="158" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1acbc53c65c1c27667a659ec84dafbe01a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t copyTo</definition>
        <argsstring>(gpu_grid_t &amp;dest) const</argsstring>
        <name>copyTo</name>
        <param>
          <type><ref refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" kindref="member">gpu_grid_t</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Copy data into dest. Should be same size, but will narrow if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="170" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="170" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1afd5ca42172cc845309b01069ed3a14c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t copyTo</definition>
        <argsstring>(ManagedGridBase&lt; Dtype, NumDims &gt; &amp;dest) const</argsstring>
        <name>copyTo</name>
        <param>
          <type><ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt; Dtype, NumDims &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Copy data into dest. Should be same size, but will narrow if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="182" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="182" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a32a5cdeb67c51d9b75925d93277a1ed0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t copyFrom</definition>
        <argsstring>(const cpu_grid_t &amp;src)</argsstring>
        <name>copyFrom</name>
        <param>
          <type>const <ref refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" kindref="member">cpu_grid_t</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy data from src. Should be same size, but will narrow if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="191" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="191" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1ac4d8dd20279b234e0d8c057f052c4a95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t copyFrom</definition>
        <argsstring>(const gpu_grid_t &amp;src)</argsstring>
        <name>copyFrom</name>
        <param>
          <type>const <ref refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" kindref="member">gpu_grid_t</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy data from src. Should be same size, but will narrow if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="203" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="203" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a7f97a564c8b4e32c14d7b4ab58255295" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t copyFrom</definition>
        <argsstring>(const ManagedGridBase&lt; Dtype, NumDims &gt; &amp;src)</argsstring>
        <name>copyFrom</name>
        <param>
          <type>const <ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt; Dtype, NumDims &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy data from src. Should be same size, but will narrow if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="215" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="215" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1ab92b52fef49a9d7440a98f567c28f168" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t copyInto</definition>
        <argsstring>(size_t start, const ManagedGridBase&lt; Dtype, NumDims &gt; &amp;src)</argsstring>
        <name>copyInto</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt; Dtype, NumDims &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy data from src into this starting at start. Should be same size, but will narrow if needed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="224" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="224" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a8576226e00915bc8c923e0b9c77e051e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid</ref>&lt; Dtype, NumDims &gt;</type>
        <definition>ManagedGrid&lt;Dtype, NumDims&gt; resized</definition>
        <argsstring>(I... sizes)</argsstring>
        <name>resized</name>
        <param>
          <type>I...</type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
<para>Return a grid in the specified shape that attempts to reuse the memory of this grid. Memory will be allocated if needed. Data will be truncated/copied as needed. DANGER! The returned grid may or may not mirror this grid depending on the shape. This function is provided so code can be optimized to avoid unnecessary allocations and should be used carefully. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="252" column="17" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="252" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1acc87d7aacb8f79831cae339b3039b65d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" kindref="member">gpu_grid_t</ref> &amp;</type>
        <definition>const gpu_grid_t&amp; gpu</definition>
        <argsstring>() const</argsstring>
        <name>gpu</name>
        <briefdescription>
<para>Return GPU Grid view. Host code should not access the grid until the GPU code is complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="276" column="22" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1aa5c4b729fa4facfb55cb19b51f5797cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" kindref="member">gpu_grid_t</ref> &amp;</type>
        <definition>gpu_grid_t&amp; gpu</definition>
        <argsstring>()</argsstring>
        <name>gpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="277" column="16" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1af9baf061634fae1bd30d7abd24900263" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" kindref="member">cpu_grid_t</ref> &amp;</type>
        <definition>const cpu_grid_t&amp; cpu</definition>
        <argsstring>() const</argsstring>
        <name>cpu</name>
        <briefdescription>
<para>Return CPU Grid view. GPU code should no longer access this memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="281" column="22" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1abc539db90c9ad1195006ab86c772f4a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" kindref="member">cpu_grid_t</ref> &amp;</type>
        <definition>cpu_grid_t&amp; cpu</definition>
        <argsstring>()</argsstring>
        <name>cpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="282" column="16" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="282" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a18aaaed8a845f4c8ad9c30d0693e03c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void togpu</definition>
        <argsstring>(bool dotransfer=true) const</argsstring>
        <name>togpu</name>
        <param>
          <type>bool</type>
          <declname>dotransfer</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Transfer data to GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="285" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="285" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tocpu</definition>
        <argsstring>(bool dotransfer=true) const</argsstring>
        <name>tocpu</name>
        <param>
          <type>bool</type>
          <declname>dotransfer</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Transfer data to CPU. If not dotransfer, data is not copied back. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="302" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="302" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ongpu</definition>
        <argsstring>() const</argsstring>
        <name>ongpu</name>
        <briefdescription>
<para>Return true if memory is currently on GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="310" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a2b2ad679c12e649d9b5a0fd8f03d3237" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool oncpu</definition>
        <argsstring>() const</argsstring>
        <name>oncpu</name>
        <briefdescription>
<para>Return true if memory is currently on CPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="317" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="317" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a8c2b884f05b8f337cada06f5f978b588" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator cpu_grid_t</definition>
        <argsstring>() const</argsstring>
        <name>operator cpu_grid_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="320" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a535df4d8926149a00163552a34596d69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator cpu_grid_t &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator cpu_grid_t &amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="321" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a10b2f00260f2d9a097fbd7eda7bc9a4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator gpu_grid_t</definition>
        <argsstring>() const</argsstring>
        <name>operator gpu_grid_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="323" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1ada677d2971fd6a2aad1277901804cdd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator gpu_grid_t &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator gpu_grid_t &amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="324" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="324" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Dtype *</type>
        <definition>const Dtype* data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Return pointer to CPU data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="327" column="25" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="327" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1aecdaa9892795d526d6d468e21ef3a2b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Dtype *</type>
        <definition>Dtype* data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="328" column="19" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="328" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a1a93843cbf5cdc9ed0a1bf5b4d760068" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const ManagedGridBase&lt; Dtype, NumDims &gt; &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt; Dtype, NumDims &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="331" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="331" bodyend="333"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a3f1228b111e708b7bbbc452ef95e851f" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ManagedGrid</definition>
        <argsstring>(const ManagedGridBase&lt; Dtype, 2 &gt; &amp;G, size_t i)</argsstring>
        <name>ManagedGrid</name>
        <param>
          <type>const <ref refid="classlibmolgrid_1_1ManagedGridBase" kindref="compound">ManagedGridBase</ref>&lt; Dtype, 2 &gt; &amp;</type>
          <declname>G</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="440" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="441" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a354afea429c9572094ac2c5c5ed19786" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void alloc_and_set_cpu</definition>
        <argsstring>(size_t sz)</argsstring>
        <name>alloc_and_set_cpu</name>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="64" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1aad5407e977e2f417b18ed54a0cf7730c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void alloc_and_set_gpu</definition>
        <argsstring>(size_t sz) const</argsstring>
        <name>alloc_and_set_gpu</name>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="78" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="78" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1a3ab3abfca1447e4fc0874c00c47aadff" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clone_ptrs</definition>
        <argsstring>()</argsstring>
        <name>clone_ptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="103" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="103" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classlibmolgrid_1_1ManagedGridBase_1a256a3dbdc150a4d491a57c920fc05c52" prot="protected" static="no">
        <type><ref refid="structlibmolgrid_1_1mgrid__buffer__data" kindref="compound">mgrid_buffer_data</ref>&lt; Dtype &gt;</type>
        <definition>using buffer_data =  mgrid_buffer_data&lt;Dtype&gt;</definition>
        <argsstring></argsstring>
        <name>buffer_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="46" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classlibmolgrid_1_1ManagedGridBase_1ad8331653910a5a034f8238e6a8fbb9b1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="36" column="29" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classlibmolgrid_1_1ManagedGridBase_1af5dc0787a765f8e6ba44aee026795537" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void delete_buffer</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>delete_buffer</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="54" column="17" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="54" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ManagedGrid&lt; Dtype, 1 &gt;</label>
        <link refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ManagedGridBase&lt; Dtype, 1 &gt;</label>
        <link refid="classlibmolgrid_1_1ManagedGridBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>shared_ptr&lt; Dtype &gt;</label>
      </node>
      <node id="1">
        <label>ManagedGrid&lt; Dtype, 1 &gt;</label>
        <link refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ManagedGridBase&lt; Dtype, 1 &gt;</label>
        <link refid="classlibmolgrid_1_1ManagedGridBase"/>
        <childnode refid="3" relation="usage">
          <edgelabel>gpu_info</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cpu_ptr</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>cpu_grid</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>gpu_grid</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Grid&lt; Dtype, NumDims, false &gt;</label>
        <link refid="classlibmolgrid_1_1Grid"/>
      </node>
      <node id="3">
        <label>mgrid_buffer_data&lt; Dtype &gt;</label>
        <link refid="structlibmolgrid_1_1mgrid__buffer__data"/>
      </node>
      <node id="6">
        <label>Grid&lt; Dtype, NumDims, true &gt;</label>
        <link refid="classlibmolgrid_1_1Grid"/>
      </node>
    </collaborationgraph>
    <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" line="403" column="44" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/managed_grid.h" bodystart="403" bodyend="444"/>
    <listofallmembers>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a354afea429c9572094ac2c5c5ed19786" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>alloc_and_set_cpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1aad5407e977e2f417b18ed54a0cf7730c" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>alloc_and_set_gpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a07fd586f0921db2d99a7515f4de53c70" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>base_t</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a256a3dbdc150a4d491a57c920fc05c52" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>buffer_data</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1ad721fc6ca6a3d6ba3bc506576622aab0" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>capacity</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a5435aa93c62edc608d2c5c4ae871fb3b" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>clone</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a3ab3abfca1447e4fc0874c00c47aadff" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>clone_ptrs</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a32a5cdeb67c51d9b75925d93277a1ed0" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>copyFrom</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1ac4d8dd20279b234e0d8c057f052c4a95" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>copyFrom</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a7f97a564c8b4e32c14d7b4ab58255295" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>copyFrom</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1ab92b52fef49a9d7440a98f567c28f168" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>copyInto</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1aff4a416b7db91859de81b24856be632a" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>copyTo</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1acbc53c65c1c27667a659ec84dafbe01a" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>copyTo</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1afd5ca42172cc845309b01069ed3a14c2" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>copyTo</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1af9baf061634fae1bd30d7abd24900263" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>cpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1abc539db90c9ad1195006ab86c772f4a3" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>cpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a15003153752362a8e65e4b52637f44dc" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>cpu_grid</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1aab951804b94d775517a3b614947401b5" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>cpu_grid_t</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1acbdab43875a14ce91fc53eb6e18d4917" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>cpu_ptr</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1aa1322a8e4f3f36cfff77ca7a5ec57d97" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>data</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1aecdaa9892795d526d6d468e21ef3a2b2" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>data</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1af5dc0787a765f8e6ba44aee026795537" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>delete_buffer</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a4a86470b9f8e551e5a060872f9e5680e" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>dimension</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1adc57df2d9d355c2c98206d8ca7ab230d" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>dimensions</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a512219066836349f65f85a0ead19ae8a" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>fill_zero</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1acc87d7aacb8f79831cae339b3039b65d" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>gpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1aa5c4b729fa4facfb55cb19b51f5797cb" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>gpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1acc10ace8d751619d302cbe0da8f37c6a" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>gpu_grid</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a67f5cdb60527c14d22585550dcc3cd20" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>gpu_grid_t</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a640c28374bd5458e6d9d6d219c76520f" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>gpu_info</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a8ead5fb1d995fcaaa3a0be1e0b653b50" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ManagedGrid</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a3b6de4140da5abdd45cc065029a2e386" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ManagedGrid</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a3f1228b111e708b7bbbc452ef95e851f" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ManagedGrid</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a509c5cf770fc539a633de7e4a62fed08" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ManagedGrid&lt; Dtype, 2 &gt;</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1aa352f347af293a5b9f46d7ae7cf3551f" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ManagedGridBase</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1af8fd252961332be4d6b9f71a5e418186" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ManagedGridBase</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a91cffc514989351e3b586aa73754b63e" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ManagedGridBase</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a405571fa8a8314ff906c31579d2f532a" prot="protected" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ManagedGridBase&lt; Dtype, NumDims-1 &gt;</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1ad8331653910a5a034f8238e6a8fbb9b1" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>N</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1ab1990983adc822e595a52ba83d689a9e" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>offset</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1ab18a0f2c17222ceecc823cdb1df6f9e2" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>offsets</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a2b2ad679c12e649d9b5a0fd8f03d3237" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>oncpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a3ffb36b58be9d3c48294d1f4e3366af8" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>ongpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a8c2b884f05b8f337cada06f5f978b588" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator cpu_grid_t</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a535df4d8926149a00163552a34596d69" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator cpu_grid_t &amp;</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a10b2f00260f2d9a097fbd7eda7bc9a4a" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator gpu_grid_t</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1ada677d2971fd6a2aad1277901804cdd2" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator gpu_grid_t &amp;</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1ae358ca901023dc35845975cad12e35de" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator()</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1a702d22411f97ff6b4818fdc4e52028ba" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator()</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1aa5b105cea5249d8b627dc7a9e897f0a1" prot="public" virt="non-virtual" ambiguityscope="ManagedGridBase&lt; Dtype, 1 &gt;::"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator()</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1ac469c7ee3d92be77bc38bddb26b5f695" prot="public" virt="non-virtual" ambiguityscope="ManagedGridBase&lt; Dtype, 1 &gt;::"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator()</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a1a93843cbf5cdc9ed0a1bf5b4d760068" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator==</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1ada569361f39baed5fc44edff9ed2215d" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator[]</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1aa9c9c223b686c7b2f66daafd40e34b60" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>operator[]</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a8576226e00915bc8c923e0b9c77e051e" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>resized</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>size</name></member>
      <member refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4_1aee2fd0a001c66664abf20c3b1bbf9eee" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>subgrid_t</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a3e9eb84f9344f6ca4eac9975f8f61386" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>tocpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a18aaaed8a845f4c8ad9c30d0693e03c1" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>togpu</name></member>
      <member refid="classlibmolgrid_1_1ManagedGridBase_1a2d7497e2eb6dbb6b75ca3a4df279392b" prot="public" virt="non-virtual"><scope>libmolgrid::ManagedGrid&lt; Dtype, 1 &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
