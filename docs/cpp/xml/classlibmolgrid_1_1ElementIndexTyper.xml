<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classlibmolgrid_1_1ElementIndexTyper" kind="class" language="C++" prot="public">
    <compoundname>libmolgrid::ElementIndexTyper</compoundname>
    <basecompoundref refid="classlibmolgrid_1_1AtomIndexTyper" prot="public" virt="non-virtual">AtomIndexTyper</basecompoundref>
    <includes refid="atom__typer_8h" local="no">atom_typer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlibmolgrid_1_1ElementIndexTyper_1a40914b2099207404a2a1e7eda6ce6718" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned last_elem</definition>
        <argsstring></argsstring>
        <name>last_elem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="219" column="14" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ElementIndexTyper_1a7b801ee2a06101cb9459999adc6def0f" prot="private" static="no" mutable="no">
        <type>const float</type>
        <definition>const float default_radius</definition>
        <argsstring></argsstring>
        <name>default_radius</name>
        <initializer>= 1.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="220" column="17" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlibmolgrid_1_1ElementIndexTyper_1ab9328295821875303f26d9c4774a931e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ElementIndexTyper</definition>
        <argsstring>(unsigned maxe=84)</argsstring>
        <name>ElementIndexTyper</name>
        <param>
          <type>unsigned</type>
          <declname>maxe</declname>
          <defval>84</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="222" column="5" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ElementIndexTyper_1ad7d3c7e60575c6faecabaa600735bb75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~ElementIndexTyper</definition>
        <argsstring>()</argsstring>
        <name>~ElementIndexTyper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="223" column="13" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ElementIndexTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned</type>
        <definition>unsigned num_types</definition>
        <argsstring>() const</argsstring>
        <name>num_types</name>
        <reimplements refid="classlibmolgrid_1_1AtomIndexTyper_1ae503ecbf9ca173356ef6e475597e2b46">num_types</reimplements>
        <briefdescription>
<para>return number of types </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="226" column="22" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ElementIndexTyper_1afa822a9ced021828013716b9b2e99670" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; int, float &gt;</type>
        <definition>std::pair&lt; int, float &gt; get_atom_type_index</definition>
        <argsstring>(OpenBabel::OBAtom *a) const</argsstring>
        <name>get_atom_type_index</name>
        <reimplements refid="classlibmolgrid_1_1AtomIndexTyper_1ad802287783424562d69b6ce6a118a7da">get_atom_type_index</reimplements>
        <param>
          <type>OpenBabel::OBAtom *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>return type index of a </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="229" column="23" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ElementIndexTyper_1ad7cd781efd0d97403d12057df9cacbdb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; int, float &gt;</type>
        <definition>std::pair&lt; int, float &gt; get_int_type</definition>
        <argsstring>(int t) const</argsstring>
        <name>get_int_type</name>
        <reimplements refid="classlibmolgrid_1_1AtomIndexTyper_1a6b076295fcb7c38c547345e1992fe342">get_int_type</reimplements>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>look up covalent radius of element or provide default </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="232" column="23" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="217" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ElementIndexTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; get_type_names</definition>
        <argsstring>() const</argsstring>
        <name>get_type_names</name>
        <reimplements refid="classlibmolgrid_1_1AtomIndexTyper_1aedda205572fbbaa3a868181802232263">get_type_names</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return vector of string representations of types this isn&apos;t expected to be particularly efficient </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="235" column="25" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="224" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ElementIndexTyper_1adc0b9aacfdd83b3b868ab09424d3c04b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; get_type_radii</definition>
        <argsstring>() const</argsstring>
        <name>get_type_radii</name>
        <reimplements refid="classlibmolgrid_1_1AtomIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2">get_type_radii</reimplements>
        <briefdescription>
<para>return atomic radius of each type, generic type is given zero radius </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="238" column="25" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="234" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1AtomIndexTyper_1a4f56173834b1bf3f850e5cb9880eaeea" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>float</type>
        <definition>virtual float get_atom_type_vector</definition>
        <argsstring>(OpenBabel::OBAtom *a, std::vector&lt; float &gt; &amp;typ) const final</argsstring>
        <name>get_atom_type_vector</name>
        <reimplements refid="classlibmolgrid_1_1AtomTyper_1a831a48238388829d1fae97d002719674">get_atom_type_vector</reimplements>
        <param>
          <type>OpenBabel::OBAtom *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::vector&lt; float &gt; &amp;</type>
          <declname>typ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="51" column="19" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1AtomIndexTyper_1a38a567b5922504c0767ac0dcdff287f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool is_vector_typer</definition>
        <argsstring>() const</argsstring>
        <name>is_vector_typer</name>
        <reimplements refid="classlibmolgrid_1_1AtomTyper_1a38a567b5922504c0767ac0dcdff287f5">is_vector_typer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="69" column="18" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" bodystart="69" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classlibmolgrid_1_1AtomIndexTyper_1a50bdca9ea03cabe38347121b8ef98cad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_names</definition>
        <argsstring>(unsigned ntypes, std::vector&lt; std::string &gt; &amp;type_names, const std::vector&lt; std::string &gt; &amp;names)</argsstring>
        <name>set_names</name>
        <param>
          <type>unsigned</type>
          <declname>ntypes</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>type_names</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="67" column="17" bodyfile="/home/dkoes/git/libmolgrid/src/atom_typer.cpp" bodystart="246" bodyend="256"/>
        <referencedby refid="classlibmolgrid_1_1CallbackIndexTyper_1afeb018e0ea5231c3b5ac23526abf5361" compoundref="atom__typer_8cpp" startline="257" endline="260">CallbackIndexTyper::CallbackIndexTyper</referencedby>
        <referencedby refid="classlibmolgrid_1_1CallbackVectorTyper_1a50cbe32479180cea5aa8c25adda9ee4a" compoundref="atom__typer_8cpp" startline="410" endline="413">CallbackVectorTyper::CallbackVectorTyper</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Calculate element types. </para>
    </briefdescription>
    <detaileddescription>
<para>There are quite a few elements, so should probably run this through an organic chem atom mapper that reduces to number of types. The type id is the atomic number. Any element with atomic number greater than or equal to the specified max is assigned type zero. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>AtomTyper</label>
        <link refid="classlibmolgrid_1_1AtomTyper"/>
      </node>
      <node id="1">
        <label>ElementIndexTyper</label>
        <link refid="classlibmolgrid_1_1ElementIndexTyper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>AtomIndexTyper</label>
        <link refid="classlibmolgrid_1_1AtomIndexTyper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>AtomTyper</label>
        <link refid="classlibmolgrid_1_1AtomTyper"/>
      </node>
      <node id="1">
        <label>ElementIndexTyper</label>
        <link refid="classlibmolgrid_1_1ElementIndexTyper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>AtomIndexTyper</label>
        <link refid="classlibmolgrid_1_1AtomIndexTyper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" line="218" column="46" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h" bodystart="218" bodyend="239"/>
    <listofallmembers>
      <member refid="classlibmolgrid_1_1AtomIndexTyper_1ae7dde92cf35e2c63afde3176cafcbda3" prot="public" virt="non-virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>AtomIndexTyper</name></member>
      <member refid="classlibmolgrid_1_1AtomTyper_1a554d6f387f3aff6cf68c24ffddd08567" prot="public" virt="non-virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>AtomTyper</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1a7b801ee2a06101cb9459999adc6def0f" prot="private" virt="non-virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>default_radius</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1ab9328295821875303f26d9c4774a931e" prot="public" virt="non-virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>ElementIndexTyper</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1afa822a9ced021828013716b9b2e99670" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>get_atom_type_index</name></member>
      <member refid="classlibmolgrid_1_1AtomIndexTyper_1a4f56173834b1bf3f850e5cb9880eaeea" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>get_atom_type_vector</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1ad7cd781efd0d97403d12057df9cacbdb" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>get_int_type</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>get_type_names</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1adc0b9aacfdd83b3b868ab09424d3c04b" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>get_type_radii</name></member>
      <member refid="classlibmolgrid_1_1AtomIndexTyper_1a38a567b5922504c0767ac0dcdff287f5" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>is_vector_typer</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1a40914b2099207404a2a1e7eda6ce6718" prot="private" virt="non-virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>last_elem</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>num_types</name></member>
      <member refid="classlibmolgrid_1_1AtomIndexTyper_1a50bdca9ea03cabe38347121b8ef98cad" prot="public" virt="non-virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>set_names</name></member>
      <member refid="classlibmolgrid_1_1AtomIndexTyper_1a3a023938558392b20fba9fea9971016a" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>~AtomIndexTyper</name></member>
      <member refid="classlibmolgrid_1_1AtomTyper_1a7fdb3f1fa76c8e3f6fdcddea4f144541" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>~AtomTyper</name></member>
      <member refid="classlibmolgrid_1_1ElementIndexTyper_1ad7d3c7e60575c6faecabaa600735bb75" prot="public" virt="virtual"><scope>libmolgrid::ElementIndexTyper</scope><name>~ElementIndexTyper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
