<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="example__dataset_8cpp" kind="file" language="C++">
    <compoundname>example_dataset.cpp</compoundname>
    <includes refid="example__dataset_8h" local="yes">libmolgrid/example_dataset.h</includes>
    <includes refid="atom__typer_8h" local="yes">libmolgrid/atom_typer.h</includes>
    <incdepgraph>
      <node id="33">
        <label>functional</label>
      </node>
      <node id="28">
        <label>libmolgrid/example_extractor.h</label>
        <link refid="example__extractor_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libmolgrid/example.h</label>
        <link refid="example_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="23">
        <label>cuda_runtime.h</label>
      </node>
      <node id="15">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>libmolgrid/grid.h</label>
        <link refid="grid_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>openbabel/mol.h</label>
      </node>
      <node id="5">
        <label>unordered_set</label>
      </node>
      <node id="24">
        <label>libmolgrid/exampleref_providers.h</label>
        <link refid="exampleref__providers_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libmolgrid/coord_cache.h</label>
        <link refid="coord__cache_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>random</label>
      </node>
      <node id="2">
        <label>libmolgrid/example_dataset.h</label>
        <link refid="example__dataset_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>libmolgrid/atom_typer.h</label>
        <link refid="atom__typer_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>openbabel/atom.h</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="34">
        <label>boost/iostreams/device/mapped_file.hpp</label>
      </node>
      <node id="17">
        <label>libmolgrid/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>openbabel/elements.h</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="27">
        <label>unordered_map</label>
      </node>
      <node id="20">
        <label>cuda.h</label>
      </node>
      <node id="19">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="14">
        <label>boost/preprocessor/repetition.hpp</label>
      </node>
      <node id="8">
        <label>libmolgrid/managed_grid.h</label>
        <link refid="managed__grid_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>type_traits</label>
      </node>
      <node id="13">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="1">
        <label>example_dataset.cpp</label>
        <link refid="example__dataset_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>libmolgrid/libmolgrid.h</label>
        <link refid="libmolgrid_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cstring</label>
      </node>
      <node id="6">
        <label>libmolgrid/coordinateset.h</label>
        <link refid="coordinateset_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacelibmolgrid">libmolgrid</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>example_dataset.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Apr<sp/>12,<sp/>2021</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>dkoes</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="example__dataset_8h" kindref="compound">libmolgrid/example_dataset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="atom__typer_8h" kindref="compound">libmolgrid/atom_typer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibmolgrid" kindref="compound">libmolgrid</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classlibmolgrid_1_1ExampleDataset_1afa04504316547cab15d591ef77d05311" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleDataset_1afa04504316547cab15d591ef77d05311" kindref="member">ExampleDataset::ExampleDataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings)<sp/>:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(settings),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extractor(settings,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_shared<sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref><sp/>&gt;<sp/>(<ref refid="namespacelibmolgrid_1aed6bc2269142acee6e4fdd214209c175" kindref="member">defaultGninaReceptorTyper</ref>),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_shared<sp/>&lt;<sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref><sp/>&gt;<sp/>(<ref refid="namespacelibmolgrid_1a371ec05022b3d175a5b02d540f947ac2" kindref="member">defaultGninaLigandTyper</ref>)),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_settings(settings)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classlibmolgrid_1_1ExampleDataset_1a665d391f6484d8613be1f50fc1a82b0d" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleDataset_1afa04504316547cab15d591ef77d05311" kindref="member">ExampleDataset::ExampleDataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AtomTyper&gt;<sp/>t)<sp/>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(settings),<sp/>extractor(settings,<sp/>t),<sp/>init_settings(settings)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classlibmolgrid_1_1ExampleDataset_1ae54328bb30fea9334dcd6630f5197184" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleDataset_1afa04504316547cab15d591ef77d05311" kindref="member">ExampleDataset::ExampleDataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AtomTyper&gt;<sp/>t1,<sp/>std::shared_ptr&lt;AtomTyper&gt;<sp/>t2)<sp/>:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(settings),<sp/>extractor(settings,<sp/>t1,<sp/>t2),<sp/>init_settings(settings)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classlibmolgrid_1_1ExampleDataset_1adce540f282d1ca6938ffe7c70c53ff4f" refkind="member"><highlight class="normal"><ref refid="classlibmolgrid_1_1ExampleDataset_1afa04504316547cab15d591ef77d05311" kindref="member">ExampleDataset::ExampleDataset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>&amp;<sp/>settings,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;AtomTyper&gt;<sp/>&gt;&amp;<sp/>typrs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>molcaches)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>provider(settings),<sp/>extractor(settings,<sp/>typrs,<sp/>molcaches),<sp/>init_settings(settings)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classlibmolgrid_1_1ExampleDataset_1af034c26f3c6c9d88821e1db792e4e874" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ExampleDataset_1af034c26f3c6c9d88821e1db792e4e874" kindref="member">ExampleDataset::populate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>ifstream<sp/>f(fname.c_str());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fname);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>provider.<ref refid="classlibmolgrid_1_1ExampleRefProvider_1a9c9f40c52d51bd365750f062aff89a95" kindref="member">populate</ref>(f,<sp/><ref refid="classlibmolgrid_1_1ExampleDataset_1ad61784c785dd62f4d4e1d1fec3cf2f6e" kindref="member">num_labels</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>provider.<ref refid="classlibmolgrid_1_1UniformExampleRefProvider_1a4fc01d736fe50cf5b977f755b675f11d" kindref="member">setup</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classlibmolgrid_1_1ExampleDataset_1af9aa38f73a7aa43fa0ba78d05d9c20fe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ExampleDataset_1af034c26f3c6c9d88821e1db792e4e874" kindref="member">ExampleDataset::populate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>fnames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_labels)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>fnames.size();<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>f(fnames[i].c_str());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>fnames[i]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>provider.<ref refid="classlibmolgrid_1_1ExampleRefProvider_1a9c9f40c52d51bd365750f062aff89a95" kindref="member">populate</ref>(f,<sp/><ref refid="classlibmolgrid_1_1ExampleDataset_1ad61784c785dd62f4d4e1d1fec3cf2f6e" kindref="member">num_labels</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>provider.<ref refid="classlibmolgrid_1_1UniformExampleRefProvider_1a4fc01d736fe50cf5b977f755b675f11d" kindref="member">setup</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classlibmolgrid_1_1ExampleDataset_1a3cfefbb6aa29709d7db0bdaebb8c7338" refkind="member"><highlight class="normal"><ref refid="structlibmolgrid_1_1Example" kindref="compound">Example</ref><sp/><ref refid="classlibmolgrid_1_1ExampleDataset_1a3cfefbb6aa29709d7db0bdaebb8c7338" kindref="member">ExampleDataset::operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>thread_local<sp/><ref refid="structlibmolgrid_1_1ExampleRef" kindref="compound">ExampleRef</ref><sp/>ref;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>thread_local<sp/><ref refid="structlibmolgrid_1_1Example" kindref="compound">Example</ref><sp/>ex;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>ref<sp/>=<sp/>provider[idx];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>extractor.<ref refid="classlibmolgrid_1_1ExampleExtractor_1a16688c316082e3c32e65e8c0bb03fe9f" kindref="member">extract</ref>(ref,<sp/>ex);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ex;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>libmolgrid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dkoes/git/libmolgrid/src/example_dataset.cpp"/>
  </compounddef>
</doxygen>
