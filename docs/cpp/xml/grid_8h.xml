<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="grid_8h" kind="file" language="C++">
    <compoundname>grid.h</compoundname>
    <includes local="no">boost/multi_array.hpp</includes>
    <includes local="no">boost/preprocessor/repetition.hpp</includes>
    <includes local="no">boost/lexical_cast.hpp</includes>
    <includes local="no">cassert</includes>
    <includes local="no">iostream</includes>
    <includes refid="common_8h" local="yes">libmolgrid/common.h</includes>
    <includes refid="libmolgrid_8h" local="yes">libmolgrid/libmolgrid.h</includes>
    <includedby refid="cartesian__grid_8h" local="yes">cartesian_grid.h</includedby>
    <includedby refid="grid__interpolater_8h" local="yes">grid_interpolater.h</includedby>
    <includedby refid="grid__maker_8h" local="yes">grid_maker.h</includedby>
    <includedby refid="managed__grid_8h" local="yes">managed_grid.h</includedby>
    <includedby refid="transform_8h" local="yes">transform.h</includedby>
    <includedby refid="libmolgrid_8cpp" local="yes">libmolgrid.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="14">
        <label>cuda_runtime.h</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="1">
        <label>grid.h</label>
        <link refid="grid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>random</label>
      </node>
      <node id="7">
        <label>libmolgrid/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>cuda.h</label>
      </node>
      <node id="10">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="3">
        <label>boost/preprocessor/repetition.hpp</label>
      </node>
      <node id="2">
        <label>boost/multi_array.hpp</label>
      </node>
      <node id="12">
        <label>libmolgrid/libmolgrid.h</label>
        <link refid="libmolgrid_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12">
        <label>example_extractor.h</label>
        <link refid="example__extractor_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>example.h</label>
        <link refid="example_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>grid_interpolater.h</label>
        <link refid="grid__interpolater_8h"/>
      </node>
      <node id="4">
        <label>grid_io.cpp</label>
        <link refid="grid__io_8cpp"/>
      </node>
      <node id="5">
        <label>cartesian_grid.cpp</label>
        <link refid="cartesian__grid_8cpp"/>
      </node>
      <node id="17">
        <label>example_extractor.cpp</label>
        <link refid="example__extractor_8cpp"/>
      </node>
      <node id="1">
        <label>grid.h</label>
        <link refid="grid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>grid_io.h</label>
        <link refid="grid__io_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>grid_maker.cpp</label>
        <link refid="grid__maker_8cpp"/>
      </node>
      <node id="20">
        <label>exampleref_providers.h</label>
        <link refid="exampleref__providers_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cartesian_grid.h</label>
        <link refid="cartesian__grid_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>coord_cache.h</label>
        <link refid="coord__cache_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>example_dataset.h</label>
        <link refid="example__dataset_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>grid_maker.h</label>
        <link refid="grid__maker_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>libmolgrid.cpp</label>
        <link refid="libmolgrid_8cpp"/>
      </node>
      <node id="15">
        <label>example_provider.h</label>
        <link refid="example__provider_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>transform.cpp</label>
        <link refid="transform_8cpp"/>
      </node>
      <node id="21">
        <label>exampleref_providers.cpp</label>
        <link refid="exampleref__providers_8cpp"/>
      </node>
      <node id="22">
        <label>transform.h</label>
        <link refid="transform_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>example_provider.cpp</label>
        <link refid="example__provider_8cpp"/>
      </node>
      <node id="9">
        <label>managed_grid.h</label>
        <link refid="managed__grid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>coord_cache.cpp</label>
        <link refid="coord__cache_8cpp"/>
      </node>
      <node id="26">
        <label>coordinateset.cpp</label>
        <link refid="coordinateset_8cpp"/>
      </node>
      <node id="14">
        <label>example_dataset.cpp</label>
        <link refid="example__dataset_8cpp"/>
      </node>
      <node id="25">
        <label>example.cpp</label>
        <link refid="example_8cpp"/>
      </node>
      <node id="10">
        <label>coordinateset.h</label>
        <link refid="coordinateset_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlibmolgrid_1_1ManagedGrid" prot="public">libmolgrid::ManagedGrid</innerclass>
    <innerclass refid="classlibmolgrid_1_1Grid" prot="public">libmolgrid::Grid</innerclass>
    <innerclass refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4" prot="public">libmolgrid::Grid&lt; Dtype, 1, isCUDA &gt;</innerclass>
    <innernamespace refid="namespacelibmolgrid">libmolgrid</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="grid_8h_1aebe964ed887245ed1b6ae46d72674763" prot="public" static="no">
        <name>EXPAND_GRID_DEFINITIONS</name>
        <param><defname>Z</defname></param>
        <param><defname>SIZE</defname></param>
        <param><defname>_</defname></param>
        <initializer>typedef Grid&lt;float, SIZE, false&gt; Grid##SIZE##f; \
typedef Grid&lt;double, SIZE, false&gt; Grid##SIZE##d; \
typedef Grid&lt;float, SIZE, true&gt; Grid##SIZE##fCUDA; \
typedef Grid&lt;double, SIZE, true&gt; Grid##SIZE##dCUDA;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/grid.h" line="327" column="9" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/grid.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Wrapper classes for holding dense, multi-dimensional arrays of data. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>GRID_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRID_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/multi_array.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lexical_cast.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">libmolgrid/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libmolgrid_8h" kindref="compound">libmolgrid/libmolgrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibmolgrid" kindref="compound">libmolgrid</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classlibmolgrid_1_1ManagedGrid" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dt,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ND&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid</ref>;<sp/></highlight><highlight class="comment">//predeclare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="namespacelibmolgrid_1a55802012418ef1c568cf634c5c0ce543" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cudaMemcpyKind<sp/><ref refid="namespacelibmolgrid_1a55802012418ef1c568cf634c5c0ce543" kindref="member">copyKind</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>srcCUDA,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>destCUDA)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcCUDA)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destCUDA)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cudaMemcpyDeviceToDevice;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cudaMemcpyDeviceToHost;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//source<sp/>host</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destCUDA)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cudaMemcpyHostToDevice;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cudaMemcpyHostToHost;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dtype,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NumDims,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCUDA<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="44" refid="classlibmolgrid_1_1Grid" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//these<sp/>should<sp/>be<sp/>read<sp/>only,<sp/>but<sp/>I<sp/>need<sp/>to<sp/>set<sp/>them<sp/>in<sp/>the<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//outside<sp/>an<sp/>initializer<sp/>list,<sp/>so<sp/>hide<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Dtype<sp/>*<sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>;<sp/></highlight></codeline>
<codeline lineno="49" refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[NumDims];</highlight></codeline>
<codeline lineno="50" refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[NumDims];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I&gt;</highlight></codeline>
<codeline lineno="53" refid="classlibmolgrid_1_1Grid_1a8e80dadd81041247ae111d11763fc2d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a8e80dadd81041247ae111d11763fc2d2" kindref="member">getPos</ref>(I...<sp/>indices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(NumDims<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(indices),</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>number<sp/>of<sp/>grid<sp/>indices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx[NumDims]<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(indices)...};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>unroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumDims;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//surely<sp/>the<sp/>compiler<sp/>will<sp/>unroll<sp/>this...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>idx[i]*<ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[i];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classlibmolgrid_1_1Grid_1a18ec2ecbbcf47264c34b0fd73242b119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a18ec2ecbbcf47264c34b0fd73242b119" kindref="member">check_index</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dim)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__CUDA_ARCH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&gt;=<sp/>dim)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>range.<sp/>&quot;</highlight><highlight class="normal">+<ref refid="namespacelibmolgrid_1abc436df6cd0df6fa9524cd420e13a637" kindref="member">itoa</ref>(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&gt;=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacelibmolgrid_1abc436df6cd0df6fa9524cd420e13a637" kindref="member">itoa</ref>(dim));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(i<sp/>&lt;<sp/>dim);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76" refid="classlibmolgrid_1_1Grid_1a2d7497e2eb6dbb6b75ca3a4df279392b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a2d7497e2eb6dbb6b75ca3a4df279392b" kindref="member">type</ref><sp/>=<sp/>Dtype;</highlight></codeline>
<codeline lineno="77" refid="classlibmolgrid_1_1Grid_1a250e95c1c39a4c3565752164162b33e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">subgrid_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid</ref>&lt;Dtype,NumDims-1,isCUDA&gt;;</highlight></codeline>
<codeline lineno="78" refid="classlibmolgrid_1_1Grid_1a2b3915885e717d2e7f3bc8c5ea5e23d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">managed_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGrid" kindref="compound">ManagedGrid&lt;Dtype,NumDims&gt;</ref>;</highlight></codeline>
<codeline lineno="79" refid="classlibmolgrid_1_1Grid_1af8d64c37f0bb3c754fa6b434ebb9a378" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,NumDims,false&gt;</ref>;</highlight></codeline>
<codeline lineno="80" refid="classlibmolgrid_1_1Grid_1a7cd31597e6ee64880ff31d623ab6b1cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,NumDims,true&gt;</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classlibmolgrid_1_1Grid_1ad8331653910a5a034f8238e6a8fbb9b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1ad8331653910a5a034f8238e6a8fbb9b1" kindref="member">N</ref><sp/>=<sp/>NumDims;</highlight></codeline>
<codeline lineno="83" refid="classlibmolgrid_1_1Grid_1aa01454be2537d7eed47f8c16c82b0a23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aa01454be2537d7eed47f8c16c82b0a23" kindref="member">GPU</ref><sp/>=<sp/>isCUDA;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classlibmolgrid_1_1Grid_1a483b22b3df988a8a315fe4525097cd91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlibmolgrid_1_1Grid_1a483b22b3df988a8a315fe4525097cd91" kindref="member">dimensions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>;<sp/>}</highlight></codeline>
<codeline lineno="88" refid="classlibmolgrid_1_1Grid_1aa9b61e8668a98c2e264339c38e74065b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aa9b61e8668a98c2e264339c38e74065b" kindref="member">dimension</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="classlibmolgrid_1_1Grid_1a18ec2ecbbcf47264c34b0fd73242b119" kindref="member">check_index</ref>(i,NumDims);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classlibmolgrid_1_1Grid_1a99fba573ee49cb59c992f17f4cbc21bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlibmolgrid_1_1Grid_1a99fba573ee49cb59c992f17f4cbc21bb" kindref="member">offsets</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="93" refid="classlibmolgrid_1_1Grid_1a67a4d2469cf97b1e2018d220c5992ca7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a67a4d2469cf97b1e2018d220c5992ca7" kindref="member">offset</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumDims;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>*=<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[i];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/>*<sp/><ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classlibmolgrid_1_1Grid_1a440d5fdb2fea4e01b2d7ca58720e6f9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a440d5fdb2fea4e01b2d7ca58720e6f9a" kindref="member">set_buffer</ref>(Dtype<sp/>*ptr)<sp/>{<sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref><sp/>=<sp/>ptr;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classlibmolgrid_1_1Grid_1a0a335d0339fe70071fcdf4cd5b1c7b5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a0a335d0339fe70071fcdf4cd5b1c7b5f" kindref="member">Grid</ref>():<sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>(nullptr),<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>{0},<sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>{0}<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I&gt;</highlight></codeline>
<codeline lineno="120" refid="classlibmolgrid_1_1Grid_1ac6ad9f59dfa866852e61b9cc945b565e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1ac6ad9f59dfa866852e61b9cc945b565e" kindref="member">Grid</ref>(Dtype<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d,<sp/>I...<sp/>sizes):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>(d),<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>{<sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sizes)...}<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(NumDims<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(sizes),</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>number<sp/>of<sp/>grid<sp/>dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[NumDims-1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>unroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>NumDims-1;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[i-1]<sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[i]*<ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[i];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classlibmolgrid_1_1Grid_1ad43904e4e167c271e4c9ea21136a3f19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1ad43904e4e167c271e4c9ea21136a3f19" kindref="member">Grid</ref>(Dtype<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*sizes):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>(d)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[NumDims-1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>unroll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>NumDims-1;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[i]<sp/>=<sp/>sizes[i];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[i-1]<sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[i]*<ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[i];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[0]<sp/>=<sp/>sizes[0];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a0a335d0339fe70071fcdf4cd5b1c7b5f" kindref="member">Grid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a87382f290ed3feb1f2aecdc76e08f555" kindref="member">~Grid</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classlibmolgrid_1_1Grid_1a8e2e9f0033132d21a5dc0d81f29f4da4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">subgrid_t</ref><sp/><ref refid="classlibmolgrid_1_1Grid_1a8e2e9f0033132d21a5dc0d81f29f4da4" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a18ec2ecbbcf47264c34b0fd73242b119" kindref="member">check_index</ref>(i,<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[0]);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid</ref>&lt;Dtype,NumDims-1,isCUDA&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I&gt;</highlight></codeline>
<codeline lineno="163" refid="classlibmolgrid_1_1Grid_1af4c80e9d4bd3250caf327413bb7e71a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype&amp;<sp/><ref refid="classlibmolgrid_1_1Grid_1af4c80e9d4bd3250caf327413bb7e71a7" kindref="member">operator()</ref>(I...<sp/>indices)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>[<ref refid="classlibmolgrid_1_1Grid_1a8e80dadd81041247ae111d11763fc2d2" kindref="member">getPos</ref>(indices...)];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I&gt;</highlight></codeline>
<codeline lineno="168" refid="classlibmolgrid_1_1Grid_1a4c0715b6c8593be928ec306c5f943a57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/><ref refid="classlibmolgrid_1_1Grid_1a4c0715b6c8593be928ec306c5f943a57" kindref="member">operator()</ref>(I...<sp/>indices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>[<ref refid="classlibmolgrid_1_1Grid_1a8e80dadd81041247ae111d11763fc2d2" kindref="member">getPos</ref>(indices...)];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I&gt;</highlight></codeline>
<codeline lineno="174" refid="classlibmolgrid_1_1Grid_1a0dff89786df422b662a2be75e7517a1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype*<sp/><ref refid="classlibmolgrid_1_1Grid_1a0dff89786df422b662a2be75e7517a1e" kindref="member">address</ref>(I...<sp/>indices)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>[<ref refid="classlibmolgrid_1_1Grid_1a8e80dadd81041247ae111d11763fc2d2" kindref="member">getPos</ref>(indices...)];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>I&gt;</highlight></codeline>
<codeline lineno="179" refid="classlibmolgrid_1_1Grid_1ad16f3140a0985865efe01db743da33c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dtype*<sp/><ref refid="classlibmolgrid_1_1Grid_1ad16f3140a0985865efe01db743da33c2" kindref="member">address</ref>(I...<sp/>indices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>[<ref refid="classlibmolgrid_1_1Grid_1a8e80dadd81041247ae111d11763fc2d2" kindref="member">getPos</ref>(indices...)];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>destCUDA&gt;</highlight></codeline>
<codeline lineno="188" refid="classlibmolgrid_1_1Grid_1ac2f29eb66b0b3b19ab09ecd80e3fbb35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1ac2f29eb66b0b3b19ab09ecd80e3fbb35" kindref="member">copyTo</ref>(<ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,NumDims,destCUDA&gt;</ref>&amp;<sp/>dest)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::min(<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>(),<sp/>dest.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cudaMemcpyKind<sp/>kind<sp/>=<sp/><ref refid="namespacelibmolgrid_1a55802012418ef1c568cf634c5c0ce543" kindref="member">copyKind</ref>(isCUDA,destCUDA);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(dest.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),kind));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>srcCUDA&gt;</highlight></codeline>
<codeline lineno="201" refid="classlibmolgrid_1_1Grid_1ac5cd5f1c4591aa5a8d21e5babb971e99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1ac5cd5f1c4591aa5a8d21e5babb971e99" kindref="member">copyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,NumDims,srcCUDA&gt;</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::min(<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>(),<sp/>src.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cudaMemcpyKind<sp/>kind<sp/>=<sp/><ref refid="namespacelibmolgrid_1a55802012418ef1c568cf634c5c0ce543" kindref="member">copyKind</ref>(srcCUDA,isCUDA);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),src.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),kind));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classlibmolgrid_1_1Grid_1a512219066836349f65f85a0ead19ae8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a512219066836349f65f85a0ead19ae8a" kindref="member">fill_zero</ref>()<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isCUDA)<sp/>cudaMemset(<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype)*<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>memset(<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype)*<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>used<sp/>by<sp/>operator[],<sp/>create<sp/>a<sp/>subgrid,<sp/>assuming<sp/>memory<sp/>is<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref></highlight></codeline>
<codeline lineno="219" refid="classlibmolgrid_1_1Grid_1a213a3ffc821285325de3b96cee1d025a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a213a3ffc821285325de3b96cee1d025a" kindref="member">Grid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,NumDims+1,isCUDA&gt;</ref>&amp;<sp/>G,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i):<sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>(G.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()<sp/>?<sp/>&amp;G.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()[i*G.<ref refid="classlibmolgrid_1_1Grid_1a67a4d2469cf97b1e2018d220c5992ca7" kindref="member">offset</ref>(0)]<sp/>:<sp/>nullptr)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//slice<sp/>off<sp/>first<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumDims;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[i]<sp/>=<sp/>G.<ref refid="classlibmolgrid_1_1Grid_1aa9b61e8668a98c2e264339c38e74065b" kindref="member">dimension</ref>(i+1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a8cc20beaeb20694fea94498420db09c0" kindref="member">offs</ref>[i]<sp/>=<sp/>G.<ref refid="classlibmolgrid_1_1Grid_1a67a4d2469cf97b1e2018d220c5992ca7" kindref="member">offset</ref>(i+1);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>specialization<sp/>of<sp/>grid<sp/>to<sp/>make<sp/>final<sp/>operator[]<sp/>return<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>if<sp/>we<sp/>start<sp/>adding<sp/>more<sp/>functionality<sp/>to<sp/>Grid,<sp/>we<sp/>will<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>refactor<sp/>this<sp/>into<sp/>a<sp/>separate<sp/>GridAccessor<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dtype,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCUDA<sp/>&gt;</highlight></codeline>
<codeline lineno="233" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid</ref>&lt;Dtype,1,isCUDA&gt;<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a268477dcc97a377d747ac8d87c9e4832" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Dtype<sp/>*<sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="236" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a7af99c1e30f9f637316dab96f03c4b3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[1];<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a18ec2ecbbcf47264c34b0fd73242b119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a18ec2ecbbcf47264c34b0fd73242b119" kindref="member">check_index</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dim)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__CUDA_ARCH__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&gt;=<sp/>dim)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>range.<sp/>&quot;</highlight><highlight class="normal">+<sp/><ref refid="namespacelibmolgrid_1abc436df6cd0df6fa9524cd420e13a637" kindref="member">itoa</ref>(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&gt;=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacelibmolgrid_1abc436df6cd0df6fa9524cd420e13a637" kindref="member">itoa</ref>(dim));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(i<sp/>&lt;<sp/>dim);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a2d7497e2eb6dbb6b75ca3a4df279392b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a2d7497e2eb6dbb6b75ca3a4df279392b" kindref="member">type</ref><sp/>=<sp/>Dtype;</highlight></codeline>
<codeline lineno="249" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aee2fd0a001c66664abf20c3b1bbf9eee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aee2fd0a001c66664abf20c3b1bbf9eee" kindref="member">subgrid_t</ref><sp/>=<sp/>Dtype;</highlight></codeline>
<codeline lineno="250" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1adc980d1b902f6a14af98e1ec10e2c96c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" kindref="compound">managed_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1ManagedGrid_3_01Dtype_00_011_01_4" kindref="compound">ManagedGrid&lt;Dtype,1&gt;</ref>;</highlight></codeline>
<codeline lineno="251" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a32ca1fb679900a650a8f7ab6a128117a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">cpu_grid_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,1,false&gt;</ref>;</highlight></codeline>
<codeline lineno="252" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a2177fcb80495c85151de7dad3d566744" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">gpu_grid_t</ref><sp/>=<sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,1,true&gt;</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1ad8331653910a5a034f8238e6a8fbb9b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1ad8331653910a5a034f8238e6a8fbb9b1" kindref="member">N</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="255" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aa01454be2537d7eed47f8c16c82b0a23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aa01454be2537d7eed47f8c16c82b0a23" kindref="member">GPU</ref><sp/>=<sp/>isCUDA;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a483b22b3df988a8a315fe4525097cd91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a483b22b3df988a8a315fe4525097cd91" kindref="member">dimensions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>;<sp/>}</highlight></codeline>
<codeline lineno="260" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aa9b61e8668a98c2e264339c38e74065b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aa9b61e8668a98c2e264339c38e74065b" kindref="member">dimension</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="classlibmolgrid_1_1Grid_1a18ec2ecbbcf47264c34b0fd73242b119" kindref="member">check_index</ref>(i,<sp/>1);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1acb2f16129f492fbb0aa93ae8b78402ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[0];<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aaa5a68e1e5befda24cb7b3e422ba9cc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/>*<sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a67a4d2469cf97b1e2018d220c5992ca7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a67a4d2469cf97b1e2018d220c5992ca7" kindref="member">offset</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a440d5fdb2fea4e01b2d7ca58720e6f9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a440d5fdb2fea4e01b2d7ca58720e6f9a" kindref="member">set_buffer</ref>(Dtype<sp/>*ptr)<sp/>{<sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref><sp/>=<sp/>ptr;<sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a0a335d0339fe70071fcdf4cd5b1c7b5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a0a335d0339fe70071fcdf4cd5b1c7b5f" kindref="member">Grid</ref>():<sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>(nullptr),<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>{0}<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aef69ac40c00f38f7d637f1af03f8d63a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1aef69ac40c00f38f7d637f1af03f8d63a" kindref="member">Grid</ref>(Dtype*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz):</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>(d),<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>{sz}<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a267a07557e1dd6b7a0ed10e276afd2f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype&amp;<sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a267a07557e1dd6b7a0ed10e276afd2f0" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a18ec2ecbbcf47264c34b0fd73242b119" kindref="member">check_index</ref>(i,<ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[0]);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>[i];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a4fd87ea12567337969e0d30b1c4a51ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a4fd87ea12567337969e0d30b1c4a51ad" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a18ec2ecbbcf47264c34b0fd73242b119" kindref="member">check_index</ref>(i,<ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>[0]);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>[i];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a8ad9fc847771943373c0ece05f3761a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype&amp;<sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a8ad9fc847771943373c0ece05f3761a6" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>[a];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a7b8e84d93f65b9c3714f0acd8c7cd5c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Dtype<sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a7b8e84d93f65b9c3714f0acd8c7cd5c5" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>[a];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a512219066836349f65f85a0ead19ae8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a512219066836349f65f85a0ead19ae8a" kindref="member">fill_zero</ref>()<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isCUDA)<sp/>cudaMemset(<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype)*<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>memset(<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype)*<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>called<sp/>from<sp/>regular<sp/>Grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1abaa3393ea5f1f52b7fdfde2beec133b7" kindref="member">CUDA_CALLABLE_MEMBER</ref></highlight></codeline>
<codeline lineno="303" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a133c18fbd775019548ec10f171ec157a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4" kindref="compound">Grid&lt;Dtype,1,isCUDA&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,2,isCUDA&gt;</ref>&amp;<sp/>G,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i):</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1Grid_1a268477dcc97a377d747ac8d87c9e4832" kindref="member">buffer</ref>(&amp;G.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>()[i*G.<ref refid="classlibmolgrid_1_1Grid_1a67a4d2469cf97b1e2018d220c5992ca7" kindref="member">offset</ref>(0)]),<sp/><ref refid="classlibmolgrid_1_1Grid_1aba11d68699b34a67478459c6d4a01753" kindref="member">dims</ref>{G.<ref refid="classlibmolgrid_1_1Grid_1aa9b61e8668a98c2e264339c38e74065b" kindref="member">dimension</ref>(1)}<sp/>{}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>destCUDA&gt;</highlight></codeline>
<codeline lineno="308" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a3e983133f9cb7d0571557580480ece9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1a3e983133f9cb7d0571557580480ece9b" kindref="member">copyTo</ref>(<ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,1,destCUDA&gt;</ref>&amp;<sp/>dest)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::min(<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>(),<sp/>dest.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cudaMemcpyKind<sp/>kind<sp/>=<sp/><ref refid="namespacelibmolgrid_1a55802012418ef1c568cf634c5c0ce543" kindref="member">copyKind</ref>(isCUDA,destCUDA);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(dest.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),kind));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>srcCUDA&gt;</highlight></codeline>
<codeline lineno="317" refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1ad3152bc9dfc67f11fa55467ac93460f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid_3_01Dtype_00_011_00_01isCUDA_01_4_1ad3152bc9dfc67f11fa55467ac93460f8" kindref="member">copyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1Grid" kindref="compound">Grid&lt;Dtype,1,srcCUDA&gt;</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::min(<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>(),<sp/>src.<ref refid="classlibmolgrid_1_1Grid_1acb2f16129f492fbb0aa93ae8b78402ec" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cudaMemcpyKind<sp/>kind<sp/>=<sp/><ref refid="namespacelibmolgrid_1a55802012418ef1c568cf634c5c0ce543" kindref="member">copyKind</ref>(srcCUDA,isCUDA);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1aa79d03c876b7392cd06c1f77d5286b59" kindref="member">LMG_CUDA_CHECK</ref>(cudaMemcpy(<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),src.<ref refid="classlibmolgrid_1_1Grid_1aaa5a68e1e5befda24cb7b3e422ba9cc5" kindref="member">data</ref>(),sz*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Dtype),kind));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sz;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">};</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="grid_8h_1aebe964ed887245ed1b6ae46d72674763" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPAND_GRID_DEFINITIONS(Z,SIZE,_)<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor">typedef<sp/>Grid&lt;float,<sp/>SIZE,<sp/>false&gt;<sp/>Grid##SIZE##f;<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor">typedef<sp/>Grid&lt;double,<sp/>SIZE,<sp/>false&gt;<sp/>Grid##SIZE##d;<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor">typedef<sp/>Grid&lt;float,<sp/>SIZE,<sp/>true&gt;<sp/>Grid##SIZE##fCUDA;<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor">typedef<sp/>Grid&lt;double,<sp/>SIZE,<sp/>true&gt;<sp/>Grid##SIZE##dCUDA;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><ref refid="namespacelibmolgrid_1abaefa4db48d107196d082640795579b1" kindref="member">BOOST_PP_REPEAT_FROM_TO</ref>(1,<ref refid="libmolgrid_8h_1aecdd40dd95edce99f66998b301481d75" kindref="member">LIBMOLGRID_MAX_GRID_DIM</ref>,<sp/><ref refid="grid_8h_1aebe964ed887245ed1b6ae46d72674763" kindref="member">EXPAND_GRID_DEFINITIONS</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>GRID_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/grid.h"/>
  </compounddef>
</doxygen>
