<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classlibmolgrid_1_1ExampleProvider" kind="class" language="C++" prot="public">
    <compoundname>libmolgrid::ExampleProvider</compoundname>
    <includes refid="example__provider_8h" local="no">example_provider.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlibmolgrid_1_1ExampleProvider_1a1ec12f6bc38d48f2ebd31cd136d7ce07" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classlibmolgrid_1_1ExampleRefProvider" kindref="compound">ExampleRefProvider</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ExampleRefProvider&gt; provider</definition>
        <argsstring></argsstring>
        <name>provider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="26" column="21" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ExampleProvider_1a2fb8829b2e7a2a7ddd15f77963afe1af" prot="private" static="no" mutable="no">
        <type><ref refid="classlibmolgrid_1_1ExampleExtractor" kindref="compound">ExampleExtractor</ref></type>
        <definition>ExampleExtractor extractor</definition>
        <argsstring></argsstring>
        <name>extractor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="27" column="22" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ExampleProvider_1a3720a86fa37818f1974f5b1854beef4f" prot="private" static="no" mutable="no">
        <type><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref></type>
        <definition>ExampleProviderSettings init_settings</definition>
        <argsstring></argsstring>
        <name>init_settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="28" column="29" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlibmolgrid_1_1ExampleProvider_1a5a204a763731fc6af022857da52a4d64" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t last_epoch</definition>
        <argsstring></argsstring>
        <name>last_epoch</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="29" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1af53336000ea2b0e977ac8b9378ad544f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classlibmolgrid_1_1ExampleRefProvider" kindref="compound">ExampleRefProvider</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ExampleRefProvider &gt; createProvider</definition>
        <argsstring>(const ExampleProviderSettings &amp;settings)</argsstring>
        <name>createProvider</name>
        <param>
          <type>const <ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>return provider as specifyed by settings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="34" column="28" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="100" bodyend="212"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1aa094561f95e431c276b49586faee2cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExampleProvider</definition>
        <argsstring>(const ExampleProviderSettings &amp;settings=ExampleProviderSettings())</argsstring>
        <name>ExampleProvider</name>
        <param>
          <type>const <ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref> &amp;</type>
          <declname>settings</declname>
          <defval><ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref>()</defval>
        </param>
        <briefdescription>
<para>Create provider using default gnina typing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="37" column="5" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="15" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a8a2bae611b9df84ef7d3a65cb0406250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExampleProvider</definition>
        <argsstring>(const ExampleProviderSettings &amp;settings, std::shared_ptr&lt; AtomTyper &gt; t)</argsstring>
        <name>ExampleProvider</name>
        <param>
          <type>const <ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classlibmolgrid_1_1AtomTyper" kindref="compound">AtomTyper</ref> &gt;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Create provider/extractor according to settings with single typer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="40" column="5" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1acaf924a94e0b8d14689fb68bbd01e0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExampleProvider</definition>
        <argsstring>(const ExampleProviderSettings &amp;settings, std::shared_ptr&lt; AtomTyper &gt; t1, std::shared_ptr&lt; AtomTyper &gt; t2)</argsstring>
        <name>ExampleProvider</name>
        <param>
          <type>const <ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classlibmolgrid_1_1AtomTyper" kindref="compound">AtomTyper</ref> &gt;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classlibmolgrid_1_1AtomTyper" kindref="compound">AtomTyper</ref> &gt;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>Create provider/extractor according to settings with two typers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="43" column="5" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1ac557999e073c14e5001137006e1affeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExampleProvider</definition>
        <argsstring>(const ExampleProviderSettings &amp;settings, const std::vector&lt; std::shared_ptr&lt; AtomTyper &gt; &gt; &amp;typrs, const std::vector&lt; std::string &gt; &amp;molcaches=std::vector&lt; std::string &gt;())</argsstring>
        <name>ExampleProvider</name>
        <param>
          <type>const <ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classlibmolgrid_1_1AtomTyper" kindref="compound">AtomTyper</ref> &gt; &gt; &amp;</type>
          <declname>typrs</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>molcaches</declname>
          <defval>std::vector&lt; std::string &gt;()</defval>
        </param>
        <briefdescription>
<para>Create provider/extractor according to settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="46" column="5" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="37" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a3066f4feae60e7344e861b8560c13c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExampleProvider</definition>
        <argsstring>(std::shared_ptr&lt; ExampleRefProvider &gt; p, const ExampleExtractor &amp;e)</argsstring>
        <name>ExampleProvider</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classlibmolgrid_1_1ExampleRefProvider" kindref="compound">ExampleRefProvider</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classlibmolgrid_1_1ExampleExtractor" kindref="compound">ExampleExtractor</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>use provided provider </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="50" column="5" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1aab34bd38942e6e3e441152bc84bd1637" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~ExampleProvider</definition>
        <argsstring>()</argsstring>
        <name>~ExampleProvider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="51" column="13" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1af034c26f3c6c9d88821e1db792e4e874" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void populate</definition>
        <argsstring>(const std::string &amp;fname, int num_labels=-1)</argsstring>
        <name>populate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_labels</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>load example file file fname and setup provider </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="54" column="18" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1af9aa38f73a7aa43fa0ba78d05d9c20fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void populate</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;fnames, int num_labels=-1)</argsstring>
        <name>populate</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>fnames</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_labels</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>load multiple example files </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="56" column="18" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1ad61784c785dd62f4d4e1d1fec3cf2f6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t num_labels</definition>
        <argsstring>() const</argsstring>
        <name>num_labels</name>
        <briefdescription>
<para>return number of labels for each example (computed from first example only) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="59" column="20" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="59" bodyend="59"/>
        <referencedby refid="classlibmolgrid_1_1ExampleProvider_1af034c26f3c6c9d88821e1db792e4e874" compoundref="example__provider_8cpp" startline="52" endline="57">ExampleProvider::populate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1ad04cc9d97399f697fbc874ecfd8109b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void next</definition>
        <argsstring>(Example &amp;ex)</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="structlibmolgrid_1_1Example" kindref="compound">Example</ref> &amp;</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
<para>provide next example </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="62" column="18" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a6e452f30328eb48d0549e8e107a1327e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structlibmolgrid_1_1Example" kindref="compound">Example</ref></type>
        <definition>virtual Example next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="63" column="21" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="63" bodyend="63"/>
        <referencedby refid="classlibmolgrid_1_1ExampleProvider_1a6e452f30328eb48d0549e8e107a1327e" compoundref="example__provider_8h" startline="63" endline="63">ExampleProvider::next</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a5edd8a3461f4aa311675b712ae2e1d20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t get_small_epoch_num</definition>
        <argsstring>() const</argsstring>
        <name>get_small_epoch_num</name>
        <briefdescription>
<para>Return current small epoch number A small epoch occurs once every training example has been seen at MOST once. For example, when providing a balanced view of unbalanced data, a small epoch will complete once the less common class has been iterated over. Note this is the epoch of the next example to be provided, not the previous. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="72" column="20" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1ac881e6a758225142e37f3811184b156c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t get_large_epoch_num</definition>
        <argsstring>() const</argsstring>
        <name>get_large_epoch_num</name>
        <briefdescription>
<para>Return current large epoch number A large epoch occurs once every training example has been seen at LEAST once. For example, when providing a balanced view of unbalanced data, a large epoch will complete once the more common class has been iterated over. Note this is the epoch of the next example to be provided, not the previous. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="81" column="20" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a9c66646cb491b4c4620dcfe627f5451d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t small_epoch_size</definition>
        <argsstring>() const</argsstring>
        <name>small_epoch_size</name>
        <briefdescription>
<para>Return number of example in small epoch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="84" column="20" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1ac2a4bfd5fd0579c2377a181a7bae1395" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t large_epoch_size</definition>
        <argsstring>() const</argsstring>
        <name>large_epoch_size</name>
        <briefdescription>
<para>Return number of example in large epoch. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="87" column="20" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a7b0e029102ad38f4b814c6523aedb53d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset to beginning. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="90" column="18" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a77aacd8e83562f61b7b39ba3444c1d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void skip</definition>
        <argsstring>(unsigned n)</argsstring>
        <name>skip</name>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>skip over the first n examples </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="93" column="18" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structlibmolgrid_1_1ExampleProviderSettings" kindref="compound">ExampleProviderSettings</ref> &amp;</type>
        <definition>const ExampleProviderSettings&amp; settings</definition>
        <argsstring>() const</argsstring>
        <name>settings</name>
        <briefdescription>
<para>return settings created with </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="96" column="35" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="96" bodyend="96"/>
        <referencedby refid="classlibmolgrid_1_1ExampleProvider_1af53336000ea2b0e977ac8b9378ad544f" compoundref="example__provider_8cpp" startline="100" endline="212">ExampleProvider::createProvider</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1adb4bb0435e9db0c63c1c7938385939a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void next_batch</definition>
        <argsstring>(std::vector&lt; Example &gt; &amp;ex, unsigned batch_size=0)</argsstring>
        <name>next_batch</name>
        <param>
          <type>std::vector&lt; <ref refid="structlibmolgrid_1_1Example" kindref="compound">Example</ref> &gt; &amp;</type>
          <declname>ex</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>batch_size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>provide a batch of examples </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="99" column="18" bodyfile="/home/dkoes/git/libmolgrid/src/example_provider.cpp" bodystart="77" bodyend="90"/>
        <referencedby refid="classlibmolgrid_1_1ExampleProvider_1ab2babf03d01c24c15a476d1e200a2de4" compoundref="example__provider_8h" startline="102" endline="106">ExampleProvider::next_batch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1ab2babf03d01c24c15a476d1e200a2de4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="structlibmolgrid_1_1Example" kindref="compound">Example</ref> &gt;</type>
        <definition>virtual std::vector&lt;Example&gt; next_batch</definition>
        <argsstring>(unsigned batch_size=0)</argsstring>
        <name>next_batch</name>
        <param>
          <type>unsigned</type>
          <declname>batch_size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>provide a batch of examples, unspecified or 0 batch_size uses default batch size </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="102" column="25" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1aa8f9b78a17a8e8cd4662da2901fc77af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at_new_epoch</definition>
        <argsstring>()</argsstring>
        <name>at_new_epoch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return true if we have crossed into a new epoch (or are about to) Note that once this returns true once, it won&apos;t again until the next epoch has been consumed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="111" column="10" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="111" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a23ca85aec357cd4b99a3ed80b70ffed7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlibmolgrid_1_1ExampleExtractor" kindref="compound">ExampleExtractor</ref> &amp;</type>
        <definition>ExampleExtractor&amp; get_extractor</definition>
        <argsstring>()</argsstring>
        <name>get_extractor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="128" column="22" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a0f174b60e8abb4557df194fd0ece1610" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlibmolgrid_1_1ExampleRefProvider" kindref="compound">ExampleRefProvider</ref> &amp;</type>
        <definition>ExampleRefProvider&amp; get_provider</definition>
        <argsstring>()</argsstring>
        <name>get_provider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="129" column="24" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a59b7170f88e4d8d17e9f4eb5e3d62712" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t num_types</definition>
        <argsstring>() const</argsstring>
        <name>num_types</name>
        <briefdescription>
<para>number of types </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="132" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a2babcd45f89ff67b4b4887f7ba469ae6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; get_type_names</definition>
        <argsstring>() const</argsstring>
        <name>get_type_names</name>
        <briefdescription>
<para>names of types (requires explicit typing) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="134" column="17" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classlibmolgrid_1_1ExampleProvider_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>return number of examples </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="136" column="12" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="136" bodyend="136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Given a file of examples, provide <ref refid="structlibmolgrid_1_1Example" kindref="compound">Example</ref> classes one at a time This contains an <ref refid="classlibmolgrid_1_1ExampleRefProvider" kindref="compound">ExampleRefProvider</ref>, which can be configured using a single settings object if so desired, and an example extractor. Note that cache_structs is true by default which will load the entirety of the dataset into memory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" line="25" column="22" bodyfile="/home/dkoes/git/libmolgrid/include/libmolgrid/example_provider.h" bodystart="25" bodyend="137"/>
    <listofallmembers>
      <member refid="classlibmolgrid_1_1ExampleProvider_1aa8f9b78a17a8e8cd4662da2901fc77af" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>at_new_epoch</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1af53336000ea2b0e977ac8b9378ad544f" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>createProvider</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1aa094561f95e431c276b49586faee2cc5" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>ExampleProvider</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a8a2bae611b9df84ef7d3a65cb0406250" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>ExampleProvider</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1acaf924a94e0b8d14689fb68bbd01e0f7" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>ExampleProvider</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1ac557999e073c14e5001137006e1affeb" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>ExampleProvider</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a3066f4feae60e7344e861b8560c13c2e" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>ExampleProvider</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a2fb8829b2e7a2a7ddd15f77963afe1af" prot="private" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>extractor</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a23ca85aec357cd4b99a3ed80b70ffed7" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>get_extractor</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1ac881e6a758225142e37f3811184b156c" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>get_large_epoch_num</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a0f174b60e8abb4557df194fd0ece1610" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>get_provider</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a5edd8a3461f4aa311675b712ae2e1d20" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>get_small_epoch_num</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a2babcd45f89ff67b4b4887f7ba469ae6" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>get_type_names</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a3720a86fa37818f1974f5b1854beef4f" prot="private" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>init_settings</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1ac2a4bfd5fd0579c2377a181a7bae1395" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>large_epoch_size</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a5a204a763731fc6af022857da52a4d64" prot="private" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>last_epoch</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1ad04cc9d97399f697fbc874ecfd8109b9" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>next</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a6e452f30328eb48d0549e8e107a1327e" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>next</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1adb4bb0435e9db0c63c1c7938385939a0" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>next_batch</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1ab2babf03d01c24c15a476d1e200a2de4" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>next_batch</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1ad61784c785dd62f4d4e1d1fec3cf2f6e" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>num_labels</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a59b7170f88e4d8d17e9f4eb5e3d62712" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>num_types</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1af034c26f3c6c9d88821e1db792e4e874" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>populate</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1af9aa38f73a7aa43fa0ba78d05d9c20fe" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>populate</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a1ec12f6bc38d48f2ebd31cd136d7ce07" prot="private" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>provider</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a7b0e029102ad38f4b814c6523aedb53d" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>reset</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a82e186f5abfa7cb53a59487bda88a785" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>settings</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" virt="non-virtual"><scope>libmolgrid::ExampleProvider</scope><name>size</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a77aacd8e83562f61b7b39ba3444c1d25" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>skip</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1a9c66646cb491b4c4620dcfe627f5451d" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>small_epoch_size</name></member>
      <member refid="classlibmolgrid_1_1ExampleProvider_1aab34bd38942e6e3e441152bc84bd1637" prot="public" virt="virtual"><scope>libmolgrid::ExampleProvider</scope><name>~ExampleProvider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
