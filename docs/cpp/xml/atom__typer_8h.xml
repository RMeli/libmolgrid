<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="atom__typer_8h" kind="file" language="C++">
    <compoundname>atom_typer.h</compoundname>
    <includes local="no">openbabel/atom.h</includes>
    <includes local="no">openbabel/elements.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <includes local="no">iostream</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">functional</includes>
    <includedby refid="coord__cache_8h" local="yes">coord_cache.h</includedby>
    <includedby refid="atom__typer_8cpp" local="yes">atom_typer.cpp</includedby>
    <includedby refid="coordinateset_8cpp" local="yes">coordinateset.cpp</includedby>
    <includedby refid="example__dataset_8cpp" local="yes">example_dataset.cpp</includedby>
    <includedby refid="example__extractor_8cpp" local="yes">example_extractor.cpp</includedby>
    <includedby refid="example__provider_8cpp" local="yes">example_provider.cpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>functional</label>
      </node>
      <node id="1">
        <label>atom_typer.h</label>
        <link refid="atom__typer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>openbabel/atom.h</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="3">
        <label>openbabel/elements.h</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>example_extractor.h</label>
        <link refid="example__extractor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>example_extractor.cpp</label>
        <link refid="example__extractor_8cpp"/>
      </node>
      <node id="2">
        <label>coord_cache.h</label>
        <link refid="coord__cache_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>example_dataset.h</label>
        <link refid="example__dataset_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>atom_typer.h</label>
        <link refid="atom__typer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>example_provider.h</label>
        <link refid="example__provider_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>atom_typer.cpp</label>
        <link refid="atom__typer_8cpp"/>
      </node>
      <node id="7">
        <label>example_provider.cpp</label>
        <link refid="example__provider_8cpp"/>
      </node>
      <node id="9">
        <label>coord_cache.cpp</label>
        <link refid="coord__cache_8cpp"/>
      </node>
      <node id="11">
        <label>coordinateset.cpp</label>
        <link refid="coordinateset_8cpp"/>
      </node>
      <node id="5">
        <label>example_dataset.cpp</label>
        <link refid="example__dataset_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlibmolgrid_1_1AtomTyper" prot="public">libmolgrid::AtomTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1AtomIndexTyper" prot="public">libmolgrid::AtomIndexTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1AtomVectorTyper" prot="public">libmolgrid::AtomVectorTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1AtomIndexTypeMapper" prot="public">libmolgrid::AtomIndexTypeMapper</innerclass>
    <innerclass refid="classlibmolgrid_1_1GninaIndexTyper" prot="public">libmolgrid::GninaIndexTyper</innerclass>
    <innerclass refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" prot="public">libmolgrid::GninaIndexTyper::info</innerclass>
    <innerclass refid="classlibmolgrid_1_1ElementIndexTyper" prot="public">libmolgrid::ElementIndexTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1NullIndexTyper" prot="public">libmolgrid::NullIndexTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1CallbackIndexTyper" prot="public">libmolgrid::CallbackIndexTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1MappedAtomIndexTyper" prot="public">libmolgrid::MappedAtomIndexTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1GninaVectorTyper" prot="public">libmolgrid::GninaVectorTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1CallbackVectorTyper" prot="public">libmolgrid::CallbackVectorTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1FileAtomMapper" prot="public">libmolgrid::FileAtomMapper</innerclass>
    <innerclass refid="classlibmolgrid_1_1SubsetAtomMapper" prot="public">libmolgrid::SubsetAtomMapper</innerclass>
    <innerclass refid="classlibmolgrid_1_1SubsettedElementTyper" prot="public">libmolgrid::SubsettedElementTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1SubsettedGninaTyper" prot="public">libmolgrid::SubsettedGninaTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1FileMappedElementTyper" prot="public">libmolgrid::FileMappedElementTyper</innerclass>
    <innerclass refid="classlibmolgrid_1_1FileMappedGninaTyper" prot="public">libmolgrid::FileMappedGninaTyper</innerclass>
    <innernamespace refid="namespacelibmolgrid">libmolgrid</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Classes and routines for reducing an atom down to a numerical type or vector.</para>
<para>Created on: Feb 27, 2019 Author: dkoes </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifndef<sp/>ATOMTYPER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATOMTYPER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openbabel/atom.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openbabel/elements.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespacelibmolgrid" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelibmolgrid" kindref="compound">libmolgrid</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*****<sp/>Base<sp/>classes<sp/>**********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Docstring_AtomTyper</highlight></codeline>
<codeline lineno="26" refid="classlibmolgrid_1_1AtomTyper" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1AtomTyper" kindref="compound">AtomTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="classlibmolgrid_1_1AtomTyper_1a554d6f387f3aff6cf68c24ffddd08567" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1AtomTyper_1a554d6f387f3aff6cf68c24ffddd08567" kindref="member">AtomTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="29" refid="classlibmolgrid_1_1AtomTyper_1a7fdb3f1fa76c8e3f6fdcddea4f144541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomTyper_1a7fdb3f1fa76c8e3f6fdcddea4f144541" kindref="member">~AtomTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//why<sp/>not<sp/>make<sp/>these<sp/>abstract<sp/>you<sp/>ask?<sp/>python<sp/>bindings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classlibmolgrid_1_1AtomTyper_1ad493bf80b659abb6e401d7fee5c8231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomTyper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Base<sp/>class<sp/>AtomTyper<sp/>function<sp/>called&quot;</highlight><highlight class="normal">);<sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classlibmolgrid_1_1AtomTyper_1a831a48238388829d1fae97d002719674" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomTyper_1a831a48238388829d1fae97d002719674" kindref="member">get_atom_type_vector</ref>(OpenBabel::OBAtom<sp/>*a,<sp/>std::vector&lt;float&gt;&amp;<sp/>typ)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Unimplemented<sp/>atom<sp/>typing<sp/>function<sp/>called&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="35" refid="classlibmolgrid_1_1AtomTyper_1ada10bf195e09de3a351bc4a4649ac629" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1AtomTyper_1ada10bf195e09de3a351bc4a4649ac629" kindref="member">get_atom_type_index</ref>(OpenBabel::OBAtom<sp/>*a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Unimplemented<sp/>atom<sp/>typing<sp/>function<sp/>called&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="36" refid="classlibmolgrid_1_1AtomTyper_1ae263d436c69186ad062ad5339d1d8727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1AtomTyper_1ae263d436c69186ad062ad5339d1d8727" kindref="member">get_int_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Unimplemented<sp/>atom<sp/>typing<sp/>function<sp/>called&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classlibmolgrid_1_1AtomTyper_1aacde71a2d28fc736c3d43da006f3a1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1AtomTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Base<sp/>class<sp/>AtomTyper<sp/>function<sp/>called&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="39" refid="classlibmolgrid_1_1AtomTyper_1a38a567b5922504c0767ac0dcdff287f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomTyper_1a38a567b5922504c0767ac0dcdff287f5" kindref="member">is_vector_typer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Base<sp/>class<sp/>AtomTyper<sp/>function<sp/>called&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classlibmolgrid_1_1AtomIndexTyper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1AtomIndexTyper" kindref="compound">AtomIndexTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomTyper" kindref="compound">AtomTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="classlibmolgrid_1_1AtomIndexTyper_1ae7dde92cf35e2c63afde3176cafcbda3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1ae7dde92cf35e2c63afde3176cafcbda3" kindref="member">AtomIndexTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="46" refid="classlibmolgrid_1_1AtomIndexTyper_1a3a023938558392b20fba9fea9971016a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1a3a023938558392b20fba9fea9971016a" kindref="member">~AtomIndexTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1ae503ecbf9ca173356ef6e475597e2b46" kindref="member">num_types</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classlibmolgrid_1_1AtomIndexTyper_1a4f56173834b1bf3f850e5cb9880eaeea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1a4f56173834b1bf3f850e5cb9880eaeea" kindref="member">get_atom_type_vector</ref>(OpenBabel::OBAtom<sp/>*a,<sp/>std::vector&lt;float&gt;&amp;<sp/>typ)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Vector<sp/>typing<sp/>called<sp/>in<sp/>index<sp/>typer&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1ad802287783424562d69b6ce6a118a7da" kindref="member">get_atom_type_index</ref>(OpenBabel::OBAtom<sp/>*a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1a6b076295fcb7c38c547345e1992fe342" kindref="member">get_int_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1aedda205572fbbaa3a868181802232263" kindref="member">get_type_names</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classlibmolgrid_1_1AtomIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2" kindref="member">get_type_radii</ref>()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;(<ref refid="classlibmolgrid_1_1AtomIndexTyper_1ae503ecbf9ca173356ef6e475597e2b46" kindref="member">num_types</ref>(),<sp/>1.0);<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1a50bdca9ea03cabe38347121b8ef98cad" kindref="member">set_names</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ntypes,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>type_names,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>names);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classlibmolgrid_1_1AtomIndexTyper_1a38a567b5922504c0767ac0dcdff287f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper_1a38a567b5922504c0767ac0dcdff287f5" kindref="member">is_vector_typer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classlibmolgrid_1_1AtomVectorTyper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1AtomVectorTyper" kindref="compound">AtomVectorTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomTyper" kindref="compound">AtomTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classlibmolgrid_1_1AtomVectorTyper_1a7ed73ccec80b6ea1c07199ca32d9beb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper_1a7ed73ccec80b6ea1c07199ca32d9beb9" kindref="member">AtomVectorTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="78" refid="classlibmolgrid_1_1AtomVectorTyper_1ae1c414ec51b7e27172d2adaadbca7312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper_1ae1c414ec51b7e27172d2adaadbca7312" kindref="member">~AtomVectorTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper_1ae503ecbf9ca173356ef6e475597e2b46" kindref="member">num_types</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classlibmolgrid_1_1AtomVectorTyper_1a4dfe192d310ab34f1ca2c4a86bcad367" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper_1a4dfe192d310ab34f1ca2c4a86bcad367" kindref="member">get_atom_type_index</ref>(OpenBabel::OBAtom<sp/>*a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Index<sp/>typer<sp/>called<sp/>in<sp/>vector<sp/>typer&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper_1a2fde235edc45f68d00bde38ee8620646" kindref="member">get_atom_type_vector</ref>(OpenBabel::OBAtom<sp/>*a,<sp/>std::vector&lt;float&gt;&amp;<sp/>typ)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classlibmolgrid_1_1AtomVectorTyper_1a2b70b0f630b2e527f02857ad6735122f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper_1a2b70b0f630b2e527f02857ad6735122f" kindref="member">get_vector_type_radii</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;(<ref refid="classlibmolgrid_1_1AtomVectorTyper_1ae503ecbf9ca173356ef6e475597e2b46" kindref="member">num_types</ref>(),<sp/>1.0);<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>isn&apos;t<sp/>expected<sp/>to<sp/>be<sp/>particularly<sp/>efficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper_1aedda205572fbbaa3a868181802232263" kindref="member">get_type_names</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94" refid="classlibmolgrid_1_1AtomVectorTyper_1a38a567b5922504c0767ac0dcdff287f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper_1a38a567b5922504c0767ac0dcdff287f5" kindref="member">is_vector_typer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classlibmolgrid_1_1AtomIndexTypeMapper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1AtomIndexTypeMapper" kindref="compound">AtomIndexTypeMapper</ref><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102" refid="classlibmolgrid_1_1AtomIndexTypeMapper_1a5d3f8f728d969e963cc44c9d3defa807" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1AtomIndexTypeMapper_1a5d3f8f728d969e963cc44c9d3defa807" kindref="member">AtomIndexTypeMapper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="103" refid="classlibmolgrid_1_1AtomIndexTypeMapper_1a9a71966fb965d0dc1c133c75f8be0359" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTypeMapper_1a9a71966fb965d0dc1c133c75f8be0359" kindref="member">~AtomIndexTypeMapper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classlibmolgrid_1_1AtomIndexTypeMapper_1ad493bf80b659abb6e401d7fee5c8231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTypeMapper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classlibmolgrid_1_1AtomIndexTypeMapper_1a84e5366fb6c4b143c6d05c51785fd6a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTypeMapper_1a84e5366fb6c4b143c6d05c51785fd6a6" kindref="member">get_new_type</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>origt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>origt;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1AtomIndexTypeMapper_1aedda205572fbbaa3a868181802232263" kindref="member">get_type_names</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Docstring_GninaIndexTyper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/***********<sp/>Atom<sp/>typers<sp/>*****************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classlibmolgrid_1_1GninaIndexTyper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper" kindref="compound">AtomIndexTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2d" kindref="member">type</ref><sp/>{</highlight></codeline>
<codeline lineno="126" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da20fa2720571344499f799d2839b23c7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da20fa2720571344499f799d2839b23c7e" kindref="member">Hydrogen</ref>,<sp/></highlight><highlight class="comment">//<sp/>H_H_X,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daa3d3ec6d4feccb909e375261fc5e747a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daa3d3ec6d4feccb909e375261fc5e747a" kindref="member">PolarHydrogen</ref>,</highlight><highlight class="comment">//(can<sp/>donate)<sp/>H_HD_X,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da1ea7ee189d41ec98ed6592d7e07cbe01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da1ea7ee189d41ec98ed6592d7e07cbe01" kindref="member">AliphaticCarbonXSHydrophobe</ref>,</highlight><highlight class="comment">//<sp/>C_C_C_H,<sp/><sp/>//hydrophobic<sp/>according<sp/>to<sp/>xscale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da9b66ff931740ae4be675a9fa83f9c130" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da9b66ff931740ae4be675a9fa83f9c130" kindref="member">AliphaticCarbonXSNonHydrophobe</ref>,</highlight><highlight class="comment">//C_C_C_P,<sp/>//not<sp/>hydrophobic<sp/>(according<sp/>to<sp/>xs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf3113296791638a80d64ba33c5fd4427" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf3113296791638a80d64ba33c5fd4427" kindref="member">AromaticCarbonXSHydrophobe</ref>,</highlight><highlight class="comment">//C_A_C_H,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0bd3db5b7e161ee0ebb624494e30af85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>5<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0bd3db5b7e161ee0ebb624494e30af85" kindref="member">AromaticCarbonXSNonHydrophobe</ref>,</highlight><highlight class="comment">//C_A_C_P,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf766de68d927b08d86af09a7aadbe81b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>6<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf766de68d927b08d86af09a7aadbe81b" kindref="member">Nitrogen</ref>,</highlight><highlight class="comment">//N_N_N_P,<sp/>no<sp/>hydrogen<sp/>bonding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da6abe6c6a3e353efda94a61eec0bc6e1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>7<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da6abe6c6a3e353efda94a61eec0bc6e1c" kindref="member">NitrogenXSDonor</ref>,</highlight><highlight class="comment">//N_N_N_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da5739855eaaa648af57dc0188e3698743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>8<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da5739855eaaa648af57dc0188e3698743" kindref="member">NitrogenXSDonorAcceptor</ref>,</highlight><highlight class="comment">//N_NA_N_DA,<sp/>also<sp/>an<sp/>autodock<sp/>acceptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da99a9bbcbf26abb65fafcebd4ee38b1cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>9<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da99a9bbcbf26abb65fafcebd4ee38b1cc" kindref="member">NitrogenXSAcceptor</ref>,</highlight><highlight class="comment">//N_NA_N_A,<sp/>also<sp/>considered<sp/>an<sp/>acceptor<sp/>by<sp/>autodock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dae54b22e3be885eb43db3925118a89f02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>10<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dae54b22e3be885eb43db3925118a89f02" kindref="member">Oxygen</ref>,</highlight><highlight class="comment">//O_O_O_P,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dae139a25d0b4fda3f0a87918043c19640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>11<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dae139a25d0b4fda3f0a87918043c19640" kindref="member">OxygenXSDonor</ref>,</highlight><highlight class="comment">//O_O_O_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da5a0891509ad2a1599770d76eac6f11b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da5a0891509ad2a1599770d76eac6f11b6" kindref="member">OxygenXSDonorAcceptor</ref>,</highlight><highlight class="comment">//O_OA_O_DA,<sp/>also<sp/>an<sp/>autodock<sp/>acceptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0de17bde588e82e1aed388dd71381026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>13<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0de17bde588e82e1aed388dd71381026" kindref="member">OxygenXSAcceptor</ref>,</highlight><highlight class="comment">//O_OA_O_A,<sp/>also<sp/>an<sp/>autodock<sp/>acceptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dadfc4f003c99e8ae202fa0bbe5433e37d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>14<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dadfc4f003c99e8ae202fa0bbe5433e37d" kindref="member">Sulfur</ref>,</highlight><highlight class="comment">//S_S_S_P,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dab0aaebb4b47401db206171bcbf5f83ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>15<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dab0aaebb4b47401db206171bcbf5f83ff" kindref="member">SulfurAcceptor</ref>,</highlight><highlight class="comment">//S_SA_S_P,<sp/>XS<sp/>doesn&apos;t<sp/>do<sp/>sulfur<sp/>acceptors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dafb6902001cce5e4c30fbf6ff798d14ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>16<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dafb6902001cce5e4c30fbf6ff798d14ff" kindref="member">Phosphorus</ref>,</highlight><highlight class="comment">//P_P_P_P,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da720bc1d5b753af7cf738a52d4b390004" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>17<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da720bc1d5b753af7cf738a52d4b390004" kindref="member">Fluorine</ref>,</highlight><highlight class="comment">//F_F_F_H,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da8b6a342c70d3df3c2927e8a07b798170" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>18<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da8b6a342c70d3df3c2927e8a07b798170" kindref="member">Chlorine</ref>,</highlight><highlight class="comment">//Cl_Cl_Cl_H,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0aa79218b633c599741632eb7393d2fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>19<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da0aa79218b633c599741632eb7393d2fe" kindref="member">Bromine</ref>,</highlight><highlight class="comment">//Br_Br_Br_H,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf293af144ce688a9a2e0a43a9af4e279" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daf293af144ce688a9a2e0a43a9af4e279" kindref="member">Iodine</ref>,</highlight><highlight class="comment">//I_I_I_H,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daff5ab7e500a1c16d48b11aa93bb60439" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>21<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daff5ab7e500a1c16d48b11aa93bb60439" kindref="member">Magnesium</ref>,</highlight><highlight class="comment">//Met_Mg_Met_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da2481971aeae9ed91247d0e6c69447bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>22<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da2481971aeae9ed91247d0e6c69447bcf" kindref="member">Manganese</ref>,</highlight><highlight class="comment">//Met_Mn_Met_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da64391040c4d0c382ba484cfc7dc24cce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>23<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da64391040c4d0c382ba484cfc7dc24cce" kindref="member">Zinc</ref>,</highlight><highlight class="comment">//<sp/>Met_Zn_Met_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da40f67c18f45fbcb3396df8fb55e41145" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>24<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da40f67c18f45fbcb3396df8fb55e41145" kindref="member">Calcium</ref>,</highlight><highlight class="comment">//Met_Ca_Met_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da8750950e70ba4037061ecd568a56b944" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>25<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da8750950e70ba4037061ecd568a56b944" kindref="member">Iron</ref>,</highlight><highlight class="comment">//Met_Fe_Met_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dad89b17a8892a5bd6aac5579a777515e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>26<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2dad89b17a8892a5bd6aac5579a777515e0" kindref="member">GenericMetal</ref>,</highlight><highlight class="comment">//Met_METAL_Met_D,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da3a2170e4ebad18bd68d1cd7ebd73bd3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>27<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2da3a2170e4ebad18bd68d1cd7ebd73bd3d" kindref="member">Boron</ref>,</highlight><highlight class="comment">//there<sp/>are<sp/>160<sp/>cmpds<sp/>in<sp/>pdbbind<sp/>(general,<sp/>not<sp/>refined)<sp/>with<sp/>boron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daac64c8922ff64ae0d88ad358421d026f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daac64c8922ff64ae0d88ad358421d026f" kindref="member">NumTypes</ref></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" kindref="compound">info</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a8d814dd57d2edee2e712cbd86a3127b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2d" kindref="member">type</ref><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a8d814dd57d2edee2e712cbd86a3127b1" kindref="member">sm</ref>;</highlight></codeline>
<codeline lineno="161" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1aa70a63947393694475dc198400e22314" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1aa70a63947393694475dc198400e22314" kindref="member">smina_name</ref>;<sp/></highlight><highlight class="comment">//this<sp/>must<sp/>be<sp/>more<sp/>than<sp/>2<sp/>chars<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a7ca1880f6456c8d72c3efd41b15b48a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a7ca1880f6456c8d72c3efd41b15b48a5" kindref="member">adname</ref>;</highlight><highlight class="comment">//this<sp/>must<sp/>be<sp/>no<sp/>longer<sp/>than<sp/>2<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1ac31cb736bd9681bcba7a596b31e23541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1ac31cb736bd9681bcba7a596b31e23541" kindref="member">anum</ref>;</highlight></codeline>
<codeline lineno="164" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a2bd81ddcf3b54c451533bb335a5a32a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a2bd81ddcf3b54c451533bb335a5a32a8" kindref="member">ad_radius</ref>;</highlight></codeline>
<codeline lineno="165" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1af504cf271d0020317ec1cf9a219a36aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1af504cf271d0020317ec1cf9a219a36aa" kindref="member">ad_depth</ref>;</highlight></codeline>
<codeline lineno="166" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1af030eefb3668c4bf6c51e0184bc9652f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1af030eefb3668c4bf6c51e0184bc9652f" kindref="member">ad_solvation</ref>;</highlight></codeline>
<codeline lineno="167" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1ad47f54e927cd62d42d78ffba9047cf92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1ad47f54e927cd62d42d78ffba9047cf92" kindref="member">ad_volume</ref>;</highlight></codeline>
<codeline lineno="168" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1ad193828e93691abcbfe98341671cf90e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1ad193828e93691abcbfe98341671cf90e" kindref="member">covalent_radius</ref>;</highlight></codeline>
<codeline lineno="169" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a71b62833de40e93190610ebdd26df937" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a71b62833de40e93190610ebdd26df937" kindref="member">xs_radius</ref>;</highlight></codeline>
<codeline lineno="170" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a3c8ad373784fcd045ca46a59b0672a62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a3c8ad373784fcd045ca46a59b0672a62" kindref="member">xs_hydrophobe</ref>;</highlight></codeline>
<codeline lineno="171" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a4d6140923dcfe9e59fe1355ecd106bd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a4d6140923dcfe9e59fe1355ecd106bd1" kindref="member">xs_donor</ref>;</highlight></codeline>
<codeline lineno="172" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a63abb2440710ff892d3e7d1e73607f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a63abb2440710ff892d3e7d1e73607f66" kindref="member">xs_acceptor</ref>;</highlight></codeline>
<codeline lineno="173" refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a1545b973b3b84e111b5983a51e0eec7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info_1a1545b973b3b84e111b5983a51e0eec7e" kindref="member">ad_heteroatom</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_covalent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" kindref="compound">info</ref><sp/>default_data[<ref refid="classlibmolgrid_1_1GninaIndexTyper_1a7aead736a07eaf25623ad7bfa1f0ee2daac64c8922ff64ae0d88ad358421d026f" kindref="member">NumTypes</ref>];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" kindref="compound">info</ref><sp/>*data<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//data<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classlibmolgrid_1_1GninaIndexTyper_1a683729a67c4252fdfa71f23d0810a7ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a683729a67c4252fdfa71f23d0810a7ab" kindref="member">GninaIndexTyper</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usec<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" kindref="compound">info</ref><sp/>*d<sp/>=<sp/>default_data):<sp/>use_covalent(usec),<sp/>data(d)<sp/>{}</highlight></codeline>
<codeline lineno="187" refid="classlibmolgrid_1_1GninaIndexTyper_1a187ae086fdbb7327510642b6dd674634" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a187ae086fdbb7327510642b6dd674634" kindref="member">~GninaIndexTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" kindref="member">num_types</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1afa822a9ced021828013716b9b2e99670" kindref="member">get_atom_type_index</ref>(OpenBabel::OBAtom*<sp/>a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a2f2292603513836fcc299e920d102969" kindref="member">get_int_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" kindref="member">get_type_names</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1adc0b9aacfdd83b3b868ab09424d3c04b" kindref="member">get_type_radii</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classlibmolgrid_1_1GninaIndexTyper_1aef23b5c76e723f1fa66e56819225126b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlibmolgrid_1_1GninaIndexTyper_1_1info" kindref="compound">info</ref>&amp;<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1aef23b5c76e723f1fa66e56819225126b" kindref="member">get_info</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[t];<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper_1a34534793e0879fb3222beee2f60d7e79" kindref="member">gnina_type_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Docstring_ElementIndexTyper</highlight></codeline>
<codeline lineno="220" refid="classlibmolgrid_1_1ElementIndexTyper" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper" kindref="compound">AtomIndexTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>last_elem;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_radius<sp/>=<sp/>1.6;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224" refid="classlibmolgrid_1_1ElementIndexTyper_1ab9328295821875303f26d9c4774a931e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper_1ab9328295821875303f26d9c4774a931e" kindref="member">ElementIndexTyper</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxe<sp/>=<sp/>84):<sp/>last_elem(maxe)<sp/>{}</highlight></codeline>
<codeline lineno="225" refid="classlibmolgrid_1_1ElementIndexTyper_1ad7d3c7e60575c6faecabaa600735bb75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper_1ad7d3c7e60575c6faecabaa600735bb75" kindref="member">~ElementIndexTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" kindref="member">num_types</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper_1afa822a9ced021828013716b9b2e99670" kindref="member">get_atom_type_index</ref>(OpenBabel::OBAtom*<sp/>a)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper_1ad7cd781efd0d97403d12057df9cacbdb" kindref="member">get_int_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" kindref="member">get_type_names</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper_1adc0b9aacfdd83b3b868ab09424d3c04b" kindref="member">get_type_radii</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Docstring_NullIndexTyper</highlight></codeline>
<codeline lineno="246" refid="classlibmolgrid_1_1NullIndexTyper" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1NullIndexTyper" kindref="compound">NullIndexTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper" kindref="compound">AtomIndexTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249" refid="classlibmolgrid_1_1NullIndexTyper_1a2b5c5e1f4b1107290a85a2732dcc7a8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1NullIndexTyper_1a2b5c5e1f4b1107290a85a2732dcc7a8e" kindref="member">NullIndexTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="250" refid="classlibmolgrid_1_1NullIndexTyper_1a02967c797c0102406a258d81dd85919c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1NullIndexTyper_1a02967c797c0102406a258d81dd85919c" kindref="member">~NullIndexTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classlibmolgrid_1_1NullIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1NullIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classlibmolgrid_1_1NullIndexTyper_1ada10bf195e09de3a351bc4a4649ac629" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1NullIndexTyper_1ada10bf195e09de3a351bc4a4649ac629" kindref="member">get_atom_type_index</ref>(OpenBabel::OBAtom*<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(-1,0.0f);<sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="classlibmolgrid_1_1NullIndexTyper_1ae263d436c69186ad062ad5339d1d8727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1NullIndexTyper_1ae263d436c69186ad062ad5339d1d8727" kindref="member">get_int_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(-1,0.0f);}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classlibmolgrid_1_1NullIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1NullIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;();<sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classlibmolgrid_1_1NullIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1NullIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2" kindref="member">get_type_radii</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;();<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classlibmolgrid_1_1CallbackIndexTyper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1CallbackIndexTyper" kindref="compound">CallbackIndexTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper" kindref="compound">AtomIndexTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273" refid="classlibmolgrid_1_1CallbackIndexTyper_1aae8b96fe407c4b9b3d4d6488f382b579" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1CallbackIndexTyper_1aae8b96fe407c4b9b3d4d6488f382b579" kindref="member">AtomIndexTyperFunc</ref><sp/>=<sp/>std::function&lt;std::pair&lt;int,float&gt;(OpenBabel::OBAtom*<sp/>a)&gt;;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1CallbackIndexTyper_1aae8b96fe407c4b9b3d4d6488f382b579" kindref="member">AtomIndexTyperFunc</ref><sp/>callback<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>type_names;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_radius<sp/>=<sp/>1.6;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1CallbackIndexTyper_1afeb018e0ea5231c3b5ac23526abf5361" kindref="member">CallbackIndexTyper</ref>(<ref refid="classlibmolgrid_1_1CallbackIndexTyper_1aae8b96fe407c4b9b3d4d6488f382b579" kindref="member">AtomIndexTyperFunc</ref><sp/>f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ntypes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>names=std::vector&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classlibmolgrid_1_1CallbackIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1CallbackIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_names.size();<sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classlibmolgrid_1_1CallbackIndexTyper_1ada10bf195e09de3a351bc4a4649ac629" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1CallbackIndexTyper_1ada10bf195e09de3a351bc4a4649ac629" kindref="member">get_atom_type_index</ref>(OpenBabel::OBAtom*<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>callback(a);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//don&apos;t<sp/>allow<sp/>out<sp/>of<sp/>range<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret.first<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classlibmolgrid_1_1CallbackIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>())<sp/>ret.first<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//callbacks<sp/>are<sp/>really<sp/>only<sp/>for<sp/>obatom<sp/>typing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classlibmolgrid_1_1CallbackIndexTyper_1ae263d436c69186ad062ad5339d1d8727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1CallbackIndexTyper_1ae263d436c69186ad062ad5339d1d8727" kindref="member">get_int_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classlibmolgrid_1_1CallbackIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>())<sp/>t<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(t,<sp/>default_radius);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classlibmolgrid_1_1CallbackIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1CallbackIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_names;<sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="classlibmolgrid_1_1CallbackIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1CallbackIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2" kindref="member">get_type_radii</ref>()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;(<ref refid="classlibmolgrid_1_1CallbackIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>(),<sp/>default_radius);<sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Mapper,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Typer&gt;</highlight></codeline>
<codeline lineno="315" refid="classlibmolgrid_1_1MappedAtomIndexTyper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTyper" kindref="compound">AtomIndexTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="317" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Mapper<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" kindref="member">mapper</ref>;</highlight></codeline>
<codeline lineno="318" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aeeb1827a1130e65de6fd0844e7bf59ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Typer<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aeeb1827a1130e65de6fd0844e7bf59ee" kindref="member">typer</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aa7748881d87376eeba54ab9fd4bce520" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aa7748881d87376eeba54ab9fd4bce520" kindref="member">type_radii</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="322" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a305231874e49461c034173aa1e04a997" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a305231874e49461c034173aa1e04a997" kindref="member">MappedAtomIndexTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mapper&amp;<sp/>map,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Typer&amp;<sp/>typr):<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" kindref="member">mapper</ref>(map),<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aeeb1827a1130e65de6fd0844e7bf59ee" kindref="member">typer</ref>(typr)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>oldN<sp/>=<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aeeb1827a1130e65de6fd0844e7bf59ee" kindref="member">typer</ref>.num_types();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>newN<sp/>=<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" kindref="member">mapper</ref>.num_types();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;float&gt;<sp/>&gt;<sp/>radii(newN);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ot<sp/>=<sp/>0;<sp/>ot<sp/>&lt;<sp/>oldN;<sp/>ot++)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_r<sp/>=<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aeeb1827a1130e65de6fd0844e7bf59ee" kindref="member">typer</ref>.get_int_type(ot);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t_r.first<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nt<sp/>=<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" kindref="member">mapper</ref>.get_new_type(t_r.first);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nt<sp/>&lt;<sp/>radii.size())<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radii[nt].push_back(t_r.second);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aa7748881d87376eeba54ab9fd4bce520" kindref="member">type_radii</ref>.resize(newN);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>newN;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>n<sp/>=<sp/>radii[i].size();<sp/>j<sp/>&lt;<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>radii[i][j];</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aa7748881d87376eeba54ab9fd4bce520" kindref="member">type_radii</ref>[i]<sp/>=<sp/>sum/radii[i].size();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a65b67c975d90af1716ddb333a8fb46e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a65b67c975d90af1716ddb333a8fb46e4" kindref="member">~MappedAtomIndexTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" kindref="member">mapper</ref>.num_types();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1ada10bf195e09de3a351bc4a4649ac629" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1ada10bf195e09de3a351bc4a4649ac629" kindref="member">get_atom_type_index</ref>(OpenBabel::OBAtom*<sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res_rad<sp/>=<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aeeb1827a1130e65de6fd0844e7bf59ee" kindref="member">typer</ref>.get_atom_type_index(a);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remap<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" kindref="member">mapper</ref>.get_new_type(res_rad.first);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(ret,<sp/>res_rad.second);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//map<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1ae263d436c69186ad062ad5339d1d8727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;int,float&gt;<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1ae263d436c69186ad062ad5339d1d8727" kindref="member">get_int_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res_rad<sp/>=<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aeeb1827a1130e65de6fd0844e7bf59ee" kindref="member">typer</ref>.get_int_type(t);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remap<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" kindref="member">mapper</ref>.get_new_type(res_rad.first);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(ret,<sp/>res_rad.second);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a12d66c8724035ce6b91afef7d5685ae2" kindref="member">mapper</ref>.get_type_names();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1a4e0b27a6f69f970eeb4d5eb4793ebbe2" kindref="member">get_type_radii</ref>()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aa7748881d87376eeba54ab9fd4bce520" kindref="member">type_radii</ref>;<sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Docstring_GninaVectorTyper</highlight></codeline>
<codeline lineno="386" refid="classlibmolgrid_1_1GninaVectorTyper" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper" kindref="compound">GninaVectorTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper" kindref="compound">AtomVectorTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref><sp/>ityper;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>vtype_names;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="390" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58" kindref="member">vtype</ref><sp/>{</highlight></codeline>
<codeline lineno="391" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a20fa2720571344499f799d2839b23c7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a20fa2720571344499f799d2839b23c7e" kindref="member">Hydrogen</ref>,</highlight></codeline>
<codeline lineno="392" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a29aed61cddc081ff18d77c441b9fedb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a29aed61cddc081ff18d77c441b9fedb2" kindref="member">Carbon</ref>,</highlight></codeline>
<codeline lineno="393" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58af766de68d927b08d86af09a7aadbe81b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58af766de68d927b08d86af09a7aadbe81b" kindref="member">Nitrogen</ref>,</highlight></codeline>
<codeline lineno="394" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58ae54b22e3be885eb43db3925118a89f02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58ae54b22e3be885eb43db3925118a89f02" kindref="member">Oxygen</ref>,</highlight></codeline>
<codeline lineno="395" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58adfc4f003c99e8ae202fa0bbe5433e37d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58adfc4f003c99e8ae202fa0bbe5433e37d" kindref="member">Sulfur</ref>,</highlight></codeline>
<codeline lineno="396" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58afb6902001cce5e4c30fbf6ff798d14ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>5<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58afb6902001cce5e4c30fbf6ff798d14ff" kindref="member">Phosphorus</ref>,</highlight></codeline>
<codeline lineno="397" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a720bc1d5b753af7cf738a52d4b390004" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>6<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a720bc1d5b753af7cf738a52d4b390004" kindref="member">Fluorine</ref>,</highlight></codeline>
<codeline lineno="398" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a8b6a342c70d3df3c2927e8a07b798170" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>7<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a8b6a342c70d3df3c2927e8a07b798170" kindref="member">Chlorine</ref>,</highlight></codeline>
<codeline lineno="399" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a0aa79218b633c599741632eb7393d2fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>8<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a0aa79218b633c599741632eb7393d2fe" kindref="member">Bromine</ref>,</highlight></codeline>
<codeline lineno="400" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58af293af144ce688a9a2e0a43a9af4e279" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>9<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58af293af144ce688a9a2e0a43a9af4e279" kindref="member">Iodine</ref>,</highlight></codeline>
<codeline lineno="401" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58aff5ab7e500a1c16d48b11aa93bb60439" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>10<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58aff5ab7e500a1c16d48b11aa93bb60439" kindref="member">Magnesium</ref>,</highlight></codeline>
<codeline lineno="402" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a2481971aeae9ed91247d0e6c69447bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>11<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a2481971aeae9ed91247d0e6c69447bcf" kindref="member">Manganese</ref>,</highlight></codeline>
<codeline lineno="403" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a64391040c4d0c382ba484cfc7dc24cce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>12<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a64391040c4d0c382ba484cfc7dc24cce" kindref="member">Zinc</ref>,</highlight></codeline>
<codeline lineno="404" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a40f67c18f45fbcb3396df8fb55e41145" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>13<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a40f67c18f45fbcb3396df8fb55e41145" kindref="member">Calcium</ref>,</highlight></codeline>
<codeline lineno="405" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a8750950e70ba4037061ecd568a56b944" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>14<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a8750950e70ba4037061ecd568a56b944" kindref="member">Iron</ref>,</highlight></codeline>
<codeline lineno="406" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a3a2170e4ebad18bd68d1cd7ebd73bd3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>15<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a3a2170e4ebad18bd68d1cd7ebd73bd3d" kindref="member">Boron</ref>,</highlight></codeline>
<codeline lineno="407" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a102c874da8d58e697153b870836f97d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>16<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a102c874da8d58e697153b870836f97d7" kindref="member">GenericAtom</ref>,</highlight></codeline>
<codeline lineno="408" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a66071ce81eacf279caeb6181d2b4af77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>17<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a66071ce81eacf279caeb6181d2b4af77" kindref="member">AD_depth</ref>,<sp/></highlight><highlight class="comment">//floating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a94dadc9171990acbc734ebc7b964c24e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>18<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a94dadc9171990acbc734ebc7b964c24e" kindref="member">AD_solvation</ref>,<sp/></highlight><highlight class="comment">//float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58ae946596d3b2f7916326449e286a24d86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>19<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58ae946596d3b2f7916326449e286a24d86" kindref="member">AD_volume</ref>,<sp/></highlight><highlight class="comment">//float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a6fa0bccf04cddf72b9a36f9189e6f826" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>20<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a6fa0bccf04cddf72b9a36f9189e6f826" kindref="member">XS_hydrophobe</ref>,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58adf29561d776262734af9b550a4084d99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>21<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58adf29561d776262734af9b550a4084d99" kindref="member">XS_donor</ref>,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a495ab511fe9d4de716f17c16b88c8381" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>22<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a495ab511fe9d4de716f17c16b88c8381" kindref="member">XS_acceptor</ref>,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a17742e560aabc21a282511133d1d6051" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>23<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a17742e560aabc21a282511133d1d6051" kindref="member">AD_heteroatom</ref>,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a47dac740f8d42f2a95b945a0ca69578d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>24<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a47dac740f8d42f2a95b945a0ca69578d" kindref="member">OB_partialcharge</ref>,<sp/></highlight><highlight class="comment">//float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a64c607937ff8cf2e2d5c22b8b4052b4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>25<sp/>*/</highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58a64c607937ff8cf2e2d5c22b8b4052b4c" kindref="member">Aromatic</ref>,<sp/></highlight><highlight class="comment">//bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58aac64c8922ff64ae0d88ad358421d026f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>26<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a21bf59de2ac4232bcda03cf34a11ac58aac64c8922ff64ae0d88ad358421d026f" kindref="member">NumTypes</ref></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="classlibmolgrid_1_1GninaVectorTyper_1a8aabffa33c33ea047ccfc0f0dc27f512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a8aabffa33c33ea047ccfc0f0dc27f512" kindref="member">GninaVectorTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&amp;<sp/>ityp<sp/>=<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>()):<sp/>ityper(ityp)<sp/>{}</highlight></codeline>
<codeline lineno="421" refid="classlibmolgrid_1_1GninaVectorTyper_1a86b9eabd4c39cba26d8f59d5840e554a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a86b9eabd4c39cba26d8f59d5840e554a" kindref="member">~GninaVectorTyper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1a5e84ac0f1e5fbb3fd24d137b02de0a3f" kindref="member">num_types</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1ae665f55a8d914fa0d36e469284e2443d" kindref="member">get_atom_type_vector</ref>(OpenBabel::OBAtom*<sp/>a,<sp/>std::vector&lt;float&gt;&amp;<sp/>typ)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1ad2de174aee1d2d6da3500c728ee71e23" kindref="member">get_vector_type_radii</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1GninaVectorTyper_1ab179299d9dc6bb3a4bfe868fd60882a6" kindref="member">get_type_names</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classlibmolgrid_1_1CallbackVectorTyper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1CallbackVectorTyper" kindref="compound">CallbackVectorTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomVectorTyper" kindref="compound">AtomVectorTyper</ref><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="442" refid="classlibmolgrid_1_1CallbackVectorTyper_1a44ce451816e206ba621e7bb85b8c3570" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1CallbackVectorTyper_1a44ce451816e206ba621e7bb85b8c3570" kindref="member">AtomVectorTyperFunc</ref><sp/>=<sp/>std::function&lt;float<sp/>(OpenBabel::OBAtom*<sp/>a,<sp/>std::vector&lt;float&gt;&amp;<sp/>)&gt;;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1CallbackVectorTyper_1a44ce451816e206ba621e7bb85b8c3570" kindref="member">AtomVectorTyperFunc</ref><sp/>callback<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>type_names;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1CallbackVectorTyper_1a50cbe32479180cea5aa8c25adda9ee4a" kindref="member">CallbackVectorTyper</ref>(<ref refid="classlibmolgrid_1_1CallbackVectorTyper_1a44ce451816e206ba621e7bb85b8c3570" kindref="member">AtomVectorTyperFunc</ref><sp/>f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ntypes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>names=std::vector&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="classlibmolgrid_1_1CallbackVectorTyper_1ad493bf80b659abb6e401d7fee5c8231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1CallbackVectorTyper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_names.size();<sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="classlibmolgrid_1_1CallbackVectorTyper_1a831a48238388829d1fae97d002719674" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1CallbackVectorTyper_1a831a48238388829d1fae97d002719674" kindref="member">get_atom_type_vector</ref>(OpenBabel::OBAtom*<sp/>a,<sp/>std::vector&lt;float&gt;&amp;<sp/>typ)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>callback(a,<sp/>typ);<sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>vector<sp/>of<sp/>string<sp/>representations<sp/>of<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="classlibmolgrid_1_1CallbackVectorTyper_1aacde71a2d28fc736c3d43da006f3a1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1CallbackVectorTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_names;<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">};</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Docstring_FileAtomMapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/***********<sp/>Atom<sp/>mappers<sp/>*****************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="classlibmolgrid_1_1FileAtomMapper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTypeMapper" kindref="compound">AtomIndexTypeMapper</ref><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>old_type_names;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>old_type_to_new_type;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>new_type_names;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setup<sp/>map<sp/>and<sp/>new<sp/>type<sp/>names,<sp/>assumes<sp/>old_type_names<sp/>is<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(std::istream&amp;<sp/>in);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper_1a2026312e4be308b70d3e93514c33bb65" kindref="member">FileAtomMapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>type_names);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="classlibmolgrid_1_1FileAtomMapper_1afe177a2d3bc6915733327f7dacec723a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper_1afe177a2d3bc6915733327f7dacec723a" kindref="member">FileAtomMapper</ref>(std::istream&amp;<sp/>in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>type_names):<sp/>old_type_names(type_names)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup(in);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="classlibmolgrid_1_1FileAtomMapper_1a4f9602176f27630df390aedc8d5f5614" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper_1a4f9602176f27630df390aedc8d5f5614" kindref="member">~FileAtomMapper</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="classlibmolgrid_1_1FileAtomMapper_1ad493bf80b659abb6e401d7fee5c8231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_type_names.size();<sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper_1a65bf8d6eed03de1b4e3d6fdde34adabd" kindref="member">get_new_type</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>origt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>mapped<sp/>type<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="classlibmolgrid_1_1FileAtomMapper_1aacde71a2d28fc736c3d43da006f3a1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1FileAtomMapper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_type_names;<sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">};</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Docstring_SubsetAtomMapper</highlight></codeline>
<codeline lineno="506" refid="classlibmolgrid_1_1SubsetAtomMapper" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1AtomIndexTypeMapper" kindref="compound">AtomIndexTypeMapper</ref><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;int,<sp/>int&gt;<sp/>old2new;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>new_type_names;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_type<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>in<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>num_new_types<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper_1a4a83e99735e832950df79857b47d8d84" kindref="member">SubsetAtomMapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>old_names<sp/>=<sp/>std::vector&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper_1a4a83e99735e832950df79857b47d8d84" kindref="member">SubsetAtomMapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>old_names<sp/>=<sp/>std::vector&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="classlibmolgrid_1_1SubsetAtomMapper_1ad493bf80b659abb6e401d7fee5c8231a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper_1ad493bf80b659abb6e401d7fee5c8231a" kindref="member">num_types</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_new_types;<sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper_1a65bf8d6eed03de1b4e3d6fdde34adabd" kindref="member">get_new_type</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>origt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="classlibmolgrid_1_1SubsetAtomMapper_1aacde71a2d28fc736c3d43da006f3a1c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_type_names;<sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">};</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Docstring_SubsettedElementTyper</highlight></codeline>
<codeline lineno="532" refid="classlibmolgrid_1_1SubsettedElementTyper" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1SubsettedElementTyper" kindref="compound">SubsettedElementTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;SubsetAtomMapper,<sp/>ElementIndexTyper&gt;<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="534" refid="classlibmolgrid_1_1SubsettedElementTyper_1abebdf0adfe4d416e90654fc93f21bbca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedElementTyper_1abebdf0adfe4d416e90654fc93f21bbca" kindref="member">SubsettedElementTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxe<sp/>=<sp/>84):</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedElementTyper" kindref="compound">SubsettedElementTyper</ref>(<ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>(maxe),<sp/>map,<sp/>include_catchall)<sp/>{<sp/></highlight><highlight class="comment">//delegating<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="classlibmolgrid_1_1SubsettedElementTyper_1a4faa1f9361beb1a18de23b802889be26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedElementTyper_1a4faa1f9361beb1a18de23b802889be26" kindref="member">SubsettedElementTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>&amp;<sp/>etyper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;<ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>,<sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>&gt;(</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>(map,include_catchall,etyper.<ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()),etyper)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="classlibmolgrid_1_1SubsettedElementTyper_1a3b23aa7c01654bab5b4eb0f0bb624d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedElementTyper_1a3b23aa7c01654bab5b4eb0f0bb624d14" kindref="member">SubsettedElementTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxe<sp/>=<sp/>84):</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedElementTyper" kindref="compound">SubsettedElementTyper</ref>(<ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>(maxe),<sp/>map,<sp/>include_catchall)<sp/>{<sp/></highlight><highlight class="comment">//delegating<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="classlibmolgrid_1_1SubsettedElementTyper_1ab26b70999f83ecc99c91960fd1bea164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedElementTyper_1ab26b70999f83ecc99c91960fd1bea164" kindref="member">SubsettedElementTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>&amp;<sp/>etyper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;<ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>,<sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>&gt;(</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>(map,include_catchall,etyper.<ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()),etyper)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal">};</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="classlibmolgrid_1_1SubsettedGninaTyper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1SubsettedGninaTyper" kindref="compound">SubsettedGninaTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;SubsetAtomMapper,<sp/>GninaIndexTyper&gt;<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="556" refid="classlibmolgrid_1_1SubsettedGninaTyper_1a52fc24c4c49fcff8a28e41e937383981" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedGninaTyper_1a52fc24c4c49fcff8a28e41e937383981" kindref="member">SubsettedGninaTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usec<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedGninaTyper" kindref="compound">SubsettedGninaTyper</ref>(<ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>(usec),<sp/>map,<sp/>include_catchall)<sp/>{<sp/></highlight><highlight class="comment">//delegating<sp/>constructor<sp/>to<sp/>avoid<sp/>multiple<sp/>constructions<sp/>of<sp/>typer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="classlibmolgrid_1_1SubsettedGninaTyper_1a6656407c918520af09a6a84a68ec7ac7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedGninaTyper_1a6656407c918520af09a6a84a68ec7ac7" kindref="member">SubsettedGninaTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&amp;<sp/>etyper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;<ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>,<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&gt;(</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>(map,include_catchall,etyper.<ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()),etyper)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="classlibmolgrid_1_1SubsettedGninaTyper_1a52db7546e06d5a54afff6c5b685107db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedGninaTyper_1a52db7546e06d5a54afff6c5b685107db" kindref="member">SubsettedGninaTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usec<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedGninaTyper" kindref="compound">SubsettedGninaTyper</ref>(<ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>(usec),<sp/>map,<sp/>include_catchall)<sp/>{<sp/></highlight><highlight class="comment">//delegating<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="classlibmolgrid_1_1SubsettedGninaTyper_1a42a78c9d3ae26f38181020758d89116f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsettedGninaTyper_1a42a78c9d3ae26f38181020758d89116f" kindref="member">SubsettedGninaTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&amp;<sp/>etyper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>include_catchall=</highlight><highlight class="keyword">true</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;<ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>,<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&gt;(</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1SubsetAtomMapper" kindref="compound">SubsetAtomMapper</ref>(map,include_catchall,etyper.<ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()),etyper)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal">};</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="576" refid="classlibmolgrid_1_1FileMappedElementTyper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1FileMappedElementTyper" kindref="compound">FileMappedElementTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;FileAtomMapper,<sp/>ElementIndexTyper&gt;<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="578" refid="classlibmolgrid_1_1FileMappedElementTyper_1a795c7339d3ef54ebfab5ae0b62413f08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedElementTyper_1a795c7339d3ef54ebfab5ae0b62413f08" kindref="member">FileMappedElementTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxe<sp/>=<sp/>84):</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedElementTyper" kindref="compound">FileMappedElementTyper</ref>(<ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>(maxe),<sp/>fname)<sp/>{<sp/></highlight><highlight class="comment">//delegating<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="classlibmolgrid_1_1FileMappedElementTyper_1a0faecdcada8944e9b9b3b68dea5e5588" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedElementTyper_1a0faecdcada8944e9b9b3b68dea5e5588" kindref="member">FileMappedElementTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>&amp;<sp/>etyper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname):</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;<ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref>,<sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>&gt;(</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref>(fname,etyper.<ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()),etyper)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="classlibmolgrid_1_1FileMappedElementTyper_1a589a71c408722b354b3d770231417767" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedElementTyper_1a589a71c408722b354b3d770231417767" kindref="member">FileMappedElementTyper</ref>(std::istream&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>maxe<sp/>=<sp/>84):</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedElementTyper" kindref="compound">FileMappedElementTyper</ref>(<ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>(maxe),<sp/>i)<sp/>{<sp/></highlight><highlight class="comment">//delegating<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="classlibmolgrid_1_1FileMappedElementTyper_1ac6ac951d70d468686bb8d122dd1a23b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedElementTyper_1ac6ac951d70d468686bb8d122dd1a23b1" kindref="member">FileMappedElementTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>&amp;<sp/>etyper,<sp/>std::istream&amp;<sp/>i):</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;<ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref>,<sp/><ref refid="classlibmolgrid_1_1ElementIndexTyper" kindref="compound">ElementIndexTyper</ref>&gt;(</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref>(i,etyper.<ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()),etyper)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal">};</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="classlibmolgrid_1_1FileMappedGninaTyper" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;FileAtomMapper,<sp/>GninaIndexTyper&gt;<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="600" refid="classlibmolgrid_1_1FileMappedGninaTyper_1a526261bd16ea412fd79339097dcbf675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper_1a526261bd16ea412fd79339097dcbf675" kindref="member">FileMappedGninaTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usec<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref>(<ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>(usec),<sp/>fname)<sp/>{<sp/></highlight><highlight class="comment">//delegating<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="classlibmolgrid_1_1FileMappedGninaTyper_1ad6bb361503a8d59d64f22b7d3636fa2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper_1ad6bb361503a8d59d64f22b7d3636fa2b" kindref="member">FileMappedGninaTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&amp;<sp/>etyper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fname):</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;<ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref>,<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&gt;(</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref>(fname,etyper.<ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()),etyper)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="classlibmolgrid_1_1FileMappedGninaTyper_1a9037c6e349dd27eccf31eff4314792ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper_1a9037c6e349dd27eccf31eff4314792ee" kindref="member">FileMappedGninaTyper</ref>(std::istream&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usec<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper" kindref="compound">FileMappedGninaTyper</ref>(<ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>(usec),<sp/>i)<sp/>{<sp/></highlight><highlight class="comment">//delegating<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="classlibmolgrid_1_1FileMappedGninaTyper_1ad1dcc7134bb0ff077e729a7504cc5f88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileMappedGninaTyper_1ad1dcc7134bb0ff077e729a7504cc5f88" kindref="member">FileMappedGninaTyper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&amp;<sp/>etyper,<sp/>std::istream&amp;<sp/>i):</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1MappedAtomIndexTyper" kindref="compound">MappedAtomIndexTyper</ref>&lt;<ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref>,<sp/><ref refid="classlibmolgrid_1_1GninaIndexTyper" kindref="compound">GninaIndexTyper</ref>&gt;(</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlibmolgrid_1_1FileAtomMapper" kindref="compound">FileAtomMapper</ref>(i,etyper.<ref refid="classlibmolgrid_1_1MappedAtomIndexTyper_1aacde71a2d28fc736c3d43da006f3a1c6" kindref="member">get_type_names</ref>()),etyper)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal">};</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>FileMappedGninaTyper<sp/><ref refid="namespacelibmolgrid_1aed6bc2269142acee6e4fdd214209c175" kindref="member">defaultGninaReceptorTyper</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>FileMappedGninaTyper<sp/><ref refid="namespacelibmolgrid_1a371ec05022b3d175a5b02d540f947ac2" kindref="member">defaultGninaLigandTyper</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>libmolgrid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ATOMTYPER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/dkoes/git/libmolgrid/include/libmolgrid/atom_typer.h"/>
  </compounddef>
</doxygen>
